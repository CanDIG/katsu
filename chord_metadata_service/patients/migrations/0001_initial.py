# Generated by Django 2.2.6 on 2019-10-02 18:58

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Biosample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('biosample_id', models.CharField(max_length=200)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('sampled_tissue', django.contrib.postgres.fields.jsonb.JSONField()),
                ('taxonomy', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('individual_age_at_collection', models.CharField(blank=True, max_length=200)),
                ('historical_diagnosis', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('tumor_progression', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('tumor_grade', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('diagnostic_marker', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('is_control_sample', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', django.contrib.postgres.fields.jsonb.JSONField()),
                ('onset', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('tumor_stage', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExternalReference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_reference_id', models.CharField(max_length=200)),
                ('description', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Gene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene_id', models.CharField(max_length=200, unique=True)),
                ('alternate_id', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200), size=None)),
                ('symbol', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='HtsFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.URLField()),
                ('description', models.CharField(blank=True, max_length=200)),
                ('hts_format', models.CharField(choices=[('UNKNOWN', 'UNKNOWN'), ('SAM', 'SAM'), ('BAM', 'BAM'), ('CRAM', 'CRAM'), ('VCF', 'VCF'), ('BCF', 'BCF'), ('GVCF', 'GVCF')], max_length=200)),
                ('genome_assembly', models.CharField(max_length=200)),
                ('individual_to_sample_identifiers', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Individual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('individual_id', models.CharField(max_length=200)),
                ('alternate_id', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, null=True, size=None)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('age', models.CharField(blank=True, max_length=200)),
                ('sex', models.CharField(blank=True, choices=[('UNKNOWN_SEX', 'UNKNOWN_SEX'), ('FEMALE', 'FEMALE'), ('MALE', 'MALE'), ('OTHER_SEX', 'OTHER_SEX')], max_length=200, null=True)),
                ('karyotypic_sex', models.CharField(blank=True, choices=[('UNKNOWN_KARYOTYPE', 'UNKNOWN_KARYOTYPE'), ('XX', 'XX'), ('XY', 'XY'), ('XO', 'XO'), ('XXY', 'XXY'), ('XXX', 'XXX'), ('XXYY', 'XXYY'), ('XXXY', 'XXXY'), ('XXXX', 'XXXX'), ('XYY', 'XYY'), ('OTHER_KARYOTYPE', 'OTHER_KARYOTYPE')], max_length=200)),
                ('taxonomy', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MetaData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=200)),
                ('submitted_by', models.CharField(blank=True, max_length=200)),
                ('phenopacket_schema_version', models.CharField(blank=True, max_length=200)),
                ('external_reference', models.ManyToManyField(blank=True, to='patients.ExternalReference')),
            ],
        ),
        migrations.CreateModel(
            name='PhenotypicFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=200)),
                ('phenotype', django.contrib.postgres.fields.jsonb.JSONField()),
                ('negated', models.BooleanField(default=False)),
                ('severity', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('modifier', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('onset', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('evidence', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Procedure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', django.contrib.postgres.fields.jsonb.JSONField()),
                ('body_site', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_id', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('namespace_prefix', models.CharField(max_length=200)),
                ('url', models.URLField()),
                ('version', models.CharField(max_length=200)),
                ('iri_prefix', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Update',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_by', models.CharField(blank=True, max_length=200)),
                ('comment', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allele_type', models.CharField(choices=[('hgvsAllele', 'hgvsAllele'), ('vcfAllele', 'vcfAllele'), ('spdiAllele', 'spdiAllele'), ('iscnAllele', 'iscnAllele')], max_length=200)),
                ('allele', django.contrib.postgres.fields.jsonb.JSONField()),
                ('zygosity', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VcfAllele',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vcf_allele_id', models.CharField(blank=True, max_length=200)),
                ('genome_assembly', models.CharField(max_length=200)),
                ('_chr', models.CharField(max_length=200)),
                ('pos', models.IntegerField()),
                ('re', models.CharField(max_length=200)),
                ('alt', models.CharField(max_length=200)),
                ('info', models.CharField(blank=True, max_length=500)),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.Variant')),
            ],
        ),
        migrations.CreateModel(
            name='SpdiAllele',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spdi_allele_id', models.CharField(blank=True, max_length=200)),
                ('seq_id', models.CharField(max_length=200)),
                ('position', models.IntegerField()),
                ('deleted_sequence', models.CharField(max_length=200)),
                ('inserted_sequence', models.CharField(max_length=200)),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.Variant')),
            ],
        ),
        migrations.CreateModel(
            name='Phenopacket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phenopacket_id', models.CharField(max_length=200)),
                ('biosample', models.ManyToManyField(blank=True, to='patients.Biosample')),
                ('disease', models.ManyToManyField(blank=True, to='patients.Disease')),
                ('gene', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patients.Gene')),
                ('hts_file', models.ManyToManyField(blank=True, to='patients.HtsFile')),
                ('meta_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.MetaData')),
                ('phenotypic_feature', models.ManyToManyField(blank=True, to='patients.PhenotypicFeature')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.Individual')),
                ('variant', models.ManyToManyField(blank=True, to='patients.Variant')),
            ],
        ),
        migrations.AddField(
            model_name='metadata',
            name='resource',
            field=models.ManyToManyField(to='patients.Resource'),
        ),
        migrations.AddField(
            model_name='metadata',
            name='update',
            field=models.ManyToManyField(blank=True, to='patients.Update'),
        ),
        migrations.CreateModel(
            name='IscnAllele',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iscn_allele_id', models.CharField(blank=True, max_length=200)),
                ('iscn', models.CharField(max_length=200)),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.Variant')),
            ],
        ),
        migrations.CreateModel(
            name='Interpretation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interpretation_id', models.CharField(max_length=200)),
                ('resolution_status', models.CharField(blank=True, choices=[('UNKNOWN', 'UNKNOWN'), ('SOLVED', 'SOLVED'), ('UNSOLVED', 'UNSOLVED'), ('IN_PROGRESS', 'IN_PROGRESS')], max_length=200)),
                ('diagnosis', models.ManyToManyField(to='patients.Diagnosis')),
                ('meta_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.MetaData')),
                ('phenopacket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.Phenopacket')),
            ],
        ),
        migrations.CreateModel(
            name='HgvsAllele',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hgvs_allele_id', models.CharField(blank=True, max_length=200)),
                ('hgvs', models.CharField(max_length=200)),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.Variant')),
            ],
        ),
        migrations.CreateModel(
            name='GenomicInterpretation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('UNKNOWN', 'UNKNOWN'), ('REJECTED', 'REJECTED'), ('CANDIDATE', 'CANDIDATE'), ('CAUSATIVE', 'CAUSATIVE')], max_length=200)),
                ('gene', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patients.Gene', to_field='gene_id')),
                ('variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patients.Variant')),
            ],
        ),
        migrations.AddField(
            model_name='diagnosis',
            name='disease',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.Disease'),
        ),
        migrations.AddField(
            model_name='diagnosis',
            name='genomic_interpretation',
            field=models.ManyToManyField(blank=True, to='patients.GenomicInterpretation'),
        ),
        migrations.AddField(
            model_name='biosample',
            name='hts_file',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patients.HtsFile'),
        ),
        migrations.AddField(
            model_name='biosample',
            name='individual',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patients.Individual'),
        ),
        migrations.AddField(
            model_name='biosample',
            name='phenotypic_feature',
            field=models.ManyToManyField(blank=True, to='patients.PhenotypicFeature'),
        ),
        migrations.AddField(
            model_name='biosample',
            name='procedure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.Procedure'),
        ),
        migrations.AddField(
            model_name='biosample',
            name='variant',
            field=models.ManyToManyField(blank=True, to='patients.Variant'),
        ),
    ]
