# Generated by Django 2.2.11 on 2020-03-23 21:50

import chord_metadata_service.restapi.models
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.CharField(help_text='An arbitrary identifier for the individual.', max_length=200, primary_key=True, serialize=False)),
                ('reference_registry_id', models.CharField(blank=True, help_text='The IHEC EpiRR ID for this dataset, only for IHEC Reference Epigenome datasets. Otherwise leave empty.', max_length=30, null=True)),
                ('qc_flags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, help_text='Any quanlity control observations can be noted here. This field can be omitted if empty', max_length=30, null=True), size=None)),
                ('experiment_type', models.CharField(blank=True, help_text="(Controlled Vocabulary) The assay target (e.g. ‘DNA Methylation’, ‘mRNA-Seq’, ‘smRNA-Seq’, 'Histone H3K4me1').", max_length=30, null=True)),
                ('experiment_ontology_curie', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, help_text='(Ontology: OBI) links to experiment ontology information.', max_length=30, null=True, validators=[django.core.validators.RegexValidator(regex='^[A-Za-z]*:[A-Za-z0-9]*')]), size=None)),
                ('molecule_ontology_curie', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, help_text='(Ontology: SO) links to molecule ontology information.', max_length=30, null=True, validators=[django.core.validators.RegexValidator(regex='^[A-Za-z]*:[A-Za-z0-9]*')]), size=None)),
                ('molecule', models.CharField(blank=True, choices=[('total RNA', 'total RNA'), ('polyA RNA', 'polyA RNA'), ('cytoplasmic RNA', 'cytoplasmic RNA'), ('nuclear RNA', 'nuclear RNA'), ('small RNA', 'small RNA'), ('genomic DNA', 'genomic DNA'), ('protein', 'protein'), ('other', 'other')], help_text='(Controlled Vocabulary) The type of molecule that was extracted from the biological material. Include one of the following: total RNA, polyA RNA, cytoplasmic RNA, nuclear RNA, small RNA, genomic DNA, protein, or other.', max_length=20, null=True)),
                ('library_strategy', models.CharField(choices=[('DNase-Hypersensitivity', 'DNase-Hypersensitivity'), ('ATAC-seq', 'ATAC-seq'), ('NOME-Seq', 'NOME-Seq'), ('Bisulfite-Seq', 'Bisulfite-Seq'), ('MeDIP-Seq', 'MeDIP-Seq'), ('MRE-Seq', 'MRE-Seq'), ('ChIP-Seq', 'ChIP-Seq'), ('RNA-Seq', 'RNA-Seq'), ('miRNA-Seq', 'miRNA-Seq'), ('WGS', 'WGS')], help_text='(Controlled Vocabulary) The assay used. These are defined within the SRA metadata specifications with a controlled vocabulary (e.g. ‘Bisulfite-Seq’, ‘RNA-Seq’, ‘ChIP-Seq’). For a complete list, see https://www.ebi.ac.uk/ena/submit/reads-library-strategy.', max_length=25)),
                ('other_fields', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='The other fields for the experiment', null=True)),
            ],
            bases=(models.Model, chord_metadata_service.restapi.models.IndexableMixin),
        ),
    ]
