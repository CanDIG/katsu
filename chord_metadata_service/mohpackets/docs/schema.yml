openapi: 3.0.3
info:
  title: Metadata Service API
  version: 1.0.0
  description: Metadata Service provides a phenotypic description of an Individual
    in the context of biomedical research.
paths:
  /api/batch/individuals:
    post:
      operationId: api_batch_individuals_create
      description: |-
        A viewset that only implements the 'list' action.
        To be used with the BatchListRouter which maps the POST method to .list()
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndividualRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IndividualRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IndividualRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIndividualList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedIndividualList'
          description: ''
  /api/biosamples:
    get:
      operationId: api_biosamples_list
      description: |-
        get:
        Return a list of all existing biosamples

        post:
        Create a new biosample
      parameters:
      - in: query
        name: id
        schema:
          type: string
      - in: query
        name: individual
        schema:
          type: string
        description: An arbitrary identifier for the individual.
      - in: query
        name: procedure
        schema:
          type: integer
      - in: query
        name: is_control_sample
        schema:
          type: boolean
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: sampled_tissue
        schema:
          type: string
        description: Sampled tissue
      - in: query
        name: taxonomy
        schema:
          type: string
        description: Taxonomy
      - in: query
        name: histological_diagnosis
        schema:
          type: string
        description: Histological diagnosis
      - in: query
        name: tumor_progression
        schema:
          type: string
        description: Tumor progression
      - in: query
        name: tumor_grade
        schema:
          type: string
        description: Tumor grade
      - in: query
        name: extra_properties
        schema:
          type: string
        description: Extra properties
      - in: query
        name: datasets
        schema:
          type: string
        description: Datasets
      - in: query
        name: authorized_datasets
        schema:
          type: string
        description: Authorized datasets
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBiosampleList'
          description: ''
    post:
      operationId: api_biosamples_create
      description: |-
        get:
        Return a list of all existing biosamples

        post:
        Create a new biosample
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BiosampleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BiosampleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BiosampleRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Biosample'
          description: ''
  /api/biosamples/{id}:
    get:
      operationId: api_biosamples_retrieve
      description: |-
        get:
        Return a list of all existing biosamples

        post:
        Create a new biosample
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: Unique arbitrary, researcher-specified identifier for the biosample.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Biosample'
          description: ''
    put:
      operationId: api_biosamples_update
      description: |-
        get:
        Return a list of all existing biosamples

        post:
        Create a new biosample
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: Unique arbitrary, researcher-specified identifier for the biosample.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BiosampleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BiosampleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BiosampleRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Biosample'
          description: ''
    patch:
      operationId: api_biosamples_partial_update
      description: |-
        get:
        Return a list of all existing biosamples

        post:
        Create a new biosample
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: Unique arbitrary, researcher-specified identifier for the biosample.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBiosampleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBiosampleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBiosampleRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Biosample'
          description: ''
    delete:
      operationId: api_biosamples_destroy
      description: |-
        get:
        Return a list of all existing biosamples

        post:
        Create a new biosample
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: Unique arbitrary, researcher-specified identifier for the biosample.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/chord_phenopacket_schema:
    get:
      operationId: api_chord_phenopacket_schema_retrieve
      description: Chord phenopacket schema that can be shared with data providers
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chord_phenopacket_schema_response'
          description: ''
  /api/datasets:
    get:
      operationId: api_datasets_list
      description: |-
        get:
        Return a list of all existing datasets

        post:
        Create a new dataset
      parameters:
      - in: query
        name: datasets
        schema:
          type: string
        description: Datasets
      - in: query
        name: authorized_datasets
        schema:
          type: string
        description: Authorized datasets
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - json-ld
          - phenopackets
          - rdf
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDatasetList'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PaginatedDatasetList'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/PaginatedDatasetList'
          description: ''
    post:
      operationId: api_datasets_create
      description: |-
        get:
        Return a list of all existing datasets

        post:
        Create a new dataset
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - json-ld
          - phenopackets
          - rdf
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DatasetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DatasetRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Dataset'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
  /api/datasets/{identifier}:
    get:
      operationId: api_datasets_retrieve
      description: |-
        get:
        Return a list of all existing datasets

        post:
        Create a new dataset
      parameters:
      - in: path
        name: identifier
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this dataset.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - json-ld
          - phenopackets
          - rdf
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Dataset'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
    put:
      operationId: api_datasets_update
      description: |-
        get:
        Return a list of all existing datasets

        post:
        Create a new dataset
      parameters:
      - in: path
        name: identifier
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this dataset.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - json-ld
          - phenopackets
          - rdf
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DatasetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DatasetRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Dataset'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
    patch:
      operationId: api_datasets_partial_update
      description: |-
        get:
        Return a list of all existing datasets

        post:
        Create a new dataset
      parameters:
      - in: path
        name: identifier
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this dataset.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - json-ld
          - phenopackets
          - rdf
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDatasetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDatasetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDatasetRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Dataset'
            application/rdf+xml:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
    delete:
      operationId: api_datasets_destroy
      description: |-
        get:
        Return a list of all existing datasets

        post:
        Create a new dataset
      parameters:
      - in: path
        name: identifier
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this dataset.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - json-ld
          - phenopackets
          - rdf
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/diagnoses:
    get:
      operationId: api_diagnoses_list
      description: |-
        get:
        Return a list of all existing diagnoses

        post:
        Create a new diagnosis
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: disease_type
        schema:
          type: string
        description: Disease type
      - in: query
        name: extra_properties
        schema:
          type: string
        description: Extra properties
      - in: query
        name: datasets
        schema:
          type: string
        description: Datasets
      - in: query
        name: authorized_datasets
        schema:
          type: string
        description: Authorized datasets
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDiagnosisList'
          description: ''
    post:
      operationId: api_diagnoses_create
      description: |-
        get:
        Return a list of all existing diagnoses

        post:
        Create a new diagnosis
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnosisRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiagnosisRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiagnosisRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diagnosis'
          description: ''
  /api/diagnoses/{id}:
    get:
      operationId: api_diagnoses_retrieve
      description: |-
        get:
        Return a list of all existing diagnoses

        post:
        Create a new diagnosis
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this diagnosis.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diagnosis'
          description: ''
    put:
      operationId: api_diagnoses_update
      description: |-
        get:
        Return a list of all existing diagnoses

        post:
        Create a new diagnosis
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this diagnosis.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnosisRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiagnosisRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiagnosisRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diagnosis'
          description: ''
    patch:
      operationId: api_diagnoses_partial_update
      description: |-
        get:
        Return a list of all existing diagnoses

        post:
        Create a new diagnosis
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this diagnosis.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDiagnosisRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDiagnosisRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDiagnosisRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diagnosis'
          description: ''
    delete:
      operationId: api_diagnoses_destroy
      description: |-
        get:
        Return a list of all existing diagnoses

        post:
        Create a new diagnosis
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this diagnosis.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/diseases:
    get:
      operationId: api_diseases_list
      description: |-
        get:
        Return a list of all existing diseases

        post:
        Create a new disease
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: term
        schema:
          type: string
        description: Term
      - in: query
        name: extra_properties
        schema:
          type: string
        description: Extra properties
      - in: query
        name: extra_properties_datatype
        schema:
          type: string
        description: Extra properties datatype
      - in: query
        name: extra_properties_comorbidities_group
        schema:
          type: string
        description: Extra properties comorbidities group
      - in: query
        name: individual
        schema:
          type: string
        description: Individual
      - in: query
        name: datasets
        schema:
          type: string
        description: Datasets
      - in: query
        name: authorized_datasets
        schema:
          type: string
        description: Authorized datasets
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDiseaseList'
          description: ''
    post:
      operationId: api_diseases_create
      description: |-
        get:
        Return a list of all existing diseases

        post:
        Create a new disease
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiseaseRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiseaseRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiseaseRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disease'
          description: ''
  /api/diseases/{id}:
    get:
      operationId: api_diseases_retrieve
      description: |-
        get:
        Return a list of all existing diseases

        post:
        Create a new disease
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this disease.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disease'
          description: ''
    put:
      operationId: api_diseases_update
      description: |-
        get:
        Return a list of all existing diseases

        post:
        Create a new disease
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this disease.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiseaseRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiseaseRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiseaseRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disease'
          description: ''
    patch:
      operationId: api_diseases_partial_update
      description: |-
        get:
        Return a list of all existing diseases

        post:
        Create a new disease
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this disease.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDiseaseRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDiseaseRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDiseaseRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disease'
          description: ''
    delete:
      operationId: api_diseases_destroy
      description: |-
        get:
        Return a list of all existing diseases

        post:
        Create a new disease
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this disease.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/experiment_schema:
    get:
      operationId: api_experiment_schema_retrieve
      description: Experiment schema
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_experiment_schema_response'
          description: ''
  /api/experimentresults:
    get:
      operationId: api_experimentresults_list
      description: |-
        get:
        Return a list of all existing experiment results

        post:
        Create a new experiment result
      parameters:
      - in: query
        name: identifier
        schema:
          type: string
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: filename
        schema:
          type: string
      - in: query
        name: genome_assembly_id
        schema:
          type: string
      - in: query
        name: file_format
        schema:
          type: string
      - in: query
        name: data_output_type
        schema:
          type: string
      - in: query
        name: usage
        schema:
          type: string
      - in: query
        name: created_by
        schema:
          type: string
      - in: query
        name: extra_properties
        schema:
          type: string
        description: Extra properties
      - in: query
        name: datasets
        schema:
          type: string
        description: Datasets
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExperimentResultList'
          description: ''
    post:
      operationId: api_experimentresults_create
      description: |-
        get:
        Return a list of all existing experiment results

        post:
        Create a new experiment result
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExperimentResultRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExperimentResultRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExperimentResultRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentResult'
          description: ''
  /api/experimentresults/{id}:
    get:
      operationId: api_experimentresults_retrieve
      description: |-
        get:
        Return a list of all existing experiment results

        post:
        Create a new experiment result
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this experiment result.
        required: true
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentResult'
          description: ''
    put:
      operationId: api_experimentresults_update
      description: |-
        get:
        Return a list of all existing experiment results

        post:
        Create a new experiment result
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this experiment result.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExperimentResultRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExperimentResultRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExperimentResultRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentResult'
          description: ''
    patch:
      operationId: api_experimentresults_partial_update
      description: |-
        get:
        Return a list of all existing experiment results

        post:
        Create a new experiment result
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this experiment result.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExperimentResultRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExperimentResultRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExperimentResultRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentResult'
          description: ''
    delete:
      operationId: api_experimentresults_destroy
      description: |-
        get:
        Return a list of all existing experiment results

        post:
        Create a new experiment result
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this experiment result.
        required: true
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/experiments:
    get:
      operationId: api_experiments_list
      description: |-
        get:
        Return a list of all existing experiments

        post:
        Create a new experiment
      parameters:
      - in: query
        name: id
        schema:
          type: string
      - in: query
        name: reference_registry_id
        schema:
          type: string
      - in: query
        name: biosample
        schema:
          type: string
        description: Unique arbitrary, researcher-specified identifier for the biosample.
      - in: query
        name: study_type
        schema:
          type: string
      - in: query
        name: experiment_type
        schema:
          type: string
      - in: query
        name: molecule
        schema:
          type: string
      - in: query
        name: library_strategy
        schema:
          type: string
      - in: query
        name: library_source
        schema:
          type: string
      - in: query
        name: library_selection
        schema:
          type: string
      - in: query
        name: library_layout
        schema:
          type: string
      - in: query
        name: extraction_protocol
        schema:
          type: string
      - in: query
        name: extra_properties
        schema:
          type: string
        description: Extra properties
      - in: query
        name: datasets
        schema:
          type: string
        description: Datasets
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExperimentList'
          description: ''
    post:
      operationId: api_experiments_create
      description: |-
        get:
        Return a list of all existing experiments

        post:
        Create a new experiment
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExperimentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExperimentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExperimentRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ''
  /api/experiments/{id}:
    get:
      operationId: api_experiments_retrieve
      description: |-
        get:
        Return a list of all existing experiments

        post:
        Create a new experiment
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: An arbitrary identifier for the experiment.
        required: true
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ''
    put:
      operationId: api_experiments_update
      description: |-
        get:
        Return a list of all existing experiments

        post:
        Create a new experiment
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: An arbitrary identifier for the experiment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExperimentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExperimentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExperimentRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ''
    patch:
      operationId: api_experiments_partial_update
      description: |-
        get:
        Return a list of all existing experiments

        post:
        Create a new experiment
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: An arbitrary identifier for the experiment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExperimentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExperimentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExperimentRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ''
    delete:
      operationId: api_experiments_destroy
      description: |-
        get:
        Return a list of all existing experiments

        post:
        Create a new experiment
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: An arbitrary identifier for the experiment.
        required: true
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/genes:
    get:
      operationId: api_genes_list
      description: |-
        get:
        Return a list of all existing genes

        post:
        Create a new gene
      parameters:
      - in: query
        name: id
        schema:
          type: string
      - in: query
        name: symbol
        schema:
          type: string
      - in: query
        name: extra_properties
        schema:
          type: string
        description: Extra properties
      - in: query
        name: datasets
        schema:
          type: string
        description: Datasets
      - in: query
        name: authorized_datasets
        schema:
          type: string
        description: Authorized datasets
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGeneList'
          description: ''
    post:
      operationId: api_genes_create
      description: |-
        get:
        Return a list of all existing genes

        post:
        Create a new gene
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GeneRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GeneRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gene'
          description: ''
  /api/genes/{id}:
    get:
      operationId: api_genes_retrieve
      description: |-
        get:
        Return a list of all existing genes

        post:
        Create a new gene
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: Official identifier of the gene. It SHOULD be a CURIE identifier
            with a prefix used by the official organism gene nomenclature committee,
            e.g. HGNC:347 for humans.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gene'
          description: ''
    put:
      operationId: api_genes_update
      description: |-
        get:
        Return a list of all existing genes

        post:
        Create a new gene
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: Official identifier of the gene. It SHOULD be a CURIE identifier
            with a prefix used by the official organism gene nomenclature committee,
            e.g. HGNC:347 for humans.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GeneRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GeneRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gene'
          description: ''
    patch:
      operationId: api_genes_partial_update
      description: |-
        get:
        Return a list of all existing genes

        post:
        Create a new gene
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: Official identifier of the gene. It SHOULD be a CURIE identifier
            with a prefix used by the official organism gene nomenclature committee,
            e.g. HGNC:347 for humans.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGeneRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGeneRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGeneRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gene'
          description: ''
    delete:
      operationId: api_genes_destroy
      description: |-
        get:
        Return a list of all existing genes

        post:
        Create a new gene
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: Official identifier of the gene. It SHOULD be a CURIE identifier
            with a prefix used by the official organism gene nomenclature committee,
            e.g. HGNC:347 for humans.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/genomicinterpretations:
    get:
      operationId: api_genomicinterpretations_list
      description: |-
        get:
        Return a list of all existing genomic interpretations

        post:
        Create a new genomic interpretation
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: gene
        schema:
          type: string
        description: Official identifier of the gene. It SHOULD be a CURIE identifier
          with a prefix used by the official organism gene nomenclature committee,
          e.g. HGNC:347 for humans.
      - in: query
        name: variant
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
      - in: query
        name: extra_properties
        schema:
          type: string
        description: Extra properties
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGenomicInterpretationList'
          description: ''
    post:
      operationId: api_genomicinterpretations_create
      description: |-
        get:
        Return a list of all existing genomic interpretations

        post:
        Create a new genomic interpretation
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenomicInterpretationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GenomicInterpretationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GenomicInterpretationRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenomicInterpretation'
          description: ''
  /api/genomicinterpretations/{id}:
    get:
      operationId: api_genomicinterpretations_retrieve
      description: |-
        get:
        Return a list of all existing genomic interpretations

        post:
        Create a new genomic interpretation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this genomic interpretation.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenomicInterpretation'
          description: ''
    put:
      operationId: api_genomicinterpretations_update
      description: |-
        get:
        Return a list of all existing genomic interpretations

        post:
        Create a new genomic interpretation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this genomic interpretation.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenomicInterpretationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GenomicInterpretationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GenomicInterpretationRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenomicInterpretation'
          description: ''
    patch:
      operationId: api_genomicinterpretations_partial_update
      description: |-
        get:
        Return a list of all existing genomic interpretations

        post:
        Create a new genomic interpretation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this genomic interpretation.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGenomicInterpretationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGenomicInterpretationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGenomicInterpretationRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenomicInterpretation'
          description: ''
    delete:
      operationId: api_genomicinterpretations_destroy
      description: |-
        get:
        Return a list of all existing genomic interpretations

        post:
        Create a new genomic interpretation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this genomic interpretation.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/htsfiles:
    get:
      operationId: api_htsfiles_list
      description: |-
        get:
        Return a list of all existing HTS files

        post:
        Create a new HTS file
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHtsFileList'
          description: ''
    post:
      operationId: api_htsfiles_create
      description: |-
        get:
        Return a list of all existing HTS files

        post:
        Create a new HTS file
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HtsFileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HtsFileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HtsFileRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HtsFile'
          description: ''
  /api/htsfiles/{uri}:
    get:
      operationId: api_htsfiles_retrieve
      description: |-
        get:
        Return a list of all existing HTS files

        post:
        Create a new HTS file
      parameters:
      - in: path
        name: uri
        schema:
          type: string
          format: uri
          description: A valid URI to the file
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HtsFile'
          description: ''
    put:
      operationId: api_htsfiles_update
      description: |-
        get:
        Return a list of all existing HTS files

        post:
        Create a new HTS file
      parameters:
      - in: path
        name: uri
        schema:
          type: string
          format: uri
          description: A valid URI to the file
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HtsFileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HtsFileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HtsFileRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HtsFile'
          description: ''
    patch:
      operationId: api_htsfiles_partial_update
      description: |-
        get:
        Return a list of all existing HTS files

        post:
        Create a new HTS file
      parameters:
      - in: path
        name: uri
        schema:
          type: string
          format: uri
          description: A valid URI to the file
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHtsFileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHtsFileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHtsFileRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HtsFile'
          description: ''
    delete:
      operationId: api_htsfiles_destroy
      description: |-
        get:
        Return a list of all existing HTS files

        post:
        Create a new HTS file
      parameters:
      - in: path
        name: uri
        schema:
          type: string
          format: uri
          description: A valid URI to the file
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/individuals:
    get:
      operationId: api_individuals_list
      description: |-
        get:
        Return a list of all existing individuals

        post:
        Create a new individual
      parameters:
      - in: query
        name: id
        schema:
          type: array
          items:
            type: string
        description: An arbitrary identifier for the individual.
        explode: true
        style: form
      - in: query
        name: alternate_ids
        schema:
          type: string
      - in: query
        name: active
        schema:
          type: boolean
      - in: query
        name: deceased
        schema:
          type: boolean
      - in: query
        name: phenopackets__biosamples
        schema:
          type: array
          items:
            type: string
        description: Unique arbitrary, researcher-specified identifier for the biosample.
        explode: true
        style: form
      - in: query
        name: phenopackets
        schema:
          type: array
          items:
            type: string
        description: Unique, arbitrary, researcher-specified identifier for the phenopacket.
        explode: true
        style: form
      - in: query
        name: sex
        schema:
          type: string
      - in: query
        name: karyotypic_sex
        schema:
          type: string
      - in: query
        name: ethnicity
        schema:
          type: string
      - in: query
        name: race
        schema:
          type: string
      - in: query
        name: disease
        schema:
          type: string
        description: Disease
      - in: query
        name: found_phenotypic_feature
        schema:
          type: string
        description: Found phenotypic feature
      - in: query
        name: extra_properties
        schema:
          type: string
        description: Extra properties
      - in: query
        name: search
        schema:
          type: string
        description: Search
      - in: query
        name: date_of_birth_after
        schema:
          type: string
          format: date
      - in: query
        name: date_of_birth_before
        schema:
          type: string
          format: date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIndividualList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedIndividualList'
          description: ''
    post:
      operationId: api_individuals_create
      description: |-
        get:
        Return a list of all existing individuals

        post:
        Create a new individual
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndividualRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IndividualRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IndividualRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Individual'
            text/csv:
              schema:
                $ref: '#/components/schemas/Individual'
          description: ''
  /api/individuals/{id}:
    get:
      operationId: api_individuals_retrieve
      description: |-
        get:
        Return a list of all existing individuals

        post:
        Create a new individual
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: An arbitrary identifier for the individual.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Individual'
            text/csv:
              schema:
                $ref: '#/components/schemas/Individual'
          description: ''
    put:
      operationId: api_individuals_update
      description: |-
        get:
        Return a list of all existing individuals

        post:
        Create a new individual
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: An arbitrary identifier for the individual.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndividualRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IndividualRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IndividualRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Individual'
            text/csv:
              schema:
                $ref: '#/components/schemas/Individual'
          description: ''
    patch:
      operationId: api_individuals_partial_update
      description: |-
        get:
        Return a list of all existing individuals

        post:
        Create a new individual
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: An arbitrary identifier for the individual.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIndividualRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedIndividualRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedIndividualRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Individual'
            text/csv:
              schema:
                $ref: '#/components/schemas/Individual'
          description: ''
    delete:
      operationId: api_individuals_destroy
      description: |-
        get:
        Return a list of all existing individuals

        post:
        Create a new individual
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: An arbitrary identifier for the individual.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/interpretations:
    get:
      operationId: api_interpretations_list
      description: |-
        get:
        Return a list of all existing interpretations

        post:
        Create a new interpretation
      parameters:
      - in: query
        name: id
        schema:
          type: string
      - in: query
        name: phenopacket
        schema:
          type: string
        description: Unique, arbitrary, researcher-specified identifier for the phenopacket.
      - in: query
        name: resolution_status
        schema:
          type: string
      - in: query
        name: extra_properties
        schema:
          type: string
        description: Extra properties
      - in: query
        name: datasets
        schema:
          type: string
        description: Datasets
      - in: query
        name: authorized_datasets
        schema:
          type: string
        description: Authorized datasets
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInterpretationList'
          description: ''
    post:
      operationId: api_interpretations_create
      description: |-
        get:
        Return a list of all existing interpretations

        post:
        Create a new interpretation
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterpretationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InterpretationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InterpretationRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interpretation'
          description: ''
  /api/interpretations/{id}:
    get:
      operationId: api_interpretations_retrieve
      description: |-
        get:
        Return a list of all existing interpretations

        post:
        Create a new interpretation
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: An arbitrary identifier for the interpretation.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interpretation'
          description: ''
    put:
      operationId: api_interpretations_update
      description: |-
        get:
        Return a list of all existing interpretations

        post:
        Create a new interpretation
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: An arbitrary identifier for the interpretation.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterpretationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InterpretationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InterpretationRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interpretation'
          description: ''
    patch:
      operationId: api_interpretations_partial_update
      description: |-
        get:
        Return a list of all existing interpretations

        post:
        Create a new interpretation
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: An arbitrary identifier for the interpretation.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInterpretationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInterpretationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInterpretationRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interpretation'
          description: ''
    delete:
      operationId: api_interpretations_destroy
      description: |-
        get:
        Return a list of all existing interpretations

        post:
        Create a new interpretation
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: An arbitrary identifier for the interpretation.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/metadata:
    get:
      operationId: api_metadata_list
      description: |-
        get:
        Return a list of all existing metadata records

        post:
        Create a new metadata record
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: created_by
        schema:
          type: string
      - in: query
        name: submitted_by
        schema:
          type: string
      - in: query
        name: phenopacket_schema_version
        schema:
          type: string
      - in: query
        name: extra_properties
        schema:
          type: string
        description: Extra properties
      - in: query
        name: datasets
        schema:
          type: string
        description: Datasets
      - in: query
        name: authorized_datasets
        schema:
          type: string
        description: Authorized datasets
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMetaDataList'
          description: ''
    post:
      operationId: api_metadata_create
      description: |-
        get:
        Return a list of all existing metadata records

        post:
        Create a new metadata record
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetaDataRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MetaDataRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MetaDataRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaData'
          description: ''
  /api/metadata/{id}:
    get:
      operationId: api_metadata_retrieve
      description: |-
        get:
        Return a list of all existing metadata records

        post:
        Create a new metadata record
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this meta data.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaData'
          description: ''
    put:
      operationId: api_metadata_update
      description: |-
        get:
        Return a list of all existing metadata records

        post:
        Create a new metadata record
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this meta data.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetaDataRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MetaDataRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MetaDataRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaData'
          description: ''
    patch:
      operationId: api_metadata_partial_update
      description: |-
        get:
        Return a list of all existing metadata records

        post:
        Create a new metadata record
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this meta data.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMetaDataRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMetaDataRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMetaDataRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaData'
          description: ''
    delete:
      operationId: api_metadata_destroy
      description: |-
        get:
        Return a list of all existing metadata records

        post:
        Create a new metadata record
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this meta data.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/overview:
    get:
      operationId: api_overview_retrieve
      description: Overview of all Phenopackets in the database
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/overview_response'
          description: ''
  /api/phenopackets:
    get:
      operationId: api_phenopackets_list
      description: |-
        get:
        Return a list of all existing phenopackets

        post:
        Create a new phenopacket
      parameters:
      - in: query
        name: id
        schema:
          type: string
      - in: query
        name: subject
        schema:
          type: string
        description: An arbitrary identifier for the individual.
      - in: query
        name: biosamples
        schema:
          type: array
          items:
            type: string
        description: Unique arbitrary, researcher-specified identifier for the biosample.
        explode: true
        style: form
      - in: query
        name: genes
        schema:
          type: array
          items:
            type: string
        description: Official identifier of the gene. It SHOULD be a CURIE identifier
          with a prefix used by the official organism gene nomenclature committee,
          e.g. HGNC:347 for humans.
        explode: true
        style: form
      - in: query
        name: variants
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: hts_files
        schema:
          type: array
          items:
            type: string
            format: uri
        description: A valid URI to the file
        explode: true
        style: form
      - in: query
        name: disease
        schema:
          type: string
        description: Disease
      - in: query
        name: found_phenotypic_feature
        schema:
          type: string
        description: Found phenotypic feature
      - in: query
        name: extra_properties
        schema:
          type: string
        description: Extra properties
      - in: query
        name: datasets
        schema:
          type: string
        description: Datasets
      - in: query
        name: authorized_datasets
        schema:
          type: string
        description: Authorized datasets
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPhenopacketList'
          description: ''
    post:
      operationId: api_phenopackets_create
      description: |-
        get:
        Return a list of all existing phenopackets

        post:
        Create a new phenopacket
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhenopacketRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PhenopacketRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PhenopacketRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phenopacket'
          description: ''
  /api/phenopackets/{id}:
    get:
      operationId: api_phenopackets_retrieve
      description: |-
        get:
        Return a list of all existing phenopackets

        post:
        Create a new phenopacket
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: Unique, arbitrary, researcher-specified identifier for the
            phenopacket.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phenopacket'
          description: ''
    put:
      operationId: api_phenopackets_update
      description: |-
        get:
        Return a list of all existing phenopackets

        post:
        Create a new phenopacket
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: Unique, arbitrary, researcher-specified identifier for the
            phenopacket.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhenopacketRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PhenopacketRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PhenopacketRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phenopacket'
          description: ''
    patch:
      operationId: api_phenopackets_partial_update
      description: |-
        get:
        Return a list of all existing phenopackets

        post:
        Create a new phenopacket
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: Unique, arbitrary, researcher-specified identifier for the
            phenopacket.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPhenopacketRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPhenopacketRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPhenopacketRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phenopacket'
          description: ''
    delete:
      operationId: api_phenopackets_destroy
      description: |-
        get:
        Return a list of all existing phenopackets

        post:
        Create a new phenopacket
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: Unique, arbitrary, researcher-specified identifier for the
            phenopacket.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/phenotypicfeatures:
    get:
      operationId: api_phenotypicfeatures_list
      description: |-
        get:
        Return a list of all existing phenotypic features

        post:
        Create a new phenotypic feature
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: negated
        schema:
          type: boolean
      - in: query
        name: biosample
        schema:
          type: string
        description: Unique arbitrary, researcher-specified identifier for the biosample.
      - in: query
        name: phenopacket
        schema:
          type: string
        description: Unique, arbitrary, researcher-specified identifier for the phenopacket.
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: string
        description: Type
      - in: query
        name: severity
        schema:
          type: string
        description: Severity
      - in: query
        name: onset
        schema:
          type: string
        description: Onset
      - in: query
        name: evidence
        schema:
          type: string
        description: Evidence
      - in: query
        name: extra_properties
        schema:
          type: string
        description: Extra properties
      - in: query
        name: extra_properties_datatype
        schema:
          type: string
        description: Extra properties datatype
      - in: query
        name: individual
        schema:
          type: array
          items:
            type: string
        description: Individual
        explode: true
        style: form
      - in: query
        name: datasets
        schema:
          type: string
        description: Datasets
      - in: query
        name: authorized_datasets
        schema:
          type: string
        description: Authorized datasets
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPhenotypicFeatureList'
          description: ''
    post:
      operationId: api_phenotypicfeatures_create
      description: |-
        get:
        Return a list of all existing phenotypic features

        post:
        Create a new phenotypic feature
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhenotypicFeatureRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PhenotypicFeatureRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PhenotypicFeatureRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhenotypicFeature'
          description: ''
  /api/phenotypicfeatures/{id}:
    get:
      operationId: api_phenotypicfeatures_retrieve
      description: |-
        get:
        Return a list of all existing phenotypic features

        post:
        Create a new phenotypic feature
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this phenotypic feature.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhenotypicFeature'
          description: ''
    put:
      operationId: api_phenotypicfeatures_update
      description: |-
        get:
        Return a list of all existing phenotypic features

        post:
        Create a new phenotypic feature
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this phenotypic feature.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhenotypicFeatureRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PhenotypicFeatureRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PhenotypicFeatureRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhenotypicFeature'
          description: ''
    patch:
      operationId: api_phenotypicfeatures_partial_update
      description: |-
        get:
        Return a list of all existing phenotypic features

        post:
        Create a new phenotypic feature
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this phenotypic feature.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPhenotypicFeatureRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPhenotypicFeatureRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPhenotypicFeatureRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhenotypicFeature'
          description: ''
    delete:
      operationId: api_phenotypicfeatures_destroy
      description: |-
        get:
        Return a list of all existing phenotypic features

        post:
        Create a new phenotypic feature
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this phenotypic feature.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/procedures:
    get:
      operationId: api_procedures_list
      description: |-
        get:
        Return a list of all existing procedures

        post:
        Create a new procedure
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: code
        schema:
          type: string
        description: Code
      - in: query
        name: body_site
        schema:
          type: string
        description: Body site
      - in: query
        name: biosample
        schema:
          type: array
          items:
            type: string
        description: Biosample
        explode: true
        style: form
      - in: query
        name: extra_properties
        schema:
          type: string
        description: Extra properties
      - in: query
        name: datasets
        schema:
          type: string
        description: Datasets
      - in: query
        name: authorized_datasets
        schema:
          type: string
        description: Authorized datasets
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProcedureList'
          description: ''
    post:
      operationId: api_procedures_create
      description: |-
        get:
        Return a list of all existing procedures

        post:
        Create a new procedure
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcedureRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProcedureRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProcedureRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Procedure'
          description: ''
  /api/procedures/{id}:
    get:
      operationId: api_procedures_retrieve
      description: |-
        get:
        Return a list of all existing procedures

        post:
        Create a new procedure
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this procedure.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Procedure'
          description: ''
    put:
      operationId: api_procedures_update
      description: |-
        get:
        Return a list of all existing procedures

        post:
        Create a new procedure
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this procedure.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcedureRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProcedureRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProcedureRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Procedure'
          description: ''
    patch:
      operationId: api_procedures_partial_update
      description: |-
        get:
        Return a list of all existing procedures

        post:
        Create a new procedure
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this procedure.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProcedureRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProcedureRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProcedureRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Procedure'
          description: ''
    delete:
      operationId: api_procedures_destroy
      description: |-
        get:
        Return a list of all existing procedures

        post:
        Create a new procedure
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this procedure.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/projects:
    get:
      operationId: api_projects_list
      description: |-
        get:
        Return a list of all existing projects

        post:
        Create a new project
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectList'
          description: ''
    post:
      operationId: api_projects_create
      description: |-
        get:
        Return a list of all existing projects

        post:
        Create a new project
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/projects/{identifier}:
    get:
      operationId: api_projects_retrieve
      description: |-
        get:
        Return a list of all existing projects

        post:
        Create a new project
      parameters:
      - in: path
        name: identifier
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this project.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    put:
      operationId: api_projects_update
      description: |-
        get:
        Return a list of all existing projects

        post:
        Create a new project
      parameters:
      - in: path
        name: identifier
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this project.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    patch:
      operationId: api_projects_partial_update
      description: |-
        get:
        Return a list of all existing projects

        post:
        Create a new project
      parameters:
      - in: path
        name: identifier
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this project.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: api_projects_destroy
      description: |-
        get:
        Return a list of all existing projects

        post:
        Create a new project
      parameters:
      - in: path
        name: identifier
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this project.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/public:
    get:
      operationId: api_public_retrieve
      description: Individual list available in public endpoint
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicListIndividuals_response'
          description: ''
  /api/public_overview:
    get:
      operationId: api_public_overview_retrieve
      description: Overview of all public data in the database
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/public_overview_response'
          description: ''
  /api/public_search_fields:
    get:
      operationId: api_public_search_fields_retrieve
      description: Public search fields with their configuration
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/public_search_fields_response'
          description: ''
  /api/resources:
    get:
      operationId: api_resources_list
      description: |-
        get:
        Return a list of all existing resources

        post:
        Create a new resource
      parameters:
      - in: query
        name: id
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: namespace_prefix
        schema:
          type: string
      - in: query
        name: url
        schema:
          type: string
      - in: query
        name: version
        schema:
          type: string
      - in: query
        name: iri_prefix
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResourceList'
          description: ''
    post:
      operationId: api_resources_create
      description: |-
        get:
        Return a list of all existing resources

        post:
        Create a new resource
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResourceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourceRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
          description: ''
  /api/resources/{id}:
    get:
      operationId: api_resources_retrieve
      description: |-
        get:
        Return a list of all existing resources

        post:
        Create a new resource
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: For OBO ontologies, the value of this string MUST always be
            the official OBO ID, which is always equivalent to the ID prefix in lower
            case. For other resources use the prefix in identifiers.org.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
          description: ''
    put:
      operationId: api_resources_update
      description: |-
        get:
        Return a list of all existing resources

        post:
        Create a new resource
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: For OBO ontologies, the value of this string MUST always be
            the official OBO ID, which is always equivalent to the ID prefix in lower
            case. For other resources use the prefix in identifiers.org.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResourceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourceRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
          description: ''
    patch:
      operationId: api_resources_partial_update
      description: |-
        get:
        Return a list of all existing resources

        post:
        Create a new resource
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: For OBO ontologies, the value of this string MUST always be
            the official OBO ID, which is always equivalent to the ID prefix in lower
            case. For other resources use the prefix in identifiers.org.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedResourceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedResourceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedResourceRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
          description: ''
    delete:
      operationId: api_resources_destroy
      description: |-
        get:
        Return a list of all existing resources

        post:
        Create a new resource
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: For OBO ontologies, the value of this string MUST always be
            the official OBO ID, which is always equivalent to the ID prefix in lower
            case. For other resources use the prefix in identifiers.org.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/table_ownership:
    get:
      operationId: api_table_ownership_list
      description: |-
        get:
        Return a list of table-(dataset|dataset,biosample) relationships

        post:
        Create a new relationship between a dataset (and optionally a specific biosample) and a table
        in a data service
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTableOwnershipList'
          description: ''
    post:
      operationId: api_table_ownership_create
      description: |-
        get:
        Return a list of table-(dataset|dataset,biosample) relationships

        post:
        Create a new relationship between a dataset (and optionally a specific biosample) and a table
        in a data service
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableOwnershipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TableOwnershipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TableOwnershipRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableOwnership'
          description: ''
  /api/table_ownership/{table_id}:
    get:
      operationId: api_table_ownership_retrieve
      description: |-
        get:
        Return a list of table-(dataset|dataset,biosample) relationships

        post:
        Create a new relationship between a dataset (and optionally a specific biosample) and a table
        in a data service
      parameters:
      - in: path
        name: table_id
        schema:
          type: string
        description: A unique value identifying this table ownership.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableOwnership'
          description: ''
    put:
      operationId: api_table_ownership_update
      description: |-
        get:
        Return a list of table-(dataset|dataset,biosample) relationships

        post:
        Create a new relationship between a dataset (and optionally a specific biosample) and a table
        in a data service
      parameters:
      - in: path
        name: table_id
        schema:
          type: string
        description: A unique value identifying this table ownership.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableOwnershipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TableOwnershipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TableOwnershipRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableOwnership'
          description: ''
    patch:
      operationId: api_table_ownership_partial_update
      description: |-
        get:
        Return a list of table-(dataset|dataset,biosample) relationships

        post:
        Create a new relationship between a dataset (and optionally a specific biosample) and a table
        in a data service
      parameters:
      - in: path
        name: table_id
        schema:
          type: string
        description: A unique value identifying this table ownership.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTableOwnershipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTableOwnershipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTableOwnershipRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableOwnership'
          description: ''
    delete:
      operationId: api_table_ownership_destroy
      description: |-
        get:
        Return a list of table-(dataset|dataset,biosample) relationships

        post:
        Create a new relationship between a dataset (and optionally a specific biosample) and a table
        in a data service
      parameters:
      - in: path
        name: table_id
        schema:
          type: string
        description: A unique value identifying this table ownership.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/tables:
    get:
      operationId: api_tables_list
      description: |-
        get:
        Return a list of tables

        post:
        Create a new table
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTableList'
          description: ''
    post:
      operationId: api_tables_create
      description: |-
        get:
        Return a list of tables

        post:
        Create a new table
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TableRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TableRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: ''
  /api/tables/{ownership_record}:
    get:
      operationId: api_tables_retrieve
      description: |-
        get:
        Return a list of tables

        post:
        Create a new table
      parameters:
      - in: path
        name: ownership_record
        schema:
          type: string
        description: A unique value identifying this table.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: ''
    put:
      operationId: api_tables_update
      description: |-
        get:
        Return a list of tables

        post:
        Create a new table
      parameters:
      - in: path
        name: ownership_record
        schema:
          type: string
        description: A unique value identifying this table.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TableRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TableRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: ''
    patch:
      operationId: api_tables_partial_update
      description: |-
        get:
        Return a list of tables

        post:
        Create a new table
      parameters:
      - in: path
        name: ownership_record
        schema:
          type: string
        description: A unique value identifying this table.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTableRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTableRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTableRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: ''
    delete:
      operationId: api_tables_destroy
      description: |-
        get:
        Return a list of tables

        post:
        Create a new table
      parameters:
      - in: path
        name: ownership_record
        schema:
          type: string
        description: A unique value identifying this table.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v1/discovery/biomarkers/:
    get:
      operationId: api_v1_discovery_biomarkers_list
      parameters:
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: submitter_specimen_id
        schema:
          type: string
      - in: query
        name: submitter_primary_diagnosis_id
        schema:
          type: string
      - in: query
        name: submitter_treatment_id
        schema:
          type: string
      - in: query
        name: submitter_follow_up_id
        schema:
          type: string
      - in: query
        name: test_interval
        schema:
          type: integer
      - in: query
        name: psa_level
        schema:
          type: integer
      - in: query
        name: ca125
        schema:
          type: integer
      - in: query
        name: cea
        schema:
          type: integer
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discovery'
          description: ''
  /api/v1/discovery/chemotherapies/:
    get:
      operationId: api_v1_discovery_chemotherapies_list
      parameters:
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: submitter_treatment_id
        schema:
          type: string
      - in: query
        name: drug_name
        schema:
          type: string
      - in: query
        name: drug_rxnormcui
        schema:
          type: string
      - in: query
        name: chemotherapy_dosage_units
        schema:
          type: string
      - in: query
        name: cumulative_drug_dosage_prescribed
        schema:
          type: integer
      - in: query
        name: cumulative_drug_dosage_actual
        schema:
          type: integer
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discovery'
          description: ''
  /api/v1/discovery/comorbidities/:
    get:
      operationId: api_v1_discovery_comorbidities_list
      parameters:
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: prior_malignancy
        schema:
          type: string
      - in: query
        name: laterality_of_prior_malignancy
        schema:
          type: string
      - in: query
        name: age_at_comorbidity_diagnosis
        schema:
          type: integer
      - in: query
        name: comorbidity_type_code
        schema:
          type: string
      - in: query
        name: comorbidity_treatment_status
        schema:
          type: string
      - in: query
        name: comorbidity_treatment
        schema:
          type: string
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discovery'
          description: ''
  /api/v1/discovery/donors/:
    get:
      operationId: api_v1_discovery_donors_list
      parameters:
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: is_deceased
        schema:
          type: boolean
      - in: query
        name: cause_of_death
        schema:
          type: string
      - in: query
        name: date_of_birth
        schema:
          type: string
      - in: query
        name: date_of_death
        schema:
          type: string
      - in: query
        name: primary_site
        schema:
          type: string
      - in: query
        name: age
        schema:
          type: number
      - in: query
        name: max_age
        schema:
          type: number
      - in: query
        name: min_age
        schema:
          type: number
      - in: query
        name: donors
        schema:
          type: string
      - in: query
        name: primary_diagnosis
        schema:
          type: string
      - in: query
        name: speciman
        schema:
          type: string
      - in: query
        name: sample_registration
        schema:
          type: string
      - in: query
        name: treatment
        schema:
          type: string
      - in: query
        name: chemotherapy
        schema:
          type: string
      - in: query
        name: hormone_therapy
        schema:
          type: string
      - in: query
        name: radiation
        schema:
          type: string
      - in: query
        name: immunotherapy
        schema:
          type: string
      - in: query
        name: surgery
        schema:
          type: string
      - in: query
        name: follow_up
        schema:
          type: string
      - in: query
        name: biomarker
        schema:
          type: string
      - in: query
        name: comorbidity
        schema:
          type: string
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discovery'
          description: ''
  /api/v1/discovery/follow_ups/:
    get:
      operationId: api_v1_discovery_follow_ups_list
      parameters:
      - in: query
        name: submitter_follow_up_id
        schema:
          type: string
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: submitter_primary_diagnosis_id
        schema:
          type: string
      - in: query
        name: submitter_treatment_id
        schema:
          type: string
      - in: query
        name: date_of_followup
        schema:
          type: string
      - in: query
        name: lost_to_followup
        schema:
          type: boolean
      - in: query
        name: lost_to_followup_reason
        schema:
          type: string
      - in: query
        name: disease_status_at_followup
        schema:
          type: string
      - in: query
        name: relapse_type
        schema:
          type: string
      - in: query
        name: date_of_relapse
        schema:
          type: string
      - in: query
        name: method_of_progression_status
        schema:
          type: string
      - in: query
        name: anatomic_site_progression_or_recurrence
        schema:
          type: string
      - in: query
        name: recurrence_tumour_staging_system
        schema:
          type: string
      - in: query
        name: recurrence_t_category
        schema:
          type: string
      - in: query
        name: recurrence_n_category
        schema:
          type: string
      - in: query
        name: recurrence_m_category
        schema:
          type: string
      - in: query
        name: recurrence_stage_group
        schema:
          type: string
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discovery'
          description: ''
  /api/v1/discovery/hormone_therapies/:
    get:
      operationId: api_v1_discovery_hormone_therapies_list
      parameters:
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: submitter_treatment_id
        schema:
          type: string
      - in: query
        name: drug_name
        schema:
          type: string
      - in: query
        name: drug_rxnormcui
        schema:
          type: string
      - in: query
        name: hormone_drug_dosage_units
        schema:
          type: string
      - in: query
        name: cumulative_drug_dosage_prescribed
        schema:
          type: integer
      - in: query
        name: cumulative_drug_dosage_actual
        schema:
          type: integer
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discovery'
          description: ''
  /api/v1/discovery/immunotherapies/:
    get:
      operationId: api_v1_discovery_immunotherapies_list
      parameters:
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: submitter_treatment_id
        schema:
          type: string
      - in: query
        name: immunotherapy_type
        schema:
          type: string
      - in: query
        name: drug_name
        schema:
          type: string
      - in: query
        name: drug_rxnormcui
        schema:
          type: string
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discovery'
          description: ''
  /api/v1/discovery/overview:
    get:
      operationId: api_v1_discovery_overview_retrieve
      description: MoH Overview schema
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/moh_overview_schema_response'
          description: ''
  /api/v1/discovery/primary_diagnoses/:
    get:
      operationId: api_v1_discovery_primary_diagnoses_list
      parameters:
      - in: query
        name: submitter_primary_diagnosis_id
        schema:
          type: string
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: date_of_diagnosis
        schema:
          type: string
      - in: query
        name: cancer_type_code
        schema:
          type: string
      - in: query
        name: basis_of_diagnosis
        schema:
          type: string
      - in: query
        name: lymph_nodes_examined_status
        schema:
          type: string
      - in: query
        name: lymph_nodes_examined_method
        schema:
          type: string
      - in: query
        name: number_lymph_nodes_positive
        schema:
          type: integer
      - in: query
        name: clinical_tumour_staging_system
        schema:
          type: string
      - in: query
        name: clinical_t_category
        schema:
          type: string
      - in: query
        name: clinical_n_category
        schema:
          type: string
      - in: query
        name: clinical_m_category
        schema:
          type: string
      - in: query
        name: clinical_stage_group
        schema:
          type: string
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discovery'
          description: ''
  /api/v1/discovery/radiations/:
    get:
      operationId: api_v1_discovery_radiations_list
      parameters:
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: submitter_treatment_id
        schema:
          type: string
      - in: query
        name: radiation_therapy_modality
        schema:
          type: string
      - in: query
        name: radiation_therapy_type
        schema:
          type: string
      - in: query
        name: radiation_therapy_fractions
        schema:
          type: integer
      - in: query
        name: radiation_therapy_dosage
        schema:
          type: integer
      - in: query
        name: anatomical_site_irradiated
        schema:
          type: string
      - in: query
        name: radiation_boost
        schema:
          type: boolean
      - in: query
        name: reference_radiation_treatment_id
        schema:
          type: string
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discovery'
          description: ''
  /api/v1/discovery/sample_registrations/:
    get:
      operationId: api_v1_discovery_sample_registrations_list
      parameters:
      - in: query
        name: submitter_sample_id
        schema:
          type: string
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: submitter_specimen_id
        schema:
          type: string
      - in: query
        name: gender
        schema:
          type: string
      - in: query
        name: sex_at_birth
        schema:
          type: string
      - in: query
        name: specimen_tissue_source
        schema:
          type: string
      - in: query
        name: tumour_normal_designation
        schema:
          type: string
      - in: query
        name: specimen_type
        schema:
          type: string
      - in: query
        name: sample_type
        schema:
          type: string
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discovery'
          description: ''
  /api/v1/discovery/specimens/:
    get:
      operationId: api_v1_discovery_specimens_list
      parameters:
      - in: query
        name: submitter_specimen_id
        schema:
          type: string
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: submitter_primary_diagnosis_id
        schema:
          type: string
      - in: query
        name: pathological_tumour_staging_system
        schema:
          type: string
      - in: query
        name: pathological_t_category
        schema:
          type: string
      - in: query
        name: pathological_n_category
        schema:
          type: string
      - in: query
        name: pathological_m_category
        schema:
          type: string
      - in: query
        name: pathological_stage_group
        schema:
          type: string
      - in: query
        name: specimen_collection_date
        schema:
          type: string
      - in: query
        name: specimen_storage
        schema:
          type: string
      - in: query
        name: tumour_histological_type
        schema:
          type: string
      - in: query
        name: specimen_anatomic_location
        schema:
          type: string
      - in: query
        name: reference_pathology_confirmed_diagnosis
        schema:
          type: string
      - in: query
        name: reference_pathology_confirmed_tumour_presence
        schema:
          type: string
      - in: query
        name: tumour_grading_system
        schema:
          type: string
      - in: query
        name: tumour_grade
        schema:
          type: string
      - in: query
        name: percent_tumour_cells_range
        schema:
          type: string
      - in: query
        name: percent_tumour_cells_measurement_method
        schema:
          type: string
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discovery'
          description: ''
  /api/v1/discovery/surgeries/:
    get:
      operationId: api_v1_discovery_surgeries_list
      parameters:
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: submitter_specimen_id
        schema:
          type: string
      - in: query
        name: submitter_treatment_id
        schema:
          type: string
      - in: query
        name: surgery_type
        schema:
          type: string
      - in: query
        name: surgery_site
        schema:
          type: string
      - in: query
        name: surgery_location
        schema:
          type: string
      - in: query
        name: tumour_length
        schema:
          type: integer
      - in: query
        name: tumour_width
        schema:
          type: integer
      - in: query
        name: greatest_dimension_tumour
        schema:
          type: integer
      - in: query
        name: tumour_focality
        schema:
          type: string
      - in: query
        name: residual_tumour_classification
        schema:
          type: string
      - in: query
        name: margin_types_involved
        schema:
          type: string
      - in: query
        name: margin_types_not_involved
        schema:
          type: string
      - in: query
        name: margin_types_not_assessed
        schema:
          type: string
      - in: query
        name: lymphovascular_invasion
        schema:
          type: string
      - in: query
        name: perineural_invasion
        schema:
          type: string
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discovery'
          description: ''
  /api/v1/discovery/treatments/:
    get:
      operationId: api_v1_discovery_treatments_list
      parameters:
      - in: query
        name: submitter_treatment_id
        schema:
          type: string
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: submitter_primary_diagnosis_id
        schema:
          type: string
      - in: query
        name: treatment_type
        schema:
          type: string
      - in: query
        name: is_primary_treatment
        schema:
          type: string
      - in: query
        name: treatment_start_date
        schema:
          type: string
      - in: query
        name: treatment_end_date
        schema:
          type: string
      - in: query
        name: treatment_setting
        schema:
          type: string
      - in: query
        name: treatment_intent
        schema:
          type: string
      - in: query
        name: days_per_cycle
        schema:
          type: integer
      - in: query
        name: number_of_cycles
        schema:
          type: integer
      - in: query
        name: response_to_treatment_criteria_method
        schema:
          type: string
      - in: query
        name: response_to_treatment
        schema:
          type: string
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discovery'
          description: ''
  /api/v1/ingest/biomarkers:
    post:
      operationId: api_v1_ingest_biomarkers_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
          description: ''
  /api/v1/ingest/chemotherapies:
    post:
      operationId: api_v1_ingest_chemotherapies_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
          description: ''
  /api/v1/ingest/comorbidities:
    post:
      operationId: api_v1_ingest_comorbidities_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
          description: ''
  /api/v1/ingest/donors:
    post:
      operationId: api_v1_ingest_donors_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
          description: ''
  /api/v1/ingest/follow_ups:
    post:
      operationId: api_v1_ingest_follow_ups_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
          description: ''
  /api/v1/ingest/hormone_therapies:
    post:
      operationId: api_v1_ingest_hormone_therapies_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
          description: ''
  /api/v1/ingest/immunotherapies:
    post:
      operationId: api_v1_ingest_immunotherapies_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
          description: ''
  /api/v1/ingest/primary_diagnoses:
    post:
      operationId: api_v1_ingest_primary_diagnoses_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
          description: ''
  /api/v1/ingest/programs:
    post:
      operationId: api_v1_ingest_programs_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
          description: ''
  /api/v1/ingest/radiations:
    post:
      operationId: api_v1_ingest_radiations_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
          description: ''
  /api/v1/ingest/sample_registrations:
    post:
      operationId: api_v1_ingest_sample_registrations_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
          description: ''
  /api/v1/ingest/specimens:
    post:
      operationId: api_v1_ingest_specimens_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
          description: ''
  /api/v1/ingest/surgeries:
    post:
      operationId: api_v1_ingest_surgeries_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
          description: ''
  /api/v1/ingest/treatments:
    post:
      operationId: api_v1_ingest_treatments_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IngestRequestRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
          description: ''
  /api/v1/moh/biomarkers/:
    get:
      operationId: biomarkers_list
      parameters:
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: submitter_specimen_id
        schema:
          type: string
      - in: query
        name: submitter_primary_diagnosis_id
        schema:
          type: string
      - in: query
        name: submitter_treatment_id
        schema:
          type: string
      - in: query
        name: submitter_follow_up_id
        schema:
          type: string
      - in: query
        name: test_interval
        schema:
          type: integer
      - in: query
        name: psa_level
        schema:
          type: integer
      - in: query
        name: ca125
        schema:
          type: integer
      - in: query
        name: cea
        schema:
          type: integer
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - biomarkers
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBiomarkerList'
          description: ''
    post:
      operationId: biomarkers_create
      tags:
      - biomarkers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BiomarkerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BiomarkerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BiomarkerRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Biomarker'
          description: ''
  /api/v1/moh/biomarkers/{id}/:
    get:
      operationId: biomarkers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this biomarker.
        required: true
      tags:
      - biomarkers
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Biomarker'
          description: ''
    put:
      operationId: biomarkers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this biomarker.
        required: true
      tags:
      - biomarkers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BiomarkerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BiomarkerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BiomarkerRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Biomarker'
          description: ''
    patch:
      operationId: biomarkers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this biomarker.
        required: true
      tags:
      - biomarkers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBiomarkerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBiomarkerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBiomarkerRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Biomarker'
          description: ''
    delete:
      operationId: biomarkers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this biomarker.
        required: true
      tags:
      - biomarkers
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v1/moh/chemotherapies/:
    get:
      operationId: chemotherapies_list
      parameters:
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: submitter_treatment_id
        schema:
          type: string
      - in: query
        name: drug_name
        schema:
          type: string
      - in: query
        name: drug_rxnormcui
        schema:
          type: string
      - in: query
        name: chemotherapy_dosage_units
        schema:
          type: string
      - in: query
        name: cumulative_drug_dosage_prescribed
        schema:
          type: integer
      - in: query
        name: cumulative_drug_dosage_actual
        schema:
          type: integer
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - chemotherapies
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChemotherapyList'
          description: ''
    post:
      operationId: chemotherapies_create
      tags:
      - chemotherapies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChemotherapyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChemotherapyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChemotherapyRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chemotherapy'
          description: ''
  /api/v1/moh/chemotherapies/{id}/:
    get:
      operationId: chemotherapies_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chemotherapy.
        required: true
      tags:
      - chemotherapies
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chemotherapy'
          description: ''
    put:
      operationId: chemotherapies_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chemotherapy.
        required: true
      tags:
      - chemotherapies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChemotherapyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChemotherapyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChemotherapyRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chemotherapy'
          description: ''
    patch:
      operationId: chemotherapies_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chemotherapy.
        required: true
      tags:
      - chemotherapies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChemotherapyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChemotherapyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChemotherapyRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chemotherapy'
          description: ''
    delete:
      operationId: chemotherapies_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chemotherapy.
        required: true
      tags:
      - chemotherapies
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v1/moh/comorbidities/:
    get:
      operationId: comorbidities_list
      parameters:
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: prior_malignancy
        schema:
          type: string
      - in: query
        name: laterality_of_prior_malignancy
        schema:
          type: string
      - in: query
        name: age_at_comorbidity_diagnosis
        schema:
          type: integer
      - in: query
        name: comorbidity_type_code
        schema:
          type: string
      - in: query
        name: comorbidity_treatment_status
        schema:
          type: string
      - in: query
        name: comorbidity_treatment
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - comorbidities
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedComorbidityList'
          description: ''
    post:
      operationId: comorbidities_create
      tags:
      - comorbidities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComorbidityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ComorbidityRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ComorbidityRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comorbidity'
          description: ''
  /api/v1/moh/comorbidities/{id}/:
    get:
      operationId: comorbidities_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comorbidity.
        required: true
      tags:
      - comorbidities
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comorbidity'
          description: ''
    put:
      operationId: comorbidities_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comorbidity.
        required: true
      tags:
      - comorbidities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComorbidityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ComorbidityRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ComorbidityRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comorbidity'
          description: ''
    patch:
      operationId: comorbidities_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comorbidity.
        required: true
      tags:
      - comorbidities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedComorbidityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedComorbidityRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedComorbidityRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comorbidity'
          description: ''
    delete:
      operationId: comorbidities_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comorbidity.
        required: true
      tags:
      - comorbidities
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v1/moh/donors/:
    get:
      operationId: donors_list
      parameters:
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: is_deceased
        schema:
          type: boolean
      - in: query
        name: cause_of_death
        schema:
          type: string
      - in: query
        name: date_of_birth
        schema:
          type: string
      - in: query
        name: date_of_death
        schema:
          type: string
      - in: query
        name: primary_site
        schema:
          type: string
      - in: query
        name: age
        schema:
          type: number
      - in: query
        name: max_age
        schema:
          type: number
      - in: query
        name: min_age
        schema:
          type: number
      - in: query
        name: donors
        schema:
          type: string
      - in: query
        name: primary_diagnosis
        schema:
          type: string
      - in: query
        name: speciman
        schema:
          type: string
      - in: query
        name: sample_registration
        schema:
          type: string
      - in: query
        name: treatment
        schema:
          type: string
      - in: query
        name: chemotherapy
        schema:
          type: string
      - in: query
        name: hormone_therapy
        schema:
          type: string
      - in: query
        name: radiation
        schema:
          type: string
      - in: query
        name: immunotherapy
        schema:
          type: string
      - in: query
        name: surgery
        schema:
          type: string
      - in: query
        name: follow_up
        schema:
          type: string
      - in: query
        name: biomarker
        schema:
          type: string
      - in: query
        name: comorbidity
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - donors
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDonorList'
          description: ''
    post:
      operationId: donors_create
      tags:
      - donors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DonorRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DonorRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DonorRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Donor'
          description: ''
  /api/v1/moh/donors/{submitter_donor_id}/:
    get:
      operationId: donors_retrieve
      parameters:
      - in: path
        name: submitter_donor_id
        schema:
          type: string
        description: A unique value identifying this donor.
        required: true
      tags:
      - donors
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Donor'
          description: ''
    put:
      operationId: donors_update
      parameters:
      - in: path
        name: submitter_donor_id
        schema:
          type: string
        description: A unique value identifying this donor.
        required: true
      tags:
      - donors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DonorRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DonorRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DonorRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Donor'
          description: ''
    patch:
      operationId: donors_partial_update
      parameters:
      - in: path
        name: submitter_donor_id
        schema:
          type: string
        description: A unique value identifying this donor.
        required: true
      tags:
      - donors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDonorRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDonorRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDonorRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Donor'
          description: ''
    delete:
      operationId: donors_destroy
      parameters:
      - in: path
        name: submitter_donor_id
        schema:
          type: string
        description: A unique value identifying this donor.
        required: true
      tags:
      - donors
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v1/moh/follow_ups/:
    get:
      operationId: follow_ups_list
      parameters:
      - in: query
        name: submitter_follow_up_id
        schema:
          type: string
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: submitter_primary_diagnosis_id
        schema:
          type: string
      - in: query
        name: submitter_treatment_id
        schema:
          type: string
      - in: query
        name: date_of_followup
        schema:
          type: string
      - in: query
        name: lost_to_followup
        schema:
          type: boolean
      - in: query
        name: lost_to_followup_reason
        schema:
          type: string
      - in: query
        name: disease_status_at_followup
        schema:
          type: string
      - in: query
        name: relapse_type
        schema:
          type: string
      - in: query
        name: date_of_relapse
        schema:
          type: string
      - in: query
        name: method_of_progression_status
        schema:
          type: string
      - in: query
        name: anatomic_site_progression_or_recurrence
        schema:
          type: string
      - in: query
        name: recurrence_tumour_staging_system
        schema:
          type: string
      - in: query
        name: recurrence_t_category
        schema:
          type: string
      - in: query
        name: recurrence_n_category
        schema:
          type: string
      - in: query
        name: recurrence_m_category
        schema:
          type: string
      - in: query
        name: recurrence_stage_group
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - follow_ups
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFollowUpList'
          description: ''
    post:
      operationId: follow_ups_create
      tags:
      - follow_ups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FollowUpRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FollowUpRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FollowUpRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowUp'
          description: ''
  /api/v1/moh/follow_ups/{submitter_follow_up_id}/:
    get:
      operationId: follow_ups_retrieve
      parameters:
      - in: path
        name: submitter_follow_up_id
        schema:
          type: string
        description: A unique value identifying this follow up.
        required: true
      tags:
      - follow_ups
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowUp'
          description: ''
    put:
      operationId: follow_ups_update
      parameters:
      - in: path
        name: submitter_follow_up_id
        schema:
          type: string
        description: A unique value identifying this follow up.
        required: true
      tags:
      - follow_ups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FollowUpRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FollowUpRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FollowUpRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowUp'
          description: ''
    patch:
      operationId: follow_ups_partial_update
      parameters:
      - in: path
        name: submitter_follow_up_id
        schema:
          type: string
        description: A unique value identifying this follow up.
        required: true
      tags:
      - follow_ups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFollowUpRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFollowUpRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFollowUpRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowUp'
          description: ''
    delete:
      operationId: follow_ups_destroy
      parameters:
      - in: path
        name: submitter_follow_up_id
        schema:
          type: string
        description: A unique value identifying this follow up.
        required: true
      tags:
      - follow_ups
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v1/moh/hormone_therapies/:
    get:
      operationId: hormone_therapies_list
      parameters:
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: submitter_treatment_id
        schema:
          type: string
      - in: query
        name: drug_name
        schema:
          type: string
      - in: query
        name: drug_rxnormcui
        schema:
          type: string
      - in: query
        name: hormone_drug_dosage_units
        schema:
          type: string
      - in: query
        name: cumulative_drug_dosage_prescribed
        schema:
          type: integer
      - in: query
        name: cumulative_drug_dosage_actual
        schema:
          type: integer
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - hormone_therapies
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHormoneTherapyList'
          description: ''
    post:
      operationId: hormone_therapies_create
      tags:
      - hormone_therapies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HormoneTherapyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HormoneTherapyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HormoneTherapyRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HormoneTherapy'
          description: ''
  /api/v1/moh/hormone_therapies/{id}/:
    get:
      operationId: hormone_therapies_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hormone therapy.
        required: true
      tags:
      - hormone_therapies
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HormoneTherapy'
          description: ''
    put:
      operationId: hormone_therapies_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hormone therapy.
        required: true
      tags:
      - hormone_therapies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HormoneTherapyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HormoneTherapyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HormoneTherapyRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HormoneTherapy'
          description: ''
    patch:
      operationId: hormone_therapies_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hormone therapy.
        required: true
      tags:
      - hormone_therapies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHormoneTherapyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHormoneTherapyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHormoneTherapyRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HormoneTherapy'
          description: ''
    delete:
      operationId: hormone_therapies_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hormone therapy.
        required: true
      tags:
      - hormone_therapies
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v1/moh/immunotherapies/:
    get:
      operationId: immunotherapies_list
      parameters:
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: submitter_treatment_id
        schema:
          type: string
      - in: query
        name: immunotherapy_type
        schema:
          type: string
      - in: query
        name: drug_name
        schema:
          type: string
      - in: query
        name: drug_rxnormcui
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - immunotherapies
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedImmunotherapyList'
          description: ''
    post:
      operationId: immunotherapies_create
      tags:
      - immunotherapies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImmunotherapyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImmunotherapyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImmunotherapyRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Immunotherapy'
          description: ''
  /api/v1/moh/immunotherapies/{id}/:
    get:
      operationId: immunotherapies_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this immunotherapy.
        required: true
      tags:
      - immunotherapies
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Immunotherapy'
          description: ''
    put:
      operationId: immunotherapies_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this immunotherapy.
        required: true
      tags:
      - immunotherapies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImmunotherapyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImmunotherapyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImmunotherapyRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Immunotherapy'
          description: ''
    patch:
      operationId: immunotherapies_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this immunotherapy.
        required: true
      tags:
      - immunotherapies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedImmunotherapyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedImmunotherapyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedImmunotherapyRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Immunotherapy'
          description: ''
    delete:
      operationId: immunotherapies_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this immunotherapy.
        required: true
      tags:
      - immunotherapies
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v1/moh/primary_diagnoses/:
    get:
      operationId: primary_diagnoses_list
      parameters:
      - in: query
        name: submitter_primary_diagnosis_id
        schema:
          type: string
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: date_of_diagnosis
        schema:
          type: string
      - in: query
        name: cancer_type_code
        schema:
          type: string
      - in: query
        name: basis_of_diagnosis
        schema:
          type: string
      - in: query
        name: lymph_nodes_examined_status
        schema:
          type: string
      - in: query
        name: lymph_nodes_examined_method
        schema:
          type: string
      - in: query
        name: number_lymph_nodes_positive
        schema:
          type: integer
      - in: query
        name: clinical_tumour_staging_system
        schema:
          type: string
      - in: query
        name: clinical_t_category
        schema:
          type: string
      - in: query
        name: clinical_n_category
        schema:
          type: string
      - in: query
        name: clinical_m_category
        schema:
          type: string
      - in: query
        name: clinical_stage_group
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - primary_diagnoses
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPrimaryDiagnosisList'
          description: ''
    post:
      operationId: primary_diagnoses_create
      tags:
      - primary_diagnoses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrimaryDiagnosisRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PrimaryDiagnosisRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PrimaryDiagnosisRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrimaryDiagnosis'
          description: ''
  /api/v1/moh/primary_diagnoses/{submitter_primary_diagnosis_id}/:
    get:
      operationId: primary_diagnoses_retrieve
      parameters:
      - in: path
        name: submitter_primary_diagnosis_id
        schema:
          type: string
        description: A unique value identifying this primary diagnosis.
        required: true
      tags:
      - primary_diagnoses
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrimaryDiagnosis'
          description: ''
    put:
      operationId: primary_diagnoses_update
      parameters:
      - in: path
        name: submitter_primary_diagnosis_id
        schema:
          type: string
        description: A unique value identifying this primary diagnosis.
        required: true
      tags:
      - primary_diagnoses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrimaryDiagnosisRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PrimaryDiagnosisRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PrimaryDiagnosisRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrimaryDiagnosis'
          description: ''
    patch:
      operationId: primary_diagnoses_partial_update
      parameters:
      - in: path
        name: submitter_primary_diagnosis_id
        schema:
          type: string
        description: A unique value identifying this primary diagnosis.
        required: true
      tags:
      - primary_diagnoses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPrimaryDiagnosisRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPrimaryDiagnosisRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPrimaryDiagnosisRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrimaryDiagnosis'
          description: ''
    delete:
      operationId: primary_diagnoses_destroy
      parameters:
      - in: path
        name: submitter_primary_diagnosis_id
        schema:
          type: string
        description: A unique value identifying this primary diagnosis.
        required: true
      tags:
      - primary_diagnoses
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v1/moh/programs/:
    get:
      operationId: programs_list
      parameters:
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: created
        schema:
          type: string
          format: date-time
      - in: query
        name: updated
        schema:
          type: string
          format: date-time
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - programs
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProgramList'
          description: ''
    post:
      operationId: programs_create
      tags:
      - programs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProgramRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProgramRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProgramRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Program'
          description: ''
  /api/v1/moh/programs/{program_id}/:
    get:
      operationId: programs_retrieve
      parameters:
      - in: path
        name: program_id
        schema:
          type: string
        description: A unique value identifying this program.
        required: true
      tags:
      - programs
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Program'
          description: ''
    put:
      operationId: programs_update
      parameters:
      - in: path
        name: program_id
        schema:
          type: string
        description: A unique value identifying this program.
        required: true
      tags:
      - programs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProgramRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProgramRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProgramRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Program'
          description: ''
    patch:
      operationId: programs_partial_update
      parameters:
      - in: path
        name: program_id
        schema:
          type: string
        description: A unique value identifying this program.
        required: true
      tags:
      - programs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProgramRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProgramRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProgramRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Program'
          description: ''
    delete:
      operationId: programs_destroy
      parameters:
      - in: path
        name: program_id
        schema:
          type: string
        description: A unique value identifying this program.
        required: true
      tags:
      - programs
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v1/moh/radiations/:
    get:
      operationId: radiations_list
      parameters:
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: submitter_treatment_id
        schema:
          type: string
      - in: query
        name: radiation_therapy_modality
        schema:
          type: string
      - in: query
        name: radiation_therapy_type
        schema:
          type: string
      - in: query
        name: radiation_therapy_fractions
        schema:
          type: integer
      - in: query
        name: radiation_therapy_dosage
        schema:
          type: integer
      - in: query
        name: anatomical_site_irradiated
        schema:
          type: string
      - in: query
        name: radiation_boost
        schema:
          type: boolean
      - in: query
        name: reference_radiation_treatment_id
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - radiations
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRadiationList'
          description: ''
    post:
      operationId: radiations_create
      tags:
      - radiations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RadiationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RadiationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RadiationRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Radiation'
          description: ''
  /api/v1/moh/radiations/{id}/:
    get:
      operationId: radiations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this radiation.
        required: true
      tags:
      - radiations
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Radiation'
          description: ''
    put:
      operationId: radiations_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this radiation.
        required: true
      tags:
      - radiations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RadiationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RadiationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RadiationRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Radiation'
          description: ''
    patch:
      operationId: radiations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this radiation.
        required: true
      tags:
      - radiations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRadiationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRadiationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRadiationRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Radiation'
          description: ''
    delete:
      operationId: radiations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this radiation.
        required: true
      tags:
      - radiations
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v1/moh/sample_registrations/:
    get:
      operationId: sample_registrations_list
      parameters:
      - in: query
        name: submitter_sample_id
        schema:
          type: string
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: submitter_specimen_id
        schema:
          type: string
      - in: query
        name: gender
        schema:
          type: string
      - in: query
        name: sex_at_birth
        schema:
          type: string
      - in: query
        name: specimen_tissue_source
        schema:
          type: string
      - in: query
        name: tumour_normal_designation
        schema:
          type: string
      - in: query
        name: specimen_type
        schema:
          type: string
      - in: query
        name: sample_type
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - sample_registrations
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSampleRegistrationList'
          description: ''
    post:
      operationId: sample_registrations_create
      tags:
      - sample_registrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SampleRegistrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SampleRegistrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SampleRegistrationRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleRegistration'
          description: ''
  /api/v1/moh/sample_registrations/{submitter_sample_id}/:
    get:
      operationId: sample_registrations_retrieve
      parameters:
      - in: path
        name: submitter_sample_id
        schema:
          type: string
        description: A unique value identifying this sample registration.
        required: true
      tags:
      - sample_registrations
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleRegistration'
          description: ''
    put:
      operationId: sample_registrations_update
      parameters:
      - in: path
        name: submitter_sample_id
        schema:
          type: string
        description: A unique value identifying this sample registration.
        required: true
      tags:
      - sample_registrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SampleRegistrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SampleRegistrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SampleRegistrationRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleRegistration'
          description: ''
    patch:
      operationId: sample_registrations_partial_update
      parameters:
      - in: path
        name: submitter_sample_id
        schema:
          type: string
        description: A unique value identifying this sample registration.
        required: true
      tags:
      - sample_registrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSampleRegistrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSampleRegistrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSampleRegistrationRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleRegistration'
          description: ''
    delete:
      operationId: sample_registrations_destroy
      parameters:
      - in: path
        name: submitter_sample_id
        schema:
          type: string
        description: A unique value identifying this sample registration.
        required: true
      tags:
      - sample_registrations
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v1/moh/specimens/:
    get:
      operationId: specimens_list
      parameters:
      - in: query
        name: submitter_specimen_id
        schema:
          type: string
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: submitter_primary_diagnosis_id
        schema:
          type: string
      - in: query
        name: pathological_tumour_staging_system
        schema:
          type: string
      - in: query
        name: pathological_t_category
        schema:
          type: string
      - in: query
        name: pathological_n_category
        schema:
          type: string
      - in: query
        name: pathological_m_category
        schema:
          type: string
      - in: query
        name: pathological_stage_group
        schema:
          type: string
      - in: query
        name: specimen_collection_date
        schema:
          type: string
      - in: query
        name: specimen_storage
        schema:
          type: string
      - in: query
        name: tumour_histological_type
        schema:
          type: string
      - in: query
        name: specimen_anatomic_location
        schema:
          type: string
      - in: query
        name: reference_pathology_confirmed_diagnosis
        schema:
          type: string
      - in: query
        name: reference_pathology_confirmed_tumour_presence
        schema:
          type: string
      - in: query
        name: tumour_grading_system
        schema:
          type: string
      - in: query
        name: tumour_grade
        schema:
          type: string
      - in: query
        name: percent_tumour_cells_range
        schema:
          type: string
      - in: query
        name: percent_tumour_cells_measurement_method
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - specimens
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSpecimenList'
          description: ''
    post:
      operationId: specimens_create
      tags:
      - specimens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpecimenRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SpecimenRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SpecimenRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Specimen'
          description: ''
  /api/v1/moh/specimens/{submitter_specimen_id}/:
    get:
      operationId: specimens_retrieve
      parameters:
      - in: path
        name: submitter_specimen_id
        schema:
          type: string
        description: A unique value identifying this specimen.
        required: true
      tags:
      - specimens
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Specimen'
          description: ''
    put:
      operationId: specimens_update
      parameters:
      - in: path
        name: submitter_specimen_id
        schema:
          type: string
        description: A unique value identifying this specimen.
        required: true
      tags:
      - specimens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpecimenRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SpecimenRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SpecimenRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Specimen'
          description: ''
    patch:
      operationId: specimens_partial_update
      parameters:
      - in: path
        name: submitter_specimen_id
        schema:
          type: string
        description: A unique value identifying this specimen.
        required: true
      tags:
      - specimens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSpecimenRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSpecimenRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSpecimenRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Specimen'
          description: ''
    delete:
      operationId: specimens_destroy
      parameters:
      - in: path
        name: submitter_specimen_id
        schema:
          type: string
        description: A unique value identifying this specimen.
        required: true
      tags:
      - specimens
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v1/moh/surgeries/:
    get:
      operationId: surgeries_list
      parameters:
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: submitter_specimen_id
        schema:
          type: string
      - in: query
        name: submitter_treatment_id
        schema:
          type: string
      - in: query
        name: surgery_type
        schema:
          type: string
      - in: query
        name: surgery_site
        schema:
          type: string
      - in: query
        name: surgery_location
        schema:
          type: string
      - in: query
        name: tumour_length
        schema:
          type: integer
      - in: query
        name: tumour_width
        schema:
          type: integer
      - in: query
        name: greatest_dimension_tumour
        schema:
          type: integer
      - in: query
        name: tumour_focality
        schema:
          type: string
      - in: query
        name: residual_tumour_classification
        schema:
          type: string
      - in: query
        name: margin_types_involved
        schema:
          type: string
      - in: query
        name: margin_types_not_involved
        schema:
          type: string
      - in: query
        name: margin_types_not_assessed
        schema:
          type: string
      - in: query
        name: lymphovascular_invasion
        schema:
          type: string
      - in: query
        name: perineural_invasion
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - surgeries
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSurgeryList'
          description: ''
    post:
      operationId: surgeries_create
      tags:
      - surgeries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SurgeryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SurgeryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SurgeryRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Surgery'
          description: ''
  /api/v1/moh/surgeries/{id}/:
    get:
      operationId: surgeries_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this surgery.
        required: true
      tags:
      - surgeries
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Surgery'
          description: ''
    put:
      operationId: surgeries_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this surgery.
        required: true
      tags:
      - surgeries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SurgeryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SurgeryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SurgeryRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Surgery'
          description: ''
    patch:
      operationId: surgeries_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this surgery.
        required: true
      tags:
      - surgeries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSurgeryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSurgeryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSurgeryRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Surgery'
          description: ''
    delete:
      operationId: surgeries_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this surgery.
        required: true
      tags:
      - surgeries
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v1/moh/treatments/:
    get:
      operationId: treatments_list
      parameters:
      - in: query
        name: submitter_treatment_id
        schema:
          type: string
      - in: query
        name: program_id
        schema:
          type: string
      - in: query
        name: submitter_donor_id
        schema:
          type: string
      - in: query
        name: submitter_primary_diagnosis_id
        schema:
          type: string
      - in: query
        name: treatment_type
        schema:
          type: string
      - in: query
        name: is_primary_treatment
        schema:
          type: string
      - in: query
        name: treatment_start_date
        schema:
          type: string
      - in: query
        name: treatment_end_date
        schema:
          type: string
      - in: query
        name: treatment_setting
        schema:
          type: string
      - in: query
        name: treatment_intent
        schema:
          type: string
      - in: query
        name: days_per_cycle
        schema:
          type: integer
      - in: query
        name: number_of_cycles
        schema:
          type: integer
      - in: query
        name: response_to_treatment_criteria_method
        schema:
          type: string
      - in: query
        name: response_to_treatment
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - treatments
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTreatmentList'
          description: ''
    post:
      operationId: treatments_create
      tags:
      - treatments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TreatmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TreatmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TreatmentRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Treatment'
          description: ''
  /api/v1/moh/treatments/{submitter_treatment_id}/:
    get:
      operationId: treatments_retrieve
      parameters:
      - in: path
        name: submitter_treatment_id
        schema:
          type: string
        description: A unique value identifying this treatment.
        required: true
      tags:
      - treatments
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Treatment'
          description: ''
    put:
      operationId: treatments_update
      parameters:
      - in: path
        name: submitter_treatment_id
        schema:
          type: string
        description: A unique value identifying this treatment.
        required: true
      tags:
      - treatments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TreatmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TreatmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TreatmentRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Treatment'
          description: ''
    patch:
      operationId: treatments_partial_update
      parameters:
      - in: path
        name: submitter_treatment_id
        schema:
          type: string
        description: A unique value identifying this treatment.
        required: true
      tags:
      - treatments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTreatmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTreatmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTreatmentRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Treatment'
          description: ''
    delete:
      operationId: treatments_destroy
      parameters:
      - in: path
        name: submitter_treatment_id
        schema:
          type: string
        description: A unique value identifying this treatment.
        required: true
      tags:
      - treatments
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
  /api/variants:
    get:
      operationId: api_variants_list
      description: |-
        get:
        Return a list of all existing variants

        post:
        Create a new variant
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: allele_type
        schema:
          type: string
      - in: query
        name: zygosity
        schema:
          type: string
        description: Zygosity
      - in: query
        name: extra_properties
        schema:
          type: string
        description: Extra properties
      - in: query
        name: datasets
        schema:
          type: string
        description: Datasets
      - in: query
        name: authorized_datasets
        schema:
          type: string
        description: Authorized datasets
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVariantList'
          description: ''
    post:
      operationId: api_variants_create
      description: |-
        get:
        Return a list of all existing variants

        post:
        Create a new variant
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariantRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VariantRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VariantRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variant'
          description: ''
  /api/variants/{id}:
    get:
      operationId: api_variants_retrieve
      description: |-
        get:
        Return a list of all existing variants

        post:
        Create a new variant
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this variant.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variant'
          description: ''
    put:
      operationId: api_variants_update
      description: |-
        get:
        Return a list of all existing variants

        post:
        Create a new variant
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this variant.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariantRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VariantRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VariantRequest'
        required: true
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variant'
          description: ''
    patch:
      operationId: api_variants_partial_update
      description: |-
        get:
        Return a list of all existing variants

        post:
        Create a new variant
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this variant.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVariantRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVariantRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVariantRequest'
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variant'
          description: ''
    delete:
      operationId: api_variants_destroy
      description: |-
        get:
        Return a list of all existing variants

        post:
        Create a new variant
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this variant.
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - fhir
          - json
          - phenopackets
      tags:
      - api
      security:
      - BentoRemoteUserAuthentication: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    AlleleTypeEnum:
      enum:
      - hgvsAllele
      - vcfAllele
      - spdiAllele
      - iscnAllele
      type: string
    AnatomicalSiteIrradiatedEnum:
      enum:
      - Cervical lymph node group
      - Entire lymph node of thorax
      - Axillary lymph node group
      - Supraclavicular lymph node group
      - Internal mammary lymph node group
      - Abdominal lymph node group
      - Pelvic lymph node group
      - Structure of lymph node
      - Entire eye
      - Pituitary structure
      - Brain structure
      - Brain part
      - Spinal cord structure
      - Nasopharyngeal structure
      - Oral cavity structure
      - Oropharyngeal structure
      - Laryngeal structure
      - Hypopharyngeal structure
      - Nasal sinus structure
      - Salivary gland structure
      - Thyroid structure
      - Entire head and neck
      - Entire lung
      - Mesothelium structure
      - Entire thorax
      - Entire breast
      - Breast part
      - Chest wall structure
      - Entire esophagus
      - Stomach structure
      - Small intestinal structure
      - Colon structure
      - Rectum structure
      - Anal structure
      - Liver structure
      - Biliary tract structure
      - Gallbladder structure
      - Pancreatic structure
      - Abdominal structure
      - Entire urinary bladder
      - Bladder part
      - Kidney structure
      - Ureteric structure
      - Entire prostate
      - Prostate part
      - Urethral structure
      - Penile structure
      - Testis structure
      - Scrotal structure
      - Ovarian structure
      - Fallopian tube structure
      - Uterine structure
      - Cervix uteri structure
      - Vaginal structure
      - Vulval structure
      - Bone structure of cranium
      - Entire vertebral column
      - Shoulder region structure
      - Bone structure of rib
      - Hip region structure
      - Entire bony pelvis
      - Pelvic structure
      - Bone structure of extremity
      - Skin structure
      - Soft tissues
      - Entire body as a whole
      type: string
    BasisOfDiagnosisEnum:
      enum:
      - Clinical investigation
      - Clinical
      - Cytology
      - Death certificate only
      - Histology of a metastasis
      - Histology of a primary tumour
      - Specific tumour markers
      - Unknown
      type: string
    Biomarker:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        test_interval:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        psa_level:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        ca125:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        cea:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        program_id:
          type: string
        submitter_donor_id:
          type: string
        submitter_specimen_id:
          type: string
          nullable: true
        submitter_primary_diagnosis_id:
          type: string
          nullable: true
        submitter_treatment_id:
          type: string
          nullable: true
        submitter_follow_up_id:
          type: string
          nullable: true
      required:
      - program_id
      - submitter_donor_id
    BiomarkerRequest:
      type: object
      properties:
        test_interval:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        psa_level:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        ca125:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        cea:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        program_id:
          type: string
          minLength: 1
        submitter_donor_id:
          type: string
          minLength: 1
        submitter_specimen_id:
          type: string
          minLength: 1
          nullable: true
        submitter_primary_diagnosis_id:
          type: string
          minLength: 1
          nullable: true
        submitter_treatment_id:
          type: string
          minLength: 1
          nullable: true
        submitter_follow_up_id:
          type: string
          minLength: 1
          nullable: true
      required:
      - program_id
      - submitter_donor_id
    Biosample:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: string
          description: Unique arbitrary, researcher-specified identifier for the biosample.
          maxLength: 200
        phenotypic_features:
          type: array
          items:
            $ref: '#/components/schemas/PhenotypicFeature'
          readOnly: true
        procedure:
          $ref: '#/components/schemas/Procedure'
        variants:
          type: array
          items:
            $ref: '#/components/schemas/Variant'
          readOnly: true
        experiments:
          type: array
          items:
            $ref: '#/components/schemas/Experiment'
          readOnly: true
        description:
          type: string
          description: Human-readable, unstructured text describing the biosample
            or providing additional information.
          maxLength: 200
        sampled_tissue:
          type: object
          additionalProperties: {}
          description: An ontology term describing the tissue from which the specimen
            was collected. The use of UBERON is recommended.
        taxonomy:
          type: object
          additionalProperties: {}
          nullable: true
          description: An ontology term specified when more than one organism may
            be studied. It is advised that codesfrom the NCBI Taxonomy resource are
            used, e.g. NCBITaxon:9606 for humans.
        individual_age_at_collection:
          type: object
          additionalProperties: {}
          nullable: true
          description: individual_age_at_collection
        histological_diagnosis:
          type: object
          additionalProperties: {}
          nullable: true
          description: An ontology term representing a refinement of the clinical
            diagnosis. Normal samples could be tagged with NCIT:C38757, representing
            a negative finding.
        tumor_progression:
          type: object
          additionalProperties: {}
          nullable: true
          description: An ontology term representing if the specimen is from a primary
            tumour, a metastasis, or a recurrence. There are multiple ways of representing
            this using ontology terms, and the terms chosen will have a specific meaning
            that is application specific.
        tumor_grade:
          type: object
          additionalProperties: {}
          nullable: true
          description: An ontology term representing the tumour grade. This should
            be a child term of NCIT:C28076 (Disease Grade Qualifier) or equivalent.
        diagnostic_markers:
          type: object
          additionalProperties: {}
          nullable: true
          description: A list of ontology terms representing clinically-relevant bio-markers.
        is_control_sample:
          type: boolean
          description: Whether the sample is being used as a normal control.
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        hts_files:
          type: array
          items:
            type: string
            format: uri
          description: A list of HTS files derived from the biosample.
      required:
      - id
      - procedure
      - sampled_tissue
    BiosampleRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: string
          minLength: 1
          description: Unique arbitrary, researcher-specified identifier for the biosample.
          maxLength: 200
        procedure:
          $ref: '#/components/schemas/ProcedureRequest'
        description:
          type: string
          description: Human-readable, unstructured text describing the biosample
            or providing additional information.
          maxLength: 200
        sampled_tissue:
          type: object
          additionalProperties: {}
          description: An ontology term describing the tissue from which the specimen
            was collected. The use of UBERON is recommended.
        taxonomy:
          type: object
          additionalProperties: {}
          nullable: true
          description: An ontology term specified when more than one organism may
            be studied. It is advised that codesfrom the NCBI Taxonomy resource are
            used, e.g. NCBITaxon:9606 for humans.
        individual_age_at_collection:
          type: object
          additionalProperties: {}
          nullable: true
          description: individual_age_at_collection
        histological_diagnosis:
          type: object
          additionalProperties: {}
          nullable: true
          description: An ontology term representing a refinement of the clinical
            diagnosis. Normal samples could be tagged with NCIT:C38757, representing
            a negative finding.
        tumor_progression:
          type: object
          additionalProperties: {}
          nullable: true
          description: An ontology term representing if the specimen is from a primary
            tumour, a metastasis, or a recurrence. There are multiple ways of representing
            this using ontology terms, and the terms chosen will have a specific meaning
            that is application specific.
        tumor_grade:
          type: object
          additionalProperties: {}
          nullable: true
          description: An ontology term representing the tumour grade. This should
            be a child term of NCIT:C28076 (Disease Grade Qualifier) or equivalent.
        diagnostic_markers:
          type: object
          additionalProperties: {}
          nullable: true
          description: A list of ontology terms representing clinically-relevant bio-markers.
        is_control_sample:
          type: boolean
          description: Whether the sample is being used as a normal control.
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
        hts_files:
          type: array
          items:
            type: string
            format: uri
            minLength: 1
          description: A list of HTS files derived from the biosample.
      required:
      - id
      - procedure
      - sampled_tissue
    BlankEnum:
      enum:
      - ''
    BooleanEnum:
      enum:
      - 'Yes'
      - 'No'
      - Unknown
      type: string
    CauseOfDeathEnum:
      enum:
      - Died of cancer
      - Died of other reasons
      - Unknown
      type: string
    Chemotherapy:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        chemotherapy_dosage_units:
          $ref: '#/components/schemas/ChemotherapyDosageUnitsEnum'
        drug_name:
          type: string
          maxLength: 255
        drug_rxnormcui:
          type: string
          maxLength: 64
        cumulative_drug_dosage_prescribed:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        cumulative_drug_dosage_actual:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        program_id:
          type: string
        submitter_donor_id:
          type: string
        submitter_treatment_id:
          type: string
      required:
      - chemotherapy_dosage_units
      - drug_name
      - drug_rxnormcui
      - program_id
      - submitter_donor_id
      - submitter_treatment_id
    ChemotherapyDosageUnitsEnum:
      enum:
      - mg/m2
      - IU/m2
      - ug/m2
      - g/m2
      - mg/kg
      type: string
    ChemotherapyRequest:
      type: object
      properties:
        chemotherapy_dosage_units:
          $ref: '#/components/schemas/ChemotherapyDosageUnitsEnum'
        drug_name:
          type: string
          minLength: 1
          maxLength: 255
        drug_rxnormcui:
          type: string
          minLength: 1
          maxLength: 64
        cumulative_drug_dosage_prescribed:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        cumulative_drug_dosage_actual:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        program_id:
          type: string
          minLength: 1
        submitter_donor_id:
          type: string
          minLength: 1
        submitter_treatment_id:
          type: string
          minLength: 1
      required:
      - chemotherapy_dosage_units
      - drug_name
      - drug_rxnormcui
      - program_id
      - submitter_donor_id
      - submitter_treatment_id
    Comorbidity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        prior_malignancy:
          $ref: '#/components/schemas/BooleanEnum'
        laterality_of_prior_malignancy:
          oneOf:
          - $ref: '#/components/schemas/LateralityOfPriorMalignancyEnum'
          - $ref: '#/components/schemas/BlankEnum'
        comorbidity_type_code:
          type: string
          maxLength: 64
          pattern: ^[A-Z][0-9]{2}(.[0-9]{1,3}[A-Z]{0,1})?$
        comorbidity_treatment_status:
          oneOf:
          - $ref: '#/components/schemas/BooleanEnum'
          - $ref: '#/components/schemas/BlankEnum'
        comorbidity_treatment:
          type: string
          maxLength: 255
        age_at_comorbidity_diagnosis:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        program_id:
          type: string
        submitter_donor_id:
          type: string
      required:
      - comorbidity_treatment
      - comorbidity_treatment_status
      - comorbidity_type_code
      - laterality_of_prior_malignancy
      - prior_malignancy
      - program_id
      - submitter_donor_id
    ComorbidityRequest:
      type: object
      properties:
        prior_malignancy:
          $ref: '#/components/schemas/BooleanEnum'
        laterality_of_prior_malignancy:
          oneOf:
          - $ref: '#/components/schemas/LateralityOfPriorMalignancyEnum'
          - $ref: '#/components/schemas/BlankEnum'
        comorbidity_type_code:
          type: string
          maxLength: 64
          pattern: ^[A-Z][0-9]{2}(.[0-9]{1,3}[A-Z]{0,1})?$
        comorbidity_treatment_status:
          oneOf:
          - $ref: '#/components/schemas/BooleanEnum'
          - $ref: '#/components/schemas/BlankEnum'
        comorbidity_treatment:
          type: string
          maxLength: 255
        age_at_comorbidity_diagnosis:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        program_id:
          type: string
          minLength: 1
        submitter_donor_id:
          type: string
          minLength: 1
      required:
      - comorbidity_treatment
      - comorbidity_treatment_status
      - comorbidity_type_code
      - laterality_of_prior_malignancy
      - prior_malignancy
      - program_id
      - submitter_donor_id
    DataTypeEnum:
      enum:
      - experiment
      - phenopacket
      type: string
    Dataset:
      type: object
      description: Subclass of ModelSerializer
      properties:
        identifier:
          type: string
          format: uuid
          readOnly: true
        table_ownership:
          type: array
          items:
            $ref: '#/components/schemas/TableOwnership'
          readOnly: true
        n_of_tables:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        contact_info:
          type: string
        data_use:
          type: object
          additionalProperties: {}
        linked_field_sets:
          type: object
          additionalProperties: {}
          description: Data type fields which are linked together.
        alternate_identifiers:
          type: object
          additionalProperties: {}
          description: Alternate identifiers for the dataset.
        related_identifiers:
          type: object
          additionalProperties: {}
          description: Related identifiers for the dataset.
        dates:
          type: object
          additionalProperties: {}
          description: Relevant dates for the datasets, a date must be added, e.g.
            creation date or last modification date should be added.
        stored_in:
          type: object
          additionalProperties: {}
          nullable: true
          description: The data repository hosting the dataset.
        spatial_coverage:
          type: object
          additionalProperties: {}
          description: The geographical extension and span covered by the dataset
            and its measured dimensions/variables.
        types:
          type: object
          additionalProperties: {}
          description: A term, ideally from a controlled terminology, identifying
            the dataset type or nature of the data, placing it in a typology.
        availability:
          type: string
          description: A qualifier indicating the different types of availability
            for a dataset (available, unavailable, embargoed, available with restriction,
            information not available).
          maxLength: 200
        refinement:
          type: string
          description: A qualifier to describe the level of data processing of the
            dataset and its distributions.
          maxLength: 200
        aggregation:
          type: string
          description: A qualifier indicating if the entity represents an 'instance
            of dataset' or a 'collection of datasets'.
          maxLength: 200
        privacy:
          type: string
          description: A qualifier to describe the data protection applied to the
            dataset. This is relevant for clinical data.
          maxLength: 200
        distributions:
          type: object
          additionalProperties: {}
          description: 'The distribution(s) by which datasets are made available (for
            example: mySQL dump).'
        dimensions:
          type: object
          additionalProperties: {}
          description: The different dimensions (granular components) making up a
            dataset.
        primary_publications:
          type: object
          additionalProperties: {}
          description: The primary publication(s) associated with the dataset, usually
            describing how the dataset was produced.
        citations:
          type: object
          additionalProperties: {}
          description: The publication(s) that cite this dataset.
        citation_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The number of publications that cite this dataset (enumerated
            in the citations property).
        produced_by:
          type: object
          additionalProperties: {}
          nullable: true
          description: A study process which generated a given dataset, if any.
        creators:
          type: object
          additionalProperties: {}
          description: The person(s) or organization(s) which contributed to the creation
            of the dataset.
        licenses:
          type: object
          additionalProperties: {}
          description: The terms of use of the dataset.
        acknowledges:
          type: object
          additionalProperties: {}
          description: The grant(s) which funded the work reported by the dataset.
        keywords:
          type: object
          additionalProperties: {}
          description: Tags associated with the dataset, which will help in its discovery.
        version:
          type: string
          description: A release point for the dataset when applicable.
          maxLength: 200
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that do not fit in the previous specified
            attributes.
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        project:
          type: string
          format: uuid
        additional_resources:
          type: array
          items:
            type: string
          description: Any resource objects linked to this dataset that aren't specified
            by a phenopacket in the dataset.
        has_part:
          type: array
          items:
            type: string
            format: uuid
          description: A Dataset that is a subset of this Dataset; Datasets declaring
            the 'hasPart' relationship are considered a collection of Datasets, the
            aggregation criteria could be included in the 'description' field.
      required:
      - data_use
      - project
      - title
    DatasetRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
        contact_info:
          type: string
        data_use:
          type: object
          additionalProperties: {}
        linked_field_sets:
          type: object
          additionalProperties: {}
          description: Data type fields which are linked together.
        alternate_identifiers:
          type: object
          additionalProperties: {}
          description: Alternate identifiers for the dataset.
        related_identifiers:
          type: object
          additionalProperties: {}
          description: Related identifiers for the dataset.
        dates:
          type: object
          additionalProperties: {}
          description: Relevant dates for the datasets, a date must be added, e.g.
            creation date or last modification date should be added.
        stored_in:
          type: object
          additionalProperties: {}
          nullable: true
          description: The data repository hosting the dataset.
        spatial_coverage:
          type: object
          additionalProperties: {}
          description: The geographical extension and span covered by the dataset
            and its measured dimensions/variables.
        types:
          type: object
          additionalProperties: {}
          description: A term, ideally from a controlled terminology, identifying
            the dataset type or nature of the data, placing it in a typology.
        availability:
          type: string
          description: A qualifier indicating the different types of availability
            for a dataset (available, unavailable, embargoed, available with restriction,
            information not available).
          maxLength: 200
        refinement:
          type: string
          description: A qualifier to describe the level of data processing of the
            dataset and its distributions.
          maxLength: 200
        aggregation:
          type: string
          description: A qualifier indicating if the entity represents an 'instance
            of dataset' or a 'collection of datasets'.
          maxLength: 200
        privacy:
          type: string
          description: A qualifier to describe the data protection applied to the
            dataset. This is relevant for clinical data.
          maxLength: 200
        distributions:
          type: object
          additionalProperties: {}
          description: 'The distribution(s) by which datasets are made available (for
            example: mySQL dump).'
        dimensions:
          type: object
          additionalProperties: {}
          description: The different dimensions (granular components) making up a
            dataset.
        primary_publications:
          type: object
          additionalProperties: {}
          description: The primary publication(s) associated with the dataset, usually
            describing how the dataset was produced.
        citations:
          type: object
          additionalProperties: {}
          description: The publication(s) that cite this dataset.
        citation_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The number of publications that cite this dataset (enumerated
            in the citations property).
        produced_by:
          type: object
          additionalProperties: {}
          nullable: true
          description: A study process which generated a given dataset, if any.
        creators:
          type: object
          additionalProperties: {}
          description: The person(s) or organization(s) which contributed to the creation
            of the dataset.
        licenses:
          type: object
          additionalProperties: {}
          description: The terms of use of the dataset.
        acknowledges:
          type: object
          additionalProperties: {}
          description: The grant(s) which funded the work reported by the dataset.
        keywords:
          type: object
          additionalProperties: {}
          description: Tags associated with the dataset, which will help in its discovery.
        version:
          type: string
          description: A release point for the dataset when applicable.
          maxLength: 200
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that do not fit in the previous specified
            attributes.
        project:
          type: string
          format: uuid
        additional_resources:
          type: array
          items:
            type: string
            minLength: 1
          description: Any resource objects linked to this dataset that aren't specified
            by a phenopacket in the dataset.
        has_part:
          type: array
          items:
            type: string
            format: uuid
          description: A Dataset that is a subset of this Dataset; Datasets declaring
            the 'hasPart' relationship are considered a collection of Datasets, the
            aggregation criteria could be included in the 'description' field.
      required:
      - data_use
      - project
      - title
    Diagnosis:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: integer
          readOnly: true
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        disease:
          type: integer
          description: The diagnosed condition.
        genomic_interpretations:
          type: array
          items:
            type: integer
          description: The genomic elements assessed as being responsible for the
            disease.
      required:
      - disease
    DiagnosisRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema
        disease:
          type: integer
          description: The diagnosed condition.
        genomic_interpretations:
          type: array
          items:
            type: integer
          description: The genomic elements assessed as being responsible for the
            disease.
      required:
      - disease
    Discovery:
      type: object
      description: |-
        This serializer is used to return the discovery_count.
        It also override the list serializer to a single object
      properties:
        discovery_count:
          type: integer
      required:
      - discovery_count
    Disease:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: integer
          readOnly: true
        term:
          type: object
          additionalProperties: {}
          description: An ontology term that represents the disease. It's recommended
            that one of the OMIM, Orphanet, or MONDO ontologies is used for rare human
            diseases.
        onset:
          type: object
          additionalProperties: {}
          nullable: true
          description: A representation of the age of onset of the disease
        disease_stage:
          type: object
          additionalProperties: {}
          nullable: true
          description: A list of terms representing the disease stage. Elements should
            be derived from child terms of NCIT:C28108 (Disease Stage Qualifier) or
            equivalent hierarchy from another ontology.
        tnm_finding:
          type: object
          additionalProperties: {}
          nullable: true
          description: A list of terms representing the tumour TNM score. Elements
            should be derived from child terms of NCIT:C48232 (Cancer TNM Finding)
            or equivalent hierarchy from another ontology.
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - term
    DiseaseRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        term:
          type: object
          additionalProperties: {}
          description: An ontology term that represents the disease. It's recommended
            that one of the OMIM, Orphanet, or MONDO ontologies is used for rare human
            diseases.
        onset:
          type: object
          additionalProperties: {}
          nullable: true
          description: A representation of the age of onset of the disease
        disease_stage:
          type: object
          additionalProperties: {}
          nullable: true
          description: A list of terms representing the disease stage. Elements should
            be derived from child terms of NCIT:C28108 (Disease Stage Qualifier) or
            equivalent hierarchy from another ontology.
        tnm_finding:
          type: object
          additionalProperties: {}
          nullable: true
          description: A list of terms representing the tumour TNM score. Elements
            should be derived from child terms of NCIT:C48232 (Cancer TNM Finding)
            or equivalent hierarchy from another ontology.
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
      required:
      - term
    DiseaseStatusAtFollowupEnum:
      enum:
      - Complete remission
      - Distant progression
      - Loco-regional progression
      - No evidence of disease
      - Partial remission
      - Progression NOS
      - Relapse or recurrence
      - Stable
      type: string
    Donor:
      type: object
      properties:
        submitter_donor_id:
          type: string
          maxLength: 64
          pattern: ^[A-Za-z0-9\-\._]{1,64}
        cause_of_death:
          oneOf:
          - $ref: '#/components/schemas/CauseOfDeathEnum'
          - $ref: '#/components/schemas/BlankEnum'
        date_of_birth:
          type: string
          maxLength: 32
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
        date_of_death:
          type: string
          maxLength: 32
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
        primary_site:
          $ref: '#/components/schemas/PrimarySiteEnum'
        is_deceased:
          type: boolean
        program_id:
          type: string
      required:
      - cause_of_death
      - date_of_birth
      - date_of_death
      - is_deceased
      - primary_site
      - program_id
      - submitter_donor_id
    DonorRequest:
      type: object
      properties:
        submitter_donor_id:
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[A-Za-z0-9\-\._]{1,64}
        cause_of_death:
          oneOf:
          - $ref: '#/components/schemas/CauseOfDeathEnum'
          - $ref: '#/components/schemas/BlankEnum'
        date_of_birth:
          type: string
          minLength: 1
          maxLength: 32
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
        date_of_death:
          type: string
          maxLength: 32
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
        primary_site:
          $ref: '#/components/schemas/PrimarySiteEnum'
        is_deceased:
          type: boolean
        program_id:
          type: string
          minLength: 1
      required:
      - cause_of_death
      - date_of_birth
      - date_of_death
      - is_deceased
      - primary_site
      - program_id
      - submitter_donor_id
    Experiment:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: string
          description: An arbitrary identifier for the experiment.
          maxLength: 200
        experiment_results:
          type: array
          items:
            $ref: '#/components/schemas/ExperimentResult'
          readOnly: true
        instrument:
          $ref: '#/components/schemas/Instrument'
        study_type:
          type: string
          nullable: true
          description: Which study type the experiment belongs to.E.g. Epigenomics,
            Proteomics, Metagenomics, Transcriptomics, Metabolomics.
          maxLength: 200
        experiment_type:
          type: string
          description: (Controlled Vocabulary) The assay target (e.g. DNA Methylation,
            mRNA-Seq, smRNA-Seq, Histone H3K4me1, etc.).
          maxLength: 200
        experiment_ontology:
          type: object
          additionalProperties: {}
          description: Links to experiment ontology information (e.g. via the OBI
            ontology.).
        molecule:
          type: string
          nullable: true
          description: '(Controlled Vocabulary) The type of molecule that was extracted
            from the biological material.Include one of the following: total RNA,
            polyA RNA, cytoplasmic RNA, nuclear RNA, small RNA, genomic DNA, protein,
            or other.'
          maxLength: 200
        molecule_ontology:
          type: object
          additionalProperties: {}
          description: Links to molecule ontology information (e.g. via the SO ontology.).
        library_strategy:
          type: string
          nullable: true
          description: (Controlled Vocabulary) The assay used. These are defined within
            the SRA metadata specifications with a controlled vocabulary (e.g. Bisulfite-Seq,
            RNA-Seq, ChIP-Seq). For a complete list, see https://www.ebi.ac.uk/ena/submit/reads-library-strategy.
          maxLength: 200
        library_source:
          type: string
          nullable: true
          description: The type of source material that is being sequenced. E.g. Genomic,
            Genomic Single Cell,Transcriptomic, Transcriptomic Single Cell, Metagenomic,
            Metatranscriptomic, Synthetic,Viral RNA, Other.
          maxLength: 200
        library_selection:
          type: string
          nullable: true
          description: Method used to enrich the target in the sequence library preparation.
            E.g. Random, PCR, Random PCR, RT-PCR, MF and other.
          maxLength: 200
        library_layout:
          type: string
          nullable: true
          description: The library layout. E.g. Single, Paired.
          maxLength: 200
        extraction_protocol:
          type: string
          nullable: true
          description: The protocol used to isolate the extract material.
          maxLength: 200
        reference_registry_id:
          type: string
          nullable: true
          description: The IHEC EpiRR ID for this dataset, only for IHEC Reference
            Epigenome datasets. Otherwise leave empty.
          maxLength: 200
        qc_flags:
          type: array
          items:
            type: string
            description: Any quality control observations can be noted here. This
              field can be omitted if empty.
            maxLength: 200
        extra_properties:
          type: object
          additionalProperties: {}
          description: Extra properties that are not supported by current schema.
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        biosample:
          type: string
          description: Biosample on which this experiment was done.
        table:
          type: string
          nullable: true
      required:
      - biosample
      - experiment_type
      - id
      - instrument
    ExperimentRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: string
          minLength: 1
          description: An arbitrary identifier for the experiment.
          maxLength: 200
        instrument:
          $ref: '#/components/schemas/InstrumentRequest'
        study_type:
          type: string
          nullable: true
          description: Which study type the experiment belongs to.E.g. Epigenomics,
            Proteomics, Metagenomics, Transcriptomics, Metabolomics.
          maxLength: 200
        experiment_type:
          type: string
          minLength: 1
          description: (Controlled Vocabulary) The assay target (e.g. DNA Methylation,
            mRNA-Seq, smRNA-Seq, Histone H3K4me1, etc.).
          maxLength: 200
        experiment_ontology:
          type: object
          additionalProperties: {}
          description: Links to experiment ontology information (e.g. via the OBI
            ontology.).
        molecule:
          type: string
          nullable: true
          description: '(Controlled Vocabulary) The type of molecule that was extracted
            from the biological material.Include one of the following: total RNA,
            polyA RNA, cytoplasmic RNA, nuclear RNA, small RNA, genomic DNA, protein,
            or other.'
          maxLength: 200
        molecule_ontology:
          type: object
          additionalProperties: {}
          description: Links to molecule ontology information (e.g. via the SO ontology.).
        library_strategy:
          type: string
          nullable: true
          description: (Controlled Vocabulary) The assay used. These are defined within
            the SRA metadata specifications with a controlled vocabulary (e.g. Bisulfite-Seq,
            RNA-Seq, ChIP-Seq). For a complete list, see https://www.ebi.ac.uk/ena/submit/reads-library-strategy.
          maxLength: 200
        library_source:
          type: string
          nullable: true
          description: The type of source material that is being sequenced. E.g. Genomic,
            Genomic Single Cell,Transcriptomic, Transcriptomic Single Cell, Metagenomic,
            Metatranscriptomic, Synthetic,Viral RNA, Other.
          maxLength: 200
        library_selection:
          type: string
          nullable: true
          description: Method used to enrich the target in the sequence library preparation.
            E.g. Random, PCR, Random PCR, RT-PCR, MF and other.
          maxLength: 200
        library_layout:
          type: string
          nullable: true
          description: The library layout. E.g. Single, Paired.
          maxLength: 200
        extraction_protocol:
          type: string
          nullable: true
          description: The protocol used to isolate the extract material.
          maxLength: 200
        reference_registry_id:
          type: string
          nullable: true
          description: The IHEC EpiRR ID for this dataset, only for IHEC Reference
            Epigenome datasets. Otherwise leave empty.
          maxLength: 200
        qc_flags:
          type: array
          items:
            type: string
            minLength: 1
            description: Any quality control observations can be noted here. This
              field can be omitted if empty.
            maxLength: 200
        extra_properties:
          type: object
          additionalProperties: {}
          description: Extra properties that are not supported by current schema.
        biosample:
          type: string
          minLength: 1
          description: Biosample on which this experiment was done.
        table:
          type: string
          minLength: 1
          nullable: true
      required:
      - biosample
      - experiment_type
      - id
      - instrument
    ExperimentResult:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: integer
          readOnly: true
        identifier:
          type: string
          nullable: true
          description: An arbitrary identifier for an experiment result.
          maxLength: 200
        description:
          type: string
          nullable: true
          description: Description of an experiment result.
          maxLength: 500
        filename:
          type: string
          nullable: true
          description: The name of the file containing the result.
          maxLength: 500
        genome_assembly_id:
          type: string
          nullable: true
          description: Reference genome assembly ID.
          maxLength: 50
        file_format:
          type: string
          nullable: true
          description: (Controlled Vocabulary) File format.
          maxLength: 50
        data_output_type:
          type: string
          nullable: true
          description: 'The type of data output: Raw or Derived data.Raw data - the
            data output type that can be converted back to the original result set.
            Derived data - the data output type that cannot be converted back to the
            original result set.'
          maxLength: 200
        usage:
          type: string
          nullable: true
          description: 'Internal to the Bento: describe how data is used within Bento
            (visualized or can be downloaded).'
          maxLength: 200
        creation_date:
          type: string
          nullable: true
          description: The date when the experiment result file was created.
          maxLength: 500
        created_by:
          type: string
          nullable: true
          description: Name/Username/Code of the person who prepared the sequencing
            data.
          maxLength: 200
        extra_properties:
          type: object
          additionalProperties: {}
          description: Extra properties that are not supported by current schema.
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
    ExperimentResultRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        identifier:
          type: string
          nullable: true
          description: An arbitrary identifier for an experiment result.
          maxLength: 200
        description:
          type: string
          nullable: true
          description: Description of an experiment result.
          maxLength: 500
        filename:
          type: string
          nullable: true
          description: The name of the file containing the result.
          maxLength: 500
        genome_assembly_id:
          type: string
          nullable: true
          description: Reference genome assembly ID.
          maxLength: 50
        file_format:
          type: string
          nullable: true
          description: (Controlled Vocabulary) File format.
          maxLength: 50
        data_output_type:
          type: string
          nullable: true
          description: 'The type of data output: Raw or Derived data.Raw data - the
            data output type that can be converted back to the original result set.
            Derived data - the data output type that cannot be converted back to the
            original result set.'
          maxLength: 200
        usage:
          type: string
          nullable: true
          description: 'Internal to the Bento: describe how data is used within Bento
            (visualized or can be downloaded).'
          maxLength: 200
        creation_date:
          type: string
          nullable: true
          description: The date when the experiment result file was created.
          maxLength: 500
        created_by:
          type: string
          nullable: true
          description: Name/Username/Code of the person who prepared the sequencing
            data.
          maxLength: 200
        extra_properties:
          type: object
          additionalProperties: {}
          description: Extra properties that are not supported by current schema.
    FollowUp:
      type: object
      properties:
        submitter_follow_up_id:
          type: string
          maxLength: 64
        date_of_followup:
          type: string
          maxLength: 32
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
        lost_to_followup_reason:
          oneOf:
          - $ref: '#/components/schemas/LostToFollowupReasonEnum'
          - $ref: '#/components/schemas/BlankEnum'
        disease_status_at_followup:
          $ref: '#/components/schemas/DiseaseStatusAtFollowupEnum'
        relapse_type:
          oneOf:
          - $ref: '#/components/schemas/RelapseTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        date_of_relapse:
          type: string
          maxLength: 32
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
        method_of_progression_status:
          oneOf:
          - $ref: '#/components/schemas/MethodOfProgressionStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
        anatomic_site_progression_or_recurrence:
          type: string
          maxLength: 32
          pattern: ^[C][0-9]{2}(.[0-9]{1})?$
        recurrence_tumour_staging_system:
          oneOf:
          - $ref: '#/components/schemas/StagingSystemEnum'
          - $ref: '#/components/schemas/BlankEnum'
        recurrence_t_category:
          oneOf:
          - $ref: '#/components/schemas/TCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        recurrence_n_category:
          oneOf:
          - $ref: '#/components/schemas/NCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        recurrence_m_category:
          oneOf:
          - $ref: '#/components/schemas/MCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        recurrence_stage_group:
          oneOf:
          - $ref: '#/components/schemas/StageGroupEnum'
          - $ref: '#/components/schemas/BlankEnum'
        lost_to_followup:
          type: boolean
        program_id:
          type: string
        submitter_donor_id:
          type: string
        submitter_primary_diagnosis_id:
          type: string
          nullable: true
        submitter_treatment_id:
          type: string
          nullable: true
      required:
      - anatomic_site_progression_or_recurrence
      - date_of_followup
      - date_of_relapse
      - disease_status_at_followup
      - lost_to_followup
      - lost_to_followup_reason
      - method_of_progression_status
      - program_id
      - recurrence_m_category
      - recurrence_n_category
      - recurrence_stage_group
      - recurrence_t_category
      - recurrence_tumour_staging_system
      - relapse_type
      - submitter_donor_id
      - submitter_follow_up_id
    FollowUpRequest:
      type: object
      properties:
        submitter_follow_up_id:
          type: string
          minLength: 1
          maxLength: 64
        date_of_followup:
          type: string
          minLength: 1
          maxLength: 32
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
        lost_to_followup_reason:
          oneOf:
          - $ref: '#/components/schemas/LostToFollowupReasonEnum'
          - $ref: '#/components/schemas/BlankEnum'
        disease_status_at_followup:
          $ref: '#/components/schemas/DiseaseStatusAtFollowupEnum'
        relapse_type:
          oneOf:
          - $ref: '#/components/schemas/RelapseTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        date_of_relapse:
          type: string
          maxLength: 32
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
        method_of_progression_status:
          oneOf:
          - $ref: '#/components/schemas/MethodOfProgressionStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
        anatomic_site_progression_or_recurrence:
          type: string
          maxLength: 32
          pattern: ^[C][0-9]{2}(.[0-9]{1})?$
        recurrence_tumour_staging_system:
          oneOf:
          - $ref: '#/components/schemas/StagingSystemEnum'
          - $ref: '#/components/schemas/BlankEnum'
        recurrence_t_category:
          oneOf:
          - $ref: '#/components/schemas/TCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        recurrence_n_category:
          oneOf:
          - $ref: '#/components/schemas/NCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        recurrence_m_category:
          oneOf:
          - $ref: '#/components/schemas/MCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        recurrence_stage_group:
          oneOf:
          - $ref: '#/components/schemas/StageGroupEnum'
          - $ref: '#/components/schemas/BlankEnum'
        lost_to_followup:
          type: boolean
        program_id:
          type: string
          minLength: 1
        submitter_donor_id:
          type: string
          minLength: 1
        submitter_primary_diagnosis_id:
          type: string
          minLength: 1
          nullable: true
        submitter_treatment_id:
          type: string
          minLength: 1
          nullable: true
      required:
      - anatomic_site_progression_or_recurrence
      - date_of_followup
      - date_of_relapse
      - disease_status_at_followup
      - lost_to_followup
      - lost_to_followup_reason
      - method_of_progression_status
      - program_id
      - recurrence_m_category
      - recurrence_n_category
      - recurrence_stage_group
      - recurrence_t_category
      - recurrence_tumour_staging_system
      - relapse_type
      - submitter_donor_id
      - submitter_follow_up_id
    GenderEnum:
      enum:
      - Man
      - Woman
      - Non-binary
      type: string
    Gene:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: string
          description: Official identifier of the gene. It SHOULD be a CURIE identifier
            with a prefix used by the official organism gene nomenclature committee,
            e.g. HGNC:347 for humans.
          maxLength: 200
        alternate_ids:
          type: array
          items:
            type: string
        symbol:
          type: string
          description: A gene's official gene symbol as designated by the organism's
            gene nomenclature committee, e.g. ETF1 from the HUGO Gene Nomenclature
            committee.
          maxLength: 200
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - id
      - symbol
    GeneRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: string
          minLength: 1
          description: Official identifier of the gene. It SHOULD be a CURIE identifier
            with a prefix used by the official organism gene nomenclature committee,
            e.g. HGNC:347 for humans.
          maxLength: 200
        alternate_ids:
          type: array
          items:
            type: string
        symbol:
          type: string
          minLength: 1
          description: A gene's official gene symbol as designated by the organism's
            gene nomenclature committee, e.g. ETF1 from the HUGO Gene Nomenclature
            committee.
          maxLength: 200
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
      required:
      - id
      - symbol
    GenomicInterpretation:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: integer
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: How the call of this GenomicInterpretation was interpreted.
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        gene:
          type: string
          description: The gene contributing to the diagnosis.
          nullable: true
        variant:
          type: integer
          nullable: true
          description: The variant contributing to the diagnosis.
      required:
      - status
    GenomicInterpretationRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: How the call of this GenomicInterpretation was interpreted.
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema
        gene:
          type: string
          minLength: 1
          description: The gene contributing to the diagnosis.
          nullable: true
        variant:
          type: integer
          nullable: true
          description: The variant contributing to the diagnosis.
      required:
      - status
    HormoneTherapy:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        chemotherapy_dosage_units:
          $ref: '#/components/schemas/ChemotherapyDosageUnitsEnum'
        drug_name:
          type: string
          maxLength: 255
        drug_rxnormcui:
          type: string
          maxLength: 64
        hormone_drug_dosage_units:
          type: string
          maxLength: 64
        cumulative_drug_dosage_prescribed:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        cumulative_drug_dosage_actual:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        program_id:
          type: string
        submitter_donor_id:
          type: string
        submitter_treatment_id:
          type: string
      required:
      - chemotherapy_dosage_units
      - drug_name
      - drug_rxnormcui
      - hormone_drug_dosage_units
      - program_id
      - submitter_donor_id
      - submitter_treatment_id
    HormoneTherapyRequest:
      type: object
      properties:
        chemotherapy_dosage_units:
          $ref: '#/components/schemas/ChemotherapyDosageUnitsEnum'
        drug_name:
          type: string
          minLength: 1
          maxLength: 255
        drug_rxnormcui:
          type: string
          minLength: 1
          maxLength: 64
        hormone_drug_dosage_units:
          type: string
          minLength: 1
          maxLength: 64
        cumulative_drug_dosage_prescribed:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        cumulative_drug_dosage_actual:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        program_id:
          type: string
          minLength: 1
        submitter_donor_id:
          type: string
          minLength: 1
        submitter_treatment_id:
          type: string
          minLength: 1
      required:
      - chemotherapy_dosage_units
      - drug_name
      - drug_rxnormcui
      - hormone_drug_dosage_units
      - program_id
      - submitter_donor_id
      - submitter_treatment_id
    HtsFile:
      type: object
      description: Subclass of ModelSerializer
      properties:
        uri:
          type: string
          format: uri
          description: A valid URI to the file
          maxLength: 200
        description:
          type: string
          description: Human-readable text describing the file.
          maxLength: 200
        hts_format:
          allOf:
          - $ref: '#/components/schemas/HtsFormatEnum'
          description: The file's format; one of SAM, BAM, CRAM, VCF, BCF, GVCF, FASTQ,
            or UNKNOWN.
        genome_assembly:
          type: string
          description: Genome assembly ID for the file, e.g. GRCh38.
          maxLength: 200
        individual_to_sample_identifiers:
          type: object
          additionalProperties: {}
          nullable: true
          description: Mapping between individual or biosample IDs and the sample
            identifier in the HTS file.
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - genome_assembly
      - hts_format
      - uri
    HtsFileRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        uri:
          type: string
          format: uri
          minLength: 1
          description: A valid URI to the file
          maxLength: 200
        description:
          type: string
          description: Human-readable text describing the file.
          maxLength: 200
        hts_format:
          allOf:
          - $ref: '#/components/schemas/HtsFormatEnum'
          description: The file's format; one of SAM, BAM, CRAM, VCF, BCF, GVCF, FASTQ,
            or UNKNOWN.
        genome_assembly:
          type: string
          minLength: 1
          description: Genome assembly ID for the file, e.g. GRCh38.
          maxLength: 200
        individual_to_sample_identifiers:
          type: object
          additionalProperties: {}
          nullable: true
          description: Mapping between individual or biosample IDs and the sample
            identifier in the HTS file.
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
      required:
      - genome_assembly
      - hts_format
      - uri
    HtsFormatEnum:
      enum:
      - UNKNOWN
      - SAM
      - BAM
      - CRAM
      - VCF
      - BCF
      - GVCF
      type: string
    Immunotherapy:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        immunotherapy_type:
          $ref: '#/components/schemas/ImmunotherapyTypeEnum'
        drug_name:
          type: string
          maxLength: 255
        drug_rxnormcui:
          type: string
          maxLength: 64
        program_id:
          type: string
        submitter_donor_id:
          type: string
        submitter_treatment_id:
          type: string
      required:
      - drug_name
      - drug_rxnormcui
      - immunotherapy_type
      - program_id
      - submitter_donor_id
      - submitter_treatment_id
    ImmunotherapyRequest:
      type: object
      properties:
        immunotherapy_type:
          $ref: '#/components/schemas/ImmunotherapyTypeEnum'
        drug_name:
          type: string
          minLength: 1
          maxLength: 255
        drug_rxnormcui:
          type: string
          minLength: 1
          maxLength: 64
        program_id:
          type: string
          minLength: 1
        submitter_donor_id:
          type: string
          minLength: 1
        submitter_treatment_id:
          type: string
          minLength: 1
      required:
      - drug_name
      - drug_rxnormcui
      - immunotherapy_type
      - program_id
      - submitter_donor_id
      - submitter_treatment_id
    ImmunotherapyTypeEnum:
      enum:
      - Cell-based
      - Immune checkpoint inhibitors
      - Monoclonal antibodies other than immune checkpoint inhibitors
      - Other immunomodulatory substances
      type: string
    Individual:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: string
          description: An arbitrary identifier for the individual.
          maxLength: 200
        biosamples:
          type: array
          items:
            $ref: '#/components/schemas/Biosample'
          readOnly: true
        phenopackets:
          type: array
          items:
            $ref: '#/components/schemas/SimplePhenopacket'
          readOnly: true
        alternate_ids:
          type: array
          items:
            type: string
            maxLength: 200
          nullable: true
          description: A list of alternative identifiers for the individual.
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: A timestamp either exact or imprecise.
        age:
          type: object
          additionalProperties: {}
          nullable: true
          description: The age or age range of the individual.
        age_numeric:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The age of the individual as number.
        age_unit:
          type: string
          description: The unit for measuring age.
          maxLength: 50
        sex:
          nullable: true
          description: Observed apparent sex of the individual.
          oneOf:
          - $ref: '#/components/schemas/SexEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        karyotypic_sex:
          allOf:
          - $ref: '#/components/schemas/KaryotypicSexEnum'
          description: The karyotypic sex of the individual.
        taxonomy:
          type: object
          additionalProperties: {}
          nullable: true
          description: Ontology resource representing the species (e.g., NCBITaxon:9615).
        active:
          type: boolean
          description: Whether this patient's record is in active use.
        deceased:
          type: boolean
          description: Indicates if the individual is deceased or not.
        comorbid_condition:
          type: object
          additionalProperties: {}
          nullable: true
          description: One or more conditions that occur with primary condition.
        ecog_performance_status:
          type: object
          additionalProperties: {}
          nullable: true
          description: Value representing the Eastern Cooperative Oncology Group performance
            status.
        karnofsky:
          type: object
          additionalProperties: {}
          nullable: true
          description: Value representing the Karnofsky Performance status.
        race:
          type: string
          description: A code for the person's race.
          maxLength: 200
        ethnicity:
          type: string
          description: A code for the person's ethnicity.
          maxLength: 200
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - id
    IndividualRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: string
          minLength: 1
          description: An arbitrary identifier for the individual.
          maxLength: 200
        alternate_ids:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 200
          nullable: true
          description: A list of alternative identifiers for the individual.
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: A timestamp either exact or imprecise.
        age:
          type: object
          additionalProperties: {}
          nullable: true
          description: The age or age range of the individual.
        age_numeric:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The age of the individual as number.
        age_unit:
          type: string
          description: The unit for measuring age.
          maxLength: 50
        sex:
          nullable: true
          description: Observed apparent sex of the individual.
          oneOf:
          - $ref: '#/components/schemas/SexEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        karyotypic_sex:
          allOf:
          - $ref: '#/components/schemas/KaryotypicSexEnum'
          description: The karyotypic sex of the individual.
        taxonomy:
          type: object
          additionalProperties: {}
          nullable: true
          description: Ontology resource representing the species (e.g., NCBITaxon:9615).
        active:
          type: boolean
          description: Whether this patient's record is in active use.
        deceased:
          type: boolean
          description: Indicates if the individual is deceased or not.
        comorbid_condition:
          type: object
          additionalProperties: {}
          nullable: true
          description: One or more conditions that occur with primary condition.
        ecog_performance_status:
          type: object
          additionalProperties: {}
          nullable: true
          description: Value representing the Eastern Cooperative Oncology Group performance
            status.
        karnofsky:
          type: object
          additionalProperties: {}
          nullable: true
          description: Value representing the Karnofsky Performance status.
        race:
          type: string
          description: A code for the person's race.
          maxLength: 200
        ethnicity:
          type: string
          description: A code for the person's ethnicity.
          maxLength: 200
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema
      required:
      - id
    IngestRequestRequest:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            additionalProperties: {}
      required:
      - data
    Instrument:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: integer
          readOnly: true
        identifier:
          type: string
          nullable: true
          description: An arbitrary identifier for an experiment result.
          maxLength: 200
        platform:
          type: string
          nullable: true
          description: The instrument name. E.g. Illumina, Oxford Nanopore.
          maxLength: 200
        description:
          type: string
          nullable: true
          description: Description of the instrument.
          maxLength: 500
        model:
          type: string
          nullable: true
          description: The specific model of the instrument.
          maxLength: 500
        extra_properties:
          type: object
          additionalProperties: {}
          description: Extra properties that are not supported by current schema.
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
    InstrumentRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        identifier:
          type: string
          nullable: true
          description: An arbitrary identifier for an experiment result.
          maxLength: 200
        platform:
          type: string
          nullable: true
          description: The instrument name. E.g. Illumina, Oxford Nanopore.
          maxLength: 200
        description:
          type: string
          nullable: true
          description: Description of the instrument.
          maxLength: 500
        model:
          type: string
          nullable: true
          description: The specific model of the instrument.
          maxLength: 500
        extra_properties:
          type: object
          additionalProperties: {}
          description: Extra properties that are not supported by current schema.
    Interpretation:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: string
          description: An arbitrary identifier for the interpretation.
          maxLength: 200
        resolution_status:
          description: The current status of work on the case.
          oneOf:
          - $ref: '#/components/schemas/ResolutionStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        phenopacket:
          type: string
          description: The subject of this interpretation.
        meta_data:
          type: integer
          description: Metadata about this interpretation.
        diagnosis:
          type: array
          items:
            type: integer
          description: One or more diagnoses, if made.
      required:
      - diagnosis
      - id
      - meta_data
      - phenopacket
    InterpretationRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: string
          minLength: 1
          description: An arbitrary identifier for the interpretation.
          maxLength: 200
        resolution_status:
          description: The current status of work on the case.
          oneOf:
          - $ref: '#/components/schemas/ResolutionStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema
        phenopacket:
          type: string
          minLength: 1
          description: The subject of this interpretation.
        meta_data:
          type: integer
          description: Metadata about this interpretation.
        diagnosis:
          type: array
          items:
            type: integer
          description: One or more diagnoses, if made.
      required:
      - diagnosis
      - id
      - meta_data
      - phenopacket
    KaryotypicSexEnum:
      enum:
      - UNKNOWN_KARYOTYPE
      - XX
      - XY
      - XO
      - XXY
      - XXX
      - XXYY
      - XXXY
      - XXXX
      - XYY
      - OTHER_KARYOTYPE
      type: string
    LateralityOfPriorMalignancyEnum:
      enum:
      - Bilateral
      - Left
      - Midline
      - Not applicable
      - Right
      - Unilateral, Side not specified
      - Unknown
      type: string
    LostToFollowupReasonEnum:
      enum:
      - Completed study
      - Discharged to palliative care
      - Lost contact
      - Not applicable
      - Unknown
      - Withdrew from study
      type: string
    LymphNodesExaminedMethodEnum:
      enum:
      - Imaging
      - Lymph node dissection/pathological exam
      - Physical palpation of patient
      type: string
    LymphNodesExaminedStatusEnum:
      enum:
      - Cannot be determined
      - 'No'
      - No lymph nodes found in resected specimen
      - Not applicable
      - 'Yes'
      type: string
    LymphovascularInvasionEnum:
      enum:
      - Absent
      - Both lymphatic and small vessel and venous (large vessel) invasion
      - Lymphatic and small vessel invasion only
      - Not applicable
      - Present
      - Venous (large vessel) invasion only
      - Unknown
      type: string
    MCategoryEnum:
      enum:
      - M0
      - M0(i+)
      - M1
      - M1a
      - M1a(0)
      - M1a(1)
      - M1b
      - M1b(0)
      - M1b(1)
      - M1c
      - M1c(0)
      - M1c(1)
      - M1d
      - M1d(0)
      - M1d(1)
      - M1e
      - MX
      type: string
    MarginTypesEnum:
      enum:
      - Circumferential resection margin
      - Common bile duct margin
      - Distal margin
      - Not applicable
      - Proximal margin
      - Unknown
      type: string
    MetaData:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: integer
          readOnly: true
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
          readOnly: true
        created:
          type: string
          format: date-time
          description: Timestamp specifying when when this object was created.
        created_by:
          type: string
          description: Name of the person who created the phenopacket.
          maxLength: 200
        submitted_by:
          type: string
          description: Name of the person who submitted the phenopacket.
          maxLength: 200
        updates:
          type: object
          additionalProperties: {}
          nullable: true
          description: A list of updates to the phenopacket.
        phenopacket_schema_version:
          type: string
          description: Schema version of the current phenopacket.
          maxLength: 200
        external_references:
          type: object
          additionalProperties: {}
          nullable: true
          description: A list of external (non-resource) references.
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_by
    MetaDataRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        created:
          type: string
          format: date-time
          description: Timestamp specifying when when this object was created.
        created_by:
          type: string
          minLength: 1
          description: Name of the person who created the phenopacket.
          maxLength: 200
        submitted_by:
          type: string
          description: Name of the person who submitted the phenopacket.
          maxLength: 200
        updates:
          type: object
          additionalProperties: {}
          nullable: true
          description: A list of updates to the phenopacket.
        phenopacket_schema_version:
          type: string
          description: Schema version of the current phenopacket.
          maxLength: 200
        external_references:
          type: object
          additionalProperties: {}
          nullable: true
          description: A list of external (non-resource) references.
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
      required:
      - created_by
    MethodOfProgressionStatusEnum:
      enum:
      - Imaging (procedure)Histopathology test (procedure)Assessment of symptom control
        (procedure)Physical examination procedure (procedure)Tumor marker measurement
        (procedure)Laboratory data interpretation (procedure)
      type: string
    NCategoryEnum:
      enum:
      - N0
      - N0a
      - N0a (biopsy)
      - N0b
      - N0b (no biopsy)
      - N0(i+)
      - N0(i-)
      - N0(mol+)
      - N0(mol-)
      - N1
      - N1a
      - N1a(sn)
      - N1b
      - N1c
      - N1mi
      - N2
      - N2a
      - N2b
      - N2c
      - N2mi
      - N3
      - N3a
      - N3b
      - N3c
      - N4
      - NX
      type: string
    NullEnum:
      enum:
      - null
    PaginatedBiomarkerList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Biomarker'
    PaginatedBiosampleList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Biosample'
    PaginatedChemotherapyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Chemotherapy'
    PaginatedComorbidityList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Comorbidity'
    PaginatedDatasetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Dataset'
    PaginatedDiagnosisList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Diagnosis'
    PaginatedDiseaseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Disease'
    PaginatedDonorList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Donor'
    PaginatedExperimentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Experiment'
    PaginatedExperimentResultList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExperimentResult'
    PaginatedFollowUpList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/FollowUp'
    PaginatedGeneList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Gene'
    PaginatedGenomicInterpretationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GenomicInterpretation'
    PaginatedHormoneTherapyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/HormoneTherapy'
    PaginatedHtsFileList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/HtsFile'
    PaginatedImmunotherapyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Immunotherapy'
    PaginatedIndividualList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Individual'
    PaginatedInterpretationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Interpretation'
    PaginatedMetaDataList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MetaData'
    PaginatedPhenopacketList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Phenopacket'
    PaginatedPhenotypicFeatureList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PhenotypicFeature'
    PaginatedPrimaryDiagnosisList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PrimaryDiagnosis'
    PaginatedProcedureList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Procedure'
    PaginatedProgramList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Program'
    PaginatedProjectList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Project'
    PaginatedRadiationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Radiation'
    PaginatedResourceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
    PaginatedSampleRegistrationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SampleRegistration'
    PaginatedSpecimenList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Specimen'
    PaginatedSurgeryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Surgery'
    PaginatedTableList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Table'
    PaginatedTableOwnershipList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TableOwnership'
    PaginatedTreatmentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Treatment'
    PaginatedVariantList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Variant'
    PatchedBiomarkerRequest:
      type: object
      properties:
        test_interval:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        psa_level:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        ca125:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        cea:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        program_id:
          type: string
          minLength: 1
        submitter_donor_id:
          type: string
          minLength: 1
        submitter_specimen_id:
          type: string
          minLength: 1
          nullable: true
        submitter_primary_diagnosis_id:
          type: string
          minLength: 1
          nullable: true
        submitter_treatment_id:
          type: string
          minLength: 1
          nullable: true
        submitter_follow_up_id:
          type: string
          minLength: 1
          nullable: true
    PatchedBiosampleRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: string
          minLength: 1
          description: Unique arbitrary, researcher-specified identifier for the biosample.
          maxLength: 200
        procedure:
          $ref: '#/components/schemas/ProcedureRequest'
        description:
          type: string
          description: Human-readable, unstructured text describing the biosample
            or providing additional information.
          maxLength: 200
        sampled_tissue:
          type: object
          additionalProperties: {}
          description: An ontology term describing the tissue from which the specimen
            was collected. The use of UBERON is recommended.
        taxonomy:
          type: object
          additionalProperties: {}
          nullable: true
          description: An ontology term specified when more than one organism may
            be studied. It is advised that codesfrom the NCBI Taxonomy resource are
            used, e.g. NCBITaxon:9606 for humans.
        individual_age_at_collection:
          type: object
          additionalProperties: {}
          nullable: true
          description: individual_age_at_collection
        histological_diagnosis:
          type: object
          additionalProperties: {}
          nullable: true
          description: An ontology term representing a refinement of the clinical
            diagnosis. Normal samples could be tagged with NCIT:C38757, representing
            a negative finding.
        tumor_progression:
          type: object
          additionalProperties: {}
          nullable: true
          description: An ontology term representing if the specimen is from a primary
            tumour, a metastasis, or a recurrence. There are multiple ways of representing
            this using ontology terms, and the terms chosen will have a specific meaning
            that is application specific.
        tumor_grade:
          type: object
          additionalProperties: {}
          nullable: true
          description: An ontology term representing the tumour grade. This should
            be a child term of NCIT:C28076 (Disease Grade Qualifier) or equivalent.
        diagnostic_markers:
          type: object
          additionalProperties: {}
          nullable: true
          description: A list of ontology terms representing clinically-relevant bio-markers.
        is_control_sample:
          type: boolean
          description: Whether the sample is being used as a normal control.
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
        individual:
          type: string
          minLength: 1
          description: Identifier for the individual this biosample was sampled from.
          nullable: true
        hts_files:
          type: array
          items:
            type: string
            format: uri
            minLength: 1
          description: A list of HTS files derived from the biosample.
    PatchedChemotherapyRequest:
      type: object
      properties:
        chemotherapy_dosage_units:
          $ref: '#/components/schemas/ChemotherapyDosageUnitsEnum'
        drug_name:
          type: string
          minLength: 1
          maxLength: 255
        drug_rxnormcui:
          type: string
          minLength: 1
          maxLength: 64
        cumulative_drug_dosage_prescribed:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        cumulative_drug_dosage_actual:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        program_id:
          type: string
          minLength: 1
        submitter_donor_id:
          type: string
          minLength: 1
        submitter_treatment_id:
          type: string
          minLength: 1
    PatchedComorbidityRequest:
      type: object
      properties:
        prior_malignancy:
          $ref: '#/components/schemas/BooleanEnum'
        laterality_of_prior_malignancy:
          oneOf:
          - $ref: '#/components/schemas/LateralityOfPriorMalignancyEnum'
          - $ref: '#/components/schemas/BlankEnum'
        comorbidity_type_code:
          type: string
          maxLength: 64
          pattern: ^[A-Z][0-9]{2}(.[0-9]{1,3}[A-Z]{0,1})?$
        comorbidity_treatment_status:
          oneOf:
          - $ref: '#/components/schemas/BooleanEnum'
          - $ref: '#/components/schemas/BlankEnum'
        comorbidity_treatment:
          type: string
          maxLength: 255
        age_at_comorbidity_diagnosis:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        program_id:
          type: string
          minLength: 1
        submitter_donor_id:
          type: string
          minLength: 1
    PatchedDatasetRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
        contact_info:
          type: string
        data_use:
          type: object
          additionalProperties: {}
        linked_field_sets:
          type: object
          additionalProperties: {}
          description: Data type fields which are linked together.
        alternate_identifiers:
          type: object
          additionalProperties: {}
          description: Alternate identifiers for the dataset.
        related_identifiers:
          type: object
          additionalProperties: {}
          description: Related identifiers for the dataset.
        dates:
          type: object
          additionalProperties: {}
          description: Relevant dates for the datasets, a date must be added, e.g.
            creation date or last modification date should be added.
        stored_in:
          type: object
          additionalProperties: {}
          nullable: true
          description: The data repository hosting the dataset.
        spatial_coverage:
          type: object
          additionalProperties: {}
          description: The geographical extension and span covered by the dataset
            and its measured dimensions/variables.
        types:
          type: object
          additionalProperties: {}
          description: A term, ideally from a controlled terminology, identifying
            the dataset type or nature of the data, placing it in a typology.
        availability:
          type: string
          description: A qualifier indicating the different types of availability
            for a dataset (available, unavailable, embargoed, available with restriction,
            information not available).
          maxLength: 200
        refinement:
          type: string
          description: A qualifier to describe the level of data processing of the
            dataset and its distributions.
          maxLength: 200
        aggregation:
          type: string
          description: A qualifier indicating if the entity represents an 'instance
            of dataset' or a 'collection of datasets'.
          maxLength: 200
        privacy:
          type: string
          description: A qualifier to describe the data protection applied to the
            dataset. This is relevant for clinical data.
          maxLength: 200
        distributions:
          type: object
          additionalProperties: {}
          description: 'The distribution(s) by which datasets are made available (for
            example: mySQL dump).'
        dimensions:
          type: object
          additionalProperties: {}
          description: The different dimensions (granular components) making up a
            dataset.
        primary_publications:
          type: object
          additionalProperties: {}
          description: The primary publication(s) associated with the dataset, usually
            describing how the dataset was produced.
        citations:
          type: object
          additionalProperties: {}
          description: The publication(s) that cite this dataset.
        citation_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The number of publications that cite this dataset (enumerated
            in the citations property).
        produced_by:
          type: object
          additionalProperties: {}
          nullable: true
          description: A study process which generated a given dataset, if any.
        creators:
          type: object
          additionalProperties: {}
          description: The person(s) or organization(s) which contributed to the creation
            of the dataset.
        licenses:
          type: object
          additionalProperties: {}
          description: The terms of use of the dataset.
        acknowledges:
          type: object
          additionalProperties: {}
          description: The grant(s) which funded the work reported by the dataset.
        keywords:
          type: object
          additionalProperties: {}
          description: Tags associated with the dataset, which will help in its discovery.
        version:
          type: string
          description: A release point for the dataset when applicable.
          maxLength: 200
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that do not fit in the previous specified
            attributes.
        project:
          type: string
          format: uuid
        additional_resources:
          type: array
          items:
            type: string
            minLength: 1
          description: Any resource objects linked to this dataset that aren't specified
            by a phenopacket in the dataset.
        has_part:
          type: array
          items:
            type: string
            format: uuid
          description: A Dataset that is a subset of this Dataset; Datasets declaring
            the 'hasPart' relationship are considered a collection of Datasets, the
            aggregation criteria could be included in the 'description' field.
    PatchedDiagnosisRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema
        disease:
          type: integer
          description: The diagnosed condition.
        genomic_interpretations:
          type: array
          items:
            type: integer
          description: The genomic elements assessed as being responsible for the
            disease.
    PatchedDiseaseRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        term:
          type: object
          additionalProperties: {}
          description: An ontology term that represents the disease. It's recommended
            that one of the OMIM, Orphanet, or MONDO ontologies is used for rare human
            diseases.
        onset:
          type: object
          additionalProperties: {}
          nullable: true
          description: A representation of the age of onset of the disease
        disease_stage:
          type: object
          additionalProperties: {}
          nullable: true
          description: A list of terms representing the disease stage. Elements should
            be derived from child terms of NCIT:C28108 (Disease Stage Qualifier) or
            equivalent hierarchy from another ontology.
        tnm_finding:
          type: object
          additionalProperties: {}
          nullable: true
          description: A list of terms representing the tumour TNM score. Elements
            should be derived from child terms of NCIT:C48232 (Cancer TNM Finding)
            or equivalent hierarchy from another ontology.
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
    PatchedDonorRequest:
      type: object
      properties:
        submitter_donor_id:
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[A-Za-z0-9\-\._]{1,64}
        cause_of_death:
          oneOf:
          - $ref: '#/components/schemas/CauseOfDeathEnum'
          - $ref: '#/components/schemas/BlankEnum'
        date_of_birth:
          type: string
          minLength: 1
          maxLength: 32
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
        date_of_death:
          type: string
          maxLength: 32
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
        primary_site:
          $ref: '#/components/schemas/PrimarySiteEnum'
        is_deceased:
          type: boolean
        program_id:
          type: string
          minLength: 1
    PatchedExperimentRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: string
          minLength: 1
          description: An arbitrary identifier for the experiment.
          maxLength: 200
        instrument:
          $ref: '#/components/schemas/InstrumentRequest'
        study_type:
          type: string
          nullable: true
          description: Which study type the experiment belongs to.E.g. Epigenomics,
            Proteomics, Metagenomics, Transcriptomics, Metabolomics.
          maxLength: 200
        experiment_type:
          type: string
          minLength: 1
          description: (Controlled Vocabulary) The assay target (e.g. DNA Methylation,
            mRNA-Seq, smRNA-Seq, Histone H3K4me1, etc.).
          maxLength: 200
        experiment_ontology:
          type: object
          additionalProperties: {}
          description: Links to experiment ontology information (e.g. via the OBI
            ontology.).
        molecule:
          type: string
          nullable: true
          description: '(Controlled Vocabulary) The type of molecule that was extracted
            from the biological material.Include one of the following: total RNA,
            polyA RNA, cytoplasmic RNA, nuclear RNA, small RNA, genomic DNA, protein,
            or other.'
          maxLength: 200
        molecule_ontology:
          type: object
          additionalProperties: {}
          description: Links to molecule ontology information (e.g. via the SO ontology.).
        library_strategy:
          type: string
          nullable: true
          description: (Controlled Vocabulary) The assay used. These are defined within
            the SRA metadata specifications with a controlled vocabulary (e.g. Bisulfite-Seq,
            RNA-Seq, ChIP-Seq). For a complete list, see https://www.ebi.ac.uk/ena/submit/reads-library-strategy.
          maxLength: 200
        library_source:
          type: string
          nullable: true
          description: The type of source material that is being sequenced. E.g. Genomic,
            Genomic Single Cell,Transcriptomic, Transcriptomic Single Cell, Metagenomic,
            Metatranscriptomic, Synthetic,Viral RNA, Other.
          maxLength: 200
        library_selection:
          type: string
          nullable: true
          description: Method used to enrich the target in the sequence library preparation.
            E.g. Random, PCR, Random PCR, RT-PCR, MF and other.
          maxLength: 200
        library_layout:
          type: string
          nullable: true
          description: The library layout. E.g. Single, Paired.
          maxLength: 200
        extraction_protocol:
          type: string
          nullable: true
          description: The protocol used to isolate the extract material.
          maxLength: 200
        reference_registry_id:
          type: string
          nullable: true
          description: The IHEC EpiRR ID for this dataset, only for IHEC Reference
            Epigenome datasets. Otherwise leave empty.
          maxLength: 200
        qc_flags:
          type: array
          items:
            type: string
            minLength: 1
            description: Any quality control observations can be noted here. This
              field can be omitted if empty.
            maxLength: 200
        extra_properties:
          type: object
          additionalProperties: {}
          description: Extra properties that are not supported by current schema.
        biosample:
          type: string
          minLength: 1
          description: Biosample on which this experiment was done.
        table:
          type: string
          minLength: 1
          nullable: true
    PatchedExperimentResultRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        identifier:
          type: string
          nullable: true
          description: An arbitrary identifier for an experiment result.
          maxLength: 200
        description:
          type: string
          nullable: true
          description: Description of an experiment result.
          maxLength: 500
        filename:
          type: string
          nullable: true
          description: The name of the file containing the result.
          maxLength: 500
        genome_assembly_id:
          type: string
          nullable: true
          description: Reference genome assembly ID.
          maxLength: 50
        file_format:
          type: string
          nullable: true
          description: (Controlled Vocabulary) File format.
          maxLength: 50
        data_output_type:
          type: string
          nullable: true
          description: 'The type of data output: Raw or Derived data.Raw data - the
            data output type that can be converted back to the original result set.
            Derived data - the data output type that cannot be converted back to the
            original result set.'
          maxLength: 200
        usage:
          type: string
          nullable: true
          description: 'Internal to the Bento: describe how data is used within Bento
            (visualized or can be downloaded).'
          maxLength: 200
        creation_date:
          type: string
          nullable: true
          description: The date when the experiment result file was created.
          maxLength: 500
        created_by:
          type: string
          nullable: true
          description: Name/Username/Code of the person who prepared the sequencing
            data.
          maxLength: 200
        extra_properties:
          type: object
          additionalProperties: {}
          description: Extra properties that are not supported by current schema.
    PatchedFollowUpRequest:
      type: object
      properties:
        submitter_follow_up_id:
          type: string
          minLength: 1
          maxLength: 64
        date_of_followup:
          type: string
          minLength: 1
          maxLength: 32
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
        lost_to_followup_reason:
          oneOf:
          - $ref: '#/components/schemas/LostToFollowupReasonEnum'
          - $ref: '#/components/schemas/BlankEnum'
        disease_status_at_followup:
          $ref: '#/components/schemas/DiseaseStatusAtFollowupEnum'
        relapse_type:
          oneOf:
          - $ref: '#/components/schemas/RelapseTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        date_of_relapse:
          type: string
          maxLength: 32
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
        method_of_progression_status:
          oneOf:
          - $ref: '#/components/schemas/MethodOfProgressionStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
        anatomic_site_progression_or_recurrence:
          type: string
          maxLength: 32
          pattern: ^[C][0-9]{2}(.[0-9]{1})?$
        recurrence_tumour_staging_system:
          oneOf:
          - $ref: '#/components/schemas/StagingSystemEnum'
          - $ref: '#/components/schemas/BlankEnum'
        recurrence_t_category:
          oneOf:
          - $ref: '#/components/schemas/TCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        recurrence_n_category:
          oneOf:
          - $ref: '#/components/schemas/NCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        recurrence_m_category:
          oneOf:
          - $ref: '#/components/schemas/MCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        recurrence_stage_group:
          oneOf:
          - $ref: '#/components/schemas/StageGroupEnum'
          - $ref: '#/components/schemas/BlankEnum'
        lost_to_followup:
          type: boolean
        program_id:
          type: string
          minLength: 1
        submitter_donor_id:
          type: string
          minLength: 1
        submitter_primary_diagnosis_id:
          type: string
          minLength: 1
          nullable: true
        submitter_treatment_id:
          type: string
          minLength: 1
          nullable: true
    PatchedGeneRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: string
          minLength: 1
          description: Official identifier of the gene. It SHOULD be a CURIE identifier
            with a prefix used by the official organism gene nomenclature committee,
            e.g. HGNC:347 for humans.
          maxLength: 200
        alternate_ids:
          type: array
          items:
            type: string
        symbol:
          type: string
          minLength: 1
          description: A gene's official gene symbol as designated by the organism's
            gene nomenclature committee, e.g. ETF1 from the HUGO Gene Nomenclature
            committee.
          maxLength: 200
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
    PatchedGenomicInterpretationRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: How the call of this GenomicInterpretation was interpreted.
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema
        gene:
          type: string
          minLength: 1
          description: The gene contributing to the diagnosis.
          nullable: true
        variant:
          type: integer
          nullable: true
          description: The variant contributing to the diagnosis.
    PatchedHormoneTherapyRequest:
      type: object
      properties:
        chemotherapy_dosage_units:
          $ref: '#/components/schemas/ChemotherapyDosageUnitsEnum'
        drug_name:
          type: string
          minLength: 1
          maxLength: 255
        drug_rxnormcui:
          type: string
          minLength: 1
          maxLength: 64
        hormone_drug_dosage_units:
          type: string
          minLength: 1
          maxLength: 64
        cumulative_drug_dosage_prescribed:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        cumulative_drug_dosage_actual:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        program_id:
          type: string
          minLength: 1
        submitter_donor_id:
          type: string
          minLength: 1
        submitter_treatment_id:
          type: string
          minLength: 1
    PatchedHtsFileRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        uri:
          type: string
          format: uri
          minLength: 1
          description: A valid URI to the file
          maxLength: 200
        description:
          type: string
          description: Human-readable text describing the file.
          maxLength: 200
        hts_format:
          allOf:
          - $ref: '#/components/schemas/HtsFormatEnum'
          description: The file's format; one of SAM, BAM, CRAM, VCF, BCF, GVCF, FASTQ,
            or UNKNOWN.
        genome_assembly:
          type: string
          minLength: 1
          description: Genome assembly ID for the file, e.g. GRCh38.
          maxLength: 200
        individual_to_sample_identifiers:
          type: object
          additionalProperties: {}
          nullable: true
          description: Mapping between individual or biosample IDs and the sample
            identifier in the HTS file.
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
    PatchedImmunotherapyRequest:
      type: object
      properties:
        immunotherapy_type:
          $ref: '#/components/schemas/ImmunotherapyTypeEnum'
        drug_name:
          type: string
          minLength: 1
          maxLength: 255
        drug_rxnormcui:
          type: string
          minLength: 1
          maxLength: 64
        program_id:
          type: string
          minLength: 1
        submitter_donor_id:
          type: string
          minLength: 1
        submitter_treatment_id:
          type: string
          minLength: 1
    PatchedIndividualRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: string
          minLength: 1
          description: An arbitrary identifier for the individual.
          maxLength: 200
        alternate_ids:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 200
          nullable: true
          description: A list of alternative identifiers for the individual.
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: A timestamp either exact or imprecise.
        age:
          type: object
          additionalProperties: {}
          nullable: true
          description: The age or age range of the individual.
        age_numeric:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The age of the individual as number.
        age_unit:
          type: string
          description: The unit for measuring age.
          maxLength: 50
        sex:
          nullable: true
          description: Observed apparent sex of the individual.
          oneOf:
          - $ref: '#/components/schemas/SexEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        karyotypic_sex:
          allOf:
          - $ref: '#/components/schemas/KaryotypicSexEnum'
          description: The karyotypic sex of the individual.
        taxonomy:
          type: object
          additionalProperties: {}
          nullable: true
          description: Ontology resource representing the species (e.g., NCBITaxon:9615).
        active:
          type: boolean
          description: Whether this patient's record is in active use.
        deceased:
          type: boolean
          description: Indicates if the individual is deceased or not.
        comorbid_condition:
          type: object
          additionalProperties: {}
          nullable: true
          description: One or more conditions that occur with primary condition.
        ecog_performance_status:
          type: object
          additionalProperties: {}
          nullable: true
          description: Value representing the Eastern Cooperative Oncology Group performance
            status.
        karnofsky:
          type: object
          additionalProperties: {}
          nullable: true
          description: Value representing the Karnofsky Performance status.
        race:
          type: string
          description: A code for the person's race.
          maxLength: 200
        ethnicity:
          type: string
          description: A code for the person's ethnicity.
          maxLength: 200
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema
    PatchedInterpretationRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: string
          minLength: 1
          description: An arbitrary identifier for the interpretation.
          maxLength: 200
        resolution_status:
          description: The current status of work on the case.
          oneOf:
          - $ref: '#/components/schemas/ResolutionStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema
        phenopacket:
          type: string
          minLength: 1
          description: The subject of this interpretation.
        meta_data:
          type: integer
          description: Metadata about this interpretation.
        diagnosis:
          type: array
          items:
            type: integer
          description: One or more diagnoses, if made.
    PatchedMetaDataRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        created:
          type: string
          format: date-time
          description: Timestamp specifying when when this object was created.
        created_by:
          type: string
          minLength: 1
          description: Name of the person who created the phenopacket.
          maxLength: 200
        submitted_by:
          type: string
          description: Name of the person who submitted the phenopacket.
          maxLength: 200
        updates:
          type: object
          additionalProperties: {}
          nullable: true
          description: A list of updates to the phenopacket.
        phenopacket_schema_version:
          type: string
          description: Schema version of the current phenopacket.
          maxLength: 200
        external_references:
          type: object
          additionalProperties: {}
          nullable: true
          description: A list of external (non-resource) references.
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
    PatchedPhenopacketRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: string
          minLength: 1
          description: Unique, arbitrary, researcher-specified identifier for the
            phenopacket.
          maxLength: 200
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
        subject:
          type: string
          minLength: 1
          description: A subject of a phenopacket, representing either a human (typically)
            or another organism.
        meta_data:
          type: integer
          description: A structured definition of the resources and ontologies used
            within a phenopacket.
        table:
          type: string
          minLength: 1
          nullable: true
        biosamples:
          type: array
          items:
            type: string
            minLength: 1
          description: Samples (e.g. biopsies) taken from the individual, if any.
        genes:
          type: array
          items:
            type: string
            minLength: 1
          description: Genes deemed to be relevant to the case; application-specific.
        variants:
          type: array
          items:
            type: integer
          description: A list of variants identified in the proband.
        diseases:
          type: array
          items:
            type: integer
          description: A list of diseases diagnosed in the proband.
        hts_files:
          type: array
          items:
            type: string
            format: uri
            minLength: 1
          description: A list of HTS files derived from the individual.
    PatchedPhenotypicFeatureRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        type:
          type: object
          additionalProperties: {}
        description:
          type: string
          description: Human-readable text describing the phenotypic feature; NOT
            for structured text.
          maxLength: 200
        negated:
          type: boolean
          description: Whether the feature is present (false) or absent (true, feature
            is negated); default is false.
        severity:
          type: object
          additionalProperties: {}
          nullable: true
          description: An ontology term that describes the severity of the condition.
        modifier:
          type: object
          additionalProperties: {}
          nullable: true
          description: A list of ontology terms that provide more expressive / precise
            descriptions of a phenotypic feature, including e.g. positionality or
            external factors.
        onset:
          type: object
          additionalProperties: {}
          nullable: true
          description: An ontology term that describes the age at which the phenotypic
            feature was first noticed or diagnosed, e.g. HP:0003674.
        evidence:
          type: object
          additionalProperties: {}
          nullable: true
          description: One or more pieces of evidence that specify how the phenotype
            was determined.
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
        biosample:
          type: string
          minLength: 1
          description: Unique arbitrary, researcher-specified identifier for the biosample.
          nullable: true
        phenopacket:
          type: string
          minLength: 1
          description: Unique, arbitrary, researcher-specified identifier for the
            phenopacket.
          nullable: true
    PatchedPrimaryDiagnosisRequest:
      type: object
      properties:
        submitter_primary_diagnosis_id:
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[A-Za-z0-9\-\._]{1,64}
        date_of_diagnosis:
          type: string
          minLength: 1
          maxLength: 32
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
        basis_of_diagnosis:
          $ref: '#/components/schemas/BasisOfDiagnosisEnum'
        lymph_nodes_examined_status:
          $ref: '#/components/schemas/LymphNodesExaminedStatusEnum'
        lymph_nodes_examined_method:
          $ref: '#/components/schemas/LymphNodesExaminedMethodEnum'
        clinical_tumour_staging_system:
          oneOf:
          - $ref: '#/components/schemas/StagingSystemEnum'
          - $ref: '#/components/schemas/BlankEnum'
        clinical_t_category:
          oneOf:
          - $ref: '#/components/schemas/TCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        clinical_n_category:
          oneOf:
          - $ref: '#/components/schemas/NCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        clinical_m_category:
          oneOf:
          - $ref: '#/components/schemas/MCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        clinical_stage_group:
          oneOf:
          - $ref: '#/components/schemas/StageGroupEnum'
          - $ref: '#/components/schemas/BlankEnum'
        cancer_type_code:
          type: string
          minLength: 1
          maxLength: 64
        number_lymph_nodes_positive:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        program_id:
          type: string
          minLength: 1
        submitter_donor_id:
          type: string
          minLength: 1
    PatchedProcedureRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        code:
          type: object
          additionalProperties: {}
          description: An ontology term that represents a clinical procedure performed
            on a subject.
        body_site:
          type: object
          additionalProperties: {}
          nullable: true
          description: An ontology term that is specified when it is not possible
            to represent the procedure with a single ontology class.
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
    PatchedProgramRequest:
      type: object
      properties:
        program_id:
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[A-Za-z0-9\-\._]{1,64}
        name:
          type: string
          minLength: 1
          maxLength: 255
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
    PatchedProjectRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
    PatchedRadiationRequest:
      type: object
      properties:
        radiation_therapy_modality:
          $ref: '#/components/schemas/RadiationTherapyModalityEnum'
        radiation_therapy_type:
          $ref: '#/components/schemas/RadiationTherapyTypeEnum'
        anatomical_site_irradiated:
          $ref: '#/components/schemas/AnatomicalSiteIrradiatedEnum'
        radiation_therapy_fractions:
          type: integer
          maximum: 32767
          minimum: 0
        radiation_therapy_dosage:
          type: integer
          maximum: 32767
          minimum: 0
        radiation_boost:
          type: boolean
        reference_radiation_treatment_id:
          type: string
          maxLength: 64
        program_id:
          type: string
          minLength: 1
        submitter_donor_id:
          type: string
          minLength: 1
        submitter_treatment_id:
          type: string
          minLength: 1
    PatchedResourceRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: string
          minLength: 1
          description: For OBO ontologies, the value of this string MUST always be
            the official OBO ID, which is always equivalent to the ID prefix in lower
            case. For other resources use the prefix in identifiers.org.
          maxLength: 200
        name:
          type: string
          minLength: 1
          description: The full name of the resource or ontology referred to by the
            id element.
          maxLength: 200
        namespace_prefix:
          type: string
          minLength: 1
          description: Prefix for objects from this resource. In the case of ontology
            resources, this should be the CURIE prefix.
          maxLength: 200
        url:
          type: string
          format: uri
          minLength: 1
          description: Resource URL. In the case of ontologies, this should be an
            OBO or OWL file. Other resources should link to the official or top-level
            url.
          maxLength: 200
        version:
          type: string
          minLength: 1
          description: The version of the resource or ontology used to make the annotation.
          maxLength: 200
        iri_prefix:
          type: string
          format: uri
          minLength: 1
          description: The IRI prefix, when used with the namespace prefix and an
            object ID, should resolve the term or object from the resource in question.
          maxLength: 200
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
    PatchedSampleRegistrationRequest:
      type: object
      properties:
        submitter_sample_id:
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[A-Za-z0-9\-\._]{1,64}
        gender:
          $ref: '#/components/schemas/GenderEnum'
        sex_at_birth:
          $ref: '#/components/schemas/SexAtBirthEnum'
        specimen_tissue_source:
          $ref: '#/components/schemas/SpecimenTissueSourceEnum'
        tumour_normal_designation:
          $ref: '#/components/schemas/TumourNormalDesignationEnum'
        specimen_type:
          $ref: '#/components/schemas/SpecimenTypeEnum'
        sample_type:
          $ref: '#/components/schemas/SampleTypeEnum'
        program_id:
          type: string
          minLength: 1
        submitter_donor_id:
          type: string
          minLength: 1
        submitter_specimen_id:
          type: string
          minLength: 1
    PatchedSpecimenRequest:
      type: object
      properties:
        submitter_specimen_id:
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[A-Za-z0-9\-\._]{1,64}
        pathological_tumour_staging_system:
          oneOf:
          - $ref: '#/components/schemas/StagingSystemEnum'
          - $ref: '#/components/schemas/BlankEnum'
        pathological_t_category:
          oneOf:
          - $ref: '#/components/schemas/TCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        pathological_n_category:
          oneOf:
          - $ref: '#/components/schemas/NCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        pathological_m_category:
          oneOf:
          - $ref: '#/components/schemas/MCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        pathological_stage_group:
          oneOf:
          - $ref: '#/components/schemas/StageGroupEnum'
          - $ref: '#/components/schemas/BlankEnum'
        specimen_collection_date:
          type: string
          minLength: 1
          maxLength: 32
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
        specimen_storage:
          $ref: '#/components/schemas/SpecimenStorageEnum'
        tumour_histological_type:
          type: string
          maxLength: 128
          pattern: ^[8,9]{1}[0-9]{3}/[0,1,2,3,6,9]{1}[1-9]{0,1}$
        specimen_anatomic_location:
          type: string
          maxLength: 32
          pattern: ^[C][0-9]{2}(.[0-9]{1})?$
        reference_pathology_confirmed_diagnosis:
          oneOf:
          - $ref: '#/components/schemas/ReferencePathologyEnum'
          - $ref: '#/components/schemas/BlankEnum'
        reference_pathology_confirmed_tumour_presence:
          oneOf:
          - $ref: '#/components/schemas/ReferencePathologyEnum'
          - $ref: '#/components/schemas/BlankEnum'
        tumour_grading_system:
          oneOf:
          - $ref: '#/components/schemas/TumourGradingSystemEnum'
          - $ref: '#/components/schemas/BlankEnum'
        tumour_grade:
          oneOf:
          - $ref: '#/components/schemas/TumourGradeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        percent_tumour_cells_range:
          oneOf:
          - $ref: '#/components/schemas/PercentTumourCellsRangeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        percent_tumour_cells_measurement_method:
          oneOf:
          - $ref: '#/components/schemas/PercentTumourCellsMeasurementMethodEnum'
          - $ref: '#/components/schemas/BlankEnum'
        program_id:
          type: string
          minLength: 1
        submitter_donor_id:
          type: string
          minLength: 1
        submitter_primary_diagnosis_id:
          type: string
          minLength: 1
    PatchedSurgeryRequest:
      type: object
      properties:
        surgery_type:
          $ref: '#/components/schemas/SurgeryTypeEnum'
        surgery_site:
          type: string
          maxLength: 255
          pattern: ^[C][0-9]{2}(.[0-9]{1})?$
        surgery_location:
          oneOf:
          - $ref: '#/components/schemas/SurgeryLocationEnum'
          - $ref: '#/components/schemas/BlankEnum'
        tumour_focality:
          oneOf:
          - $ref: '#/components/schemas/TumourFocalityEnum'
          - $ref: '#/components/schemas/BlankEnum'
        residual_tumour_classification:
          oneOf:
          - $ref: '#/components/schemas/ResidualTumourClassificationEnum'
          - $ref: '#/components/schemas/BlankEnum'
        margin_types_involved:
          oneOf:
          - $ref: '#/components/schemas/MarginTypesEnum'
          - $ref: '#/components/schemas/BlankEnum'
        margin_types_not_involved:
          oneOf:
          - $ref: '#/components/schemas/MarginTypesEnum'
          - $ref: '#/components/schemas/BlankEnum'
        margin_types_not_assessed:
          oneOf:
          - $ref: '#/components/schemas/MarginTypesEnum'
          - $ref: '#/components/schemas/BlankEnum'
        lymphovascular_invasion:
          oneOf:
          - $ref: '#/components/schemas/LymphovascularInvasionEnum'
          - $ref: '#/components/schemas/BlankEnum'
        perineural_invasion:
          oneOf:
          - $ref: '#/components/schemas/PerineuralInvasionEnum'
          - $ref: '#/components/schemas/BlankEnum'
        tumour_length:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        tumour_width:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        greatest_dimension_tumour:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        program_id:
          type: string
          minLength: 1
        submitter_donor_id:
          type: string
          minLength: 1
        submitter_specimen_id:
          type: string
          minLength: 1
        submitter_treatment_id:
          type: string
          minLength: 1
    PatchedTableOwnershipRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        table_id:
          type: string
          minLength: 1
          maxLength: 200
        service_id:
          type: string
          minLength: 1
          maxLength: 200
        service_artifact:
          type: string
          minLength: 1
          maxLength: 200
        dataset:
          type: string
          format: uuid
    PatchedTableRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        ownership_record:
          type: string
          minLength: 1
        name:
          type: string
          minLength: 1
          maxLength: 200
        data_type:
          $ref: '#/components/schemas/DataTypeEnum'
    PatchedTreatmentRequest:
      type: object
      properties:
        submitter_treatment_id:
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[A-Za-z0-9\-\._]{1,64}
        treatment_type:
          $ref: '#/components/schemas/TreatmentTypeEnum'
        is_primary_treatment:
          $ref: '#/components/schemas/BooleanEnum'
        treatment_start_date:
          type: string
          minLength: 1
          maxLength: 32
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
        treatment_end_date:
          type: string
          minLength: 1
          maxLength: 32
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
        treatment_setting:
          $ref: '#/components/schemas/TreatmentSettingEnum'
        treatment_intent:
          $ref: '#/components/schemas/TreatmentIntentEnum'
        response_to_treatment_criteria_method:
          $ref: '#/components/schemas/ResponseToTreatmentCriteriaMethodEnum'
        response_to_treatment:
          $ref: '#/components/schemas/ResponseToTreatmentEnum'
        days_per_cycle:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        number_of_cycles:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        program_id:
          type: string
          minLength: 1
        submitter_donor_id:
          type: string
          minLength: 1
        submitter_primary_diagnosis_id:
          type: string
          minLength: 1
    PatchedVariantRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        allele_type:
          allOf:
          - $ref: '#/components/schemas/AlleleTypeEnum'
          description: One of four allele types.
        allele:
          type: object
          additionalProperties: {}
          description: The variant's corresponding allele
        zygosity:
          type: object
          additionalProperties: {}
          nullable: true
          description: An ontology term taken from the Genotype Ontology (GENO) representing
            the zygosity of the variant.
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
    PercentTumourCellsMeasurementMethodEnum:
      enum:
      - Genomics
      - Image analysis
      - Pathology estimate by percent nuclei
      - Unknown
      type: string
    PercentTumourCellsRangeEnum:
      enum:
      - 0-19%
      - 20-50%
      - 51-100%
      type: string
    PerineuralInvasionEnum:
      enum:
      - Absent
      - Cannot be assessed
      - Not applicable
      - Present
      - Unknown
      type: string
    Phenopacket:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: string
          description: Unique, arbitrary, researcher-specified identifier for the
            phenopacket.
          maxLength: 200
        phenotypic_features:
          type: array
          items:
            $ref: '#/components/schemas/PhenotypicFeature'
          readOnly: true
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        subject:
          type: string
          description: A subject of a phenopacket, representing either a human (typically)
            or another organism.
        meta_data:
          type: integer
          description: A structured definition of the resources and ontologies used
            within a phenopacket.
        table:
          type: string
          nullable: true
        biosamples:
          type: array
          items:
            type: string
          description: Samples (e.g. biopsies) taken from the individual, if any.
        genes:
          type: array
          items:
            type: string
          description: Genes deemed to be relevant to the case; application-specific.
        variants:
          type: array
          items:
            type: integer
          description: A list of variants identified in the proband.
        diseases:
          type: array
          items:
            type: integer
          description: A list of diseases diagnosed in the proband.
        hts_files:
          type: array
          items:
            type: string
            format: uri
          description: A list of HTS files derived from the individual.
      required:
      - id
      - meta_data
      - subject
    PhenopacketRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: string
          minLength: 1
          description: Unique, arbitrary, researcher-specified identifier for the
            phenopacket.
          maxLength: 200
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
        subject:
          type: string
          minLength: 1
          description: A subject of a phenopacket, representing either a human (typically)
            or another organism.
        meta_data:
          type: integer
          description: A structured definition of the resources and ontologies used
            within a phenopacket.
        table:
          type: string
          minLength: 1
          nullable: true
        biosamples:
          type: array
          items:
            type: string
            minLength: 1
          description: Samples (e.g. biopsies) taken from the individual, if any.
        genes:
          type: array
          items:
            type: string
            minLength: 1
          description: Genes deemed to be relevant to the case; application-specific.
        variants:
          type: array
          items:
            type: integer
          description: A list of variants identified in the proband.
        diseases:
          type: array
          items:
            type: integer
          description: A list of diseases diagnosed in the proband.
        hts_files:
          type: array
          items:
            type: string
            format: uri
            minLength: 1
          description: A list of HTS files derived from the individual.
      required:
      - id
      - meta_data
      - subject
    PhenotypicFeature:
      type: object
      description: Subclass of ModelSerializer
      properties:
        type:
          type: object
          additionalProperties: {}
        description:
          type: string
          description: Human-readable text describing the phenotypic feature; NOT
            for structured text.
          maxLength: 200
        negated:
          type: boolean
          description: Whether the feature is present (false) or absent (true, feature
            is negated); default is false.
        severity:
          type: object
          additionalProperties: {}
          nullable: true
          description: An ontology term that describes the severity of the condition.
        modifier:
          type: object
          additionalProperties: {}
          nullable: true
          description: A list of ontology terms that provide more expressive / precise
            descriptions of a phenotypic feature, including e.g. positionality or
            external factors.
        onset:
          type: object
          additionalProperties: {}
          nullable: true
          description: An ontology term that describes the age at which the phenotypic
            feature was first noticed or diagnosed, e.g. HP:0003674.
        evidence:
          type: object
          additionalProperties: {}
          nullable: true
          description: One or more pieces of evidence that specify how the phenotype
            was determined.
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        phenopacket:
          type: string
          description: Unique, arbitrary, researcher-specified identifier for the
            phenopacket.
          nullable: true
      required:
      - type
    PhenotypicFeatureRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        type:
          type: object
          additionalProperties: {}
        description:
          type: string
          description: Human-readable text describing the phenotypic feature; NOT
            for structured text.
          maxLength: 200
        negated:
          type: boolean
          description: Whether the feature is present (false) or absent (true, feature
            is negated); default is false.
        severity:
          type: object
          additionalProperties: {}
          nullable: true
          description: An ontology term that describes the severity of the condition.
        modifier:
          type: object
          additionalProperties: {}
          nullable: true
          description: A list of ontology terms that provide more expressive / precise
            descriptions of a phenotypic feature, including e.g. positionality or
            external factors.
        onset:
          type: object
          additionalProperties: {}
          nullable: true
          description: An ontology term that describes the age at which the phenotypic
            feature was first noticed or diagnosed, e.g. HP:0003674.
        evidence:
          type: object
          additionalProperties: {}
          nullable: true
          description: One or more pieces of evidence that specify how the phenotype
            was determined.
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
        phenopacket:
          type: string
          minLength: 1
          description: Unique, arbitrary, researcher-specified identifier for the
            phenopacket.
          nullable: true
      required:
      - type
    PrimaryDiagnosis:
      type: object
      properties:
        submitter_primary_diagnosis_id:
          type: string
          maxLength: 64
          pattern: ^[A-Za-z0-9\-\._]{1,64}
        date_of_diagnosis:
          type: string
          maxLength: 32
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
        basis_of_diagnosis:
          $ref: '#/components/schemas/BasisOfDiagnosisEnum'
        lymph_nodes_examined_status:
          $ref: '#/components/schemas/LymphNodesExaminedStatusEnum'
        lymph_nodes_examined_method:
          $ref: '#/components/schemas/LymphNodesExaminedMethodEnum'
        clinical_tumour_staging_system:
          oneOf:
          - $ref: '#/components/schemas/StagingSystemEnum'
          - $ref: '#/components/schemas/BlankEnum'
        clinical_t_category:
          oneOf:
          - $ref: '#/components/schemas/TCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        clinical_n_category:
          oneOf:
          - $ref: '#/components/schemas/NCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        clinical_m_category:
          oneOf:
          - $ref: '#/components/schemas/MCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        clinical_stage_group:
          oneOf:
          - $ref: '#/components/schemas/StageGroupEnum'
          - $ref: '#/components/schemas/BlankEnum'
        cancer_type_code:
          type: string
          maxLength: 64
        number_lymph_nodes_positive:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        program_id:
          type: string
        submitter_donor_id:
          type: string
      required:
      - basis_of_diagnosis
      - cancer_type_code
      - clinical_m_category
      - clinical_n_category
      - clinical_stage_group
      - clinical_t_category
      - clinical_tumour_staging_system
      - date_of_diagnosis
      - lymph_nodes_examined_method
      - lymph_nodes_examined_status
      - program_id
      - submitter_donor_id
      - submitter_primary_diagnosis_id
    PrimaryDiagnosisRequest:
      type: object
      properties:
        submitter_primary_diagnosis_id:
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[A-Za-z0-9\-\._]{1,64}
        date_of_diagnosis:
          type: string
          minLength: 1
          maxLength: 32
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
        basis_of_diagnosis:
          $ref: '#/components/schemas/BasisOfDiagnosisEnum'
        lymph_nodes_examined_status:
          $ref: '#/components/schemas/LymphNodesExaminedStatusEnum'
        lymph_nodes_examined_method:
          $ref: '#/components/schemas/LymphNodesExaminedMethodEnum'
        clinical_tumour_staging_system:
          oneOf:
          - $ref: '#/components/schemas/StagingSystemEnum'
          - $ref: '#/components/schemas/BlankEnum'
        clinical_t_category:
          oneOf:
          - $ref: '#/components/schemas/TCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        clinical_n_category:
          oneOf:
          - $ref: '#/components/schemas/NCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        clinical_m_category:
          oneOf:
          - $ref: '#/components/schemas/MCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        clinical_stage_group:
          oneOf:
          - $ref: '#/components/schemas/StageGroupEnum'
          - $ref: '#/components/schemas/BlankEnum'
        cancer_type_code:
          type: string
          minLength: 1
          maxLength: 64
        number_lymph_nodes_positive:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        program_id:
          type: string
          minLength: 1
        submitter_donor_id:
          type: string
          minLength: 1
      required:
      - basis_of_diagnosis
      - cancer_type_code
      - clinical_m_category
      - clinical_n_category
      - clinical_stage_group
      - clinical_t_category
      - clinical_tumour_staging_system
      - date_of_diagnosis
      - lymph_nodes_examined_method
      - lymph_nodes_examined_status
      - program_id
      - submitter_donor_id
      - submitter_primary_diagnosis_id
    PrimarySiteEnum:
      enum:
      - Accessory sinuses
      - Adrenal gland
      - Anus and anal canal
      - Base of tongue
      - Bladder
      - Bones, joints and articular cartilage of limbs
      - Bones, joints and articular cartilage of other and unspecified sites
      - Brain
      - Breast
      - Bronchus and lung
      - Cervix uteri
      - Colon
      - Connective, subcutaneous and other soft tissues
      - Corpus uteri
      - Esophagus
      - Eye and adnexa
      - Floor of mouth
      - Gallbladder
      - Gum
      - Heart, mediastinum, and pleura
      - Hematopoietic and reticuloendothelial systems
      - Hypopharynx
      - Kidney
      - Larynx
      - Lip
      - Liver and intrahepatic bile ducts
      - Lymph nodes
      - Meninges
      - Nasal cavity and middle ear
      - Nasopharynx
      - Oropharynx
      - Other and ill-defined digestive organs
      - Other and ill-defined sites
      - Other and ill-defined sites in lip, oral cavity and pharynx
      - Other and ill-defined sites within respiratory system and intrathoracic organs
      - Other and unspecified female genital organs
      - Other and unspecified major salivary glands
      - Other and unspecified male genital organs
      - Other and unspecified parts of biliary tract
      - Other and unspecified parts of mouth
      - Other and unspecified parts of tongue
      - Other and unspecified urinary organs
      - Other endocrine glands and related structures
      - Ovary
      - Palate
      - Pancreas
      - Parotid gland
      - Penis
      - Peripheral nerves and autonomic nervous system
      - Placenta
      - Prostate gland
      - Pyriform sinus
      - Rectosigmoid junction
      - Rectum
      - Renal pelvis
      - Retroperitoneum and peritoneum
      - Skin
      - Small intestine
      - Spinal cord, cranial nerves, and other parts of central nervous system
      - Stomach
      - Testis
      - Thymus
      - Thyroid gland
      - Tonsil
      - Trachea
      - Unknown primary site
      - Ureter
      - Uterus, NOS
      - Vagina
      - Vulva
      type: string
    Procedure:
      type: object
      description: Subclass of ModelSerializer
      properties:
        code:
          type: object
          additionalProperties: {}
          description: An ontology term that represents a clinical procedure performed
            on a subject.
        body_site:
          type: object
          additionalProperties: {}
          nullable: true
          description: An ontology term that is specified when it is not possible
            to represent the procedure with a single ontology class.
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - code
    ProcedureRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        code:
          type: object
          additionalProperties: {}
          description: An ontology term that represents a clinical procedure performed
            on a subject.
        body_site:
          type: object
          additionalProperties: {}
          nullable: true
          description: An ontology term that is specified when it is not possible
            to represent the procedure with a single ontology class.
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
      required:
      - code
    Program:
      type: object
      properties:
        program_id:
          type: string
          maxLength: 64
          pattern: ^[A-Za-z0-9\-\._]{1,64}
        name:
          type: string
          maxLength: 255
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
      required:
      - name
      - program_id
    ProgramRequest:
      type: object
      properties:
        program_id:
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[A-Za-z0-9\-\._]{1,64}
        name:
          type: string
          minLength: 1
          maxLength: 255
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
      required:
      - name
      - program_id
    Project:
      type: object
      properties:
        identifier:
          type: string
          format: uuid
          readOnly: true
        datasets:
          type: array
          items:
            $ref: '#/components/schemas/Dataset'
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - title
    ProjectRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
      required:
      - title
    PublicListIndividuals_response:
      type: object
      properties:
        count:
          type: object
          additionalProperties: {}
      required:
      - count
    Radiation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        radiation_therapy_modality:
          $ref: '#/components/schemas/RadiationTherapyModalityEnum'
        radiation_therapy_type:
          $ref: '#/components/schemas/RadiationTherapyTypeEnum'
        anatomical_site_irradiated:
          $ref: '#/components/schemas/AnatomicalSiteIrradiatedEnum'
        radiation_therapy_fractions:
          type: integer
          maximum: 32767
          minimum: 0
        radiation_therapy_dosage:
          type: integer
          maximum: 32767
          minimum: 0
        radiation_boost:
          type: boolean
        reference_radiation_treatment_id:
          type: string
          maxLength: 64
        program_id:
          type: string
        submitter_donor_id:
          type: string
        submitter_treatment_id:
          type: string
      required:
      - anatomical_site_irradiated
      - program_id
      - radiation_boost
      - radiation_therapy_dosage
      - radiation_therapy_fractions
      - radiation_therapy_modality
      - radiation_therapy_type
      - submitter_donor_id
      - submitter_treatment_id
    RadiationRequest:
      type: object
      properties:
        radiation_therapy_modality:
          $ref: '#/components/schemas/RadiationTherapyModalityEnum'
        radiation_therapy_type:
          $ref: '#/components/schemas/RadiationTherapyTypeEnum'
        anatomical_site_irradiated:
          $ref: '#/components/schemas/AnatomicalSiteIrradiatedEnum'
        radiation_therapy_fractions:
          type: integer
          maximum: 32767
          minimum: 0
        radiation_therapy_dosage:
          type: integer
          maximum: 32767
          minimum: 0
        radiation_boost:
          type: boolean
        reference_radiation_treatment_id:
          type: string
          maxLength: 64
        program_id:
          type: string
          minLength: 1
        submitter_donor_id:
          type: string
          minLength: 1
        submitter_treatment_id:
          type: string
          minLength: 1
      required:
      - anatomical_site_irradiated
      - program_id
      - radiation_boost
      - radiation_therapy_dosage
      - radiation_therapy_fractions
      - radiation_therapy_modality
      - radiation_therapy_type
      - submitter_donor_id
      - submitter_treatment_id
    RadiationTherapyModalityEnum:
      enum:
      - Megavoltage radiation therapy using photons (procedure)
      - Teleradiotherapy using electrons (procedure)
      - Teleradiotherapy protons (procedure)
      - Teleradiotherapy neutrons (procedure)
      - Brachytherapy (procedure)
      - Other
      type: string
    RadiationTherapyTypeEnum:
      enum:
      - External
      - Internal
      type: string
    ReferencePathologyEnum:
      enum:
      - 'Yes'
      - 'No'
      - Not done
      - Unknown
      type: string
    RelapseTypeEnum:
      enum:
      - Distant recurrence/metastasis
      - Local recurrence
      - Local recurrence and distant metastasis
      - Progression (liquid tumours)
      - Biochemical progression
      type: string
    ResidualTumourClassificationEnum:
      enum:
      - Not applicable
      - RX
      - R0
      - R1
      - R2
      - Unknown
      type: string
    ResolutionStatusEnum:
      enum:
      - UNKNOWN
      - SOLVED
      - UNSOLVED
      - IN_PROGRESS
      type: string
    Resource:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: string
          description: For OBO ontologies, the value of this string MUST always be
            the official OBO ID, which is always equivalent to the ID prefix in lower
            case. For other resources use the prefix in identifiers.org.
          maxLength: 200
        name:
          type: string
          description: The full name of the resource or ontology referred to by the
            id element.
          maxLength: 200
        namespace_prefix:
          type: string
          description: Prefix for objects from this resource. In the case of ontology
            resources, this should be the CURIE prefix.
          maxLength: 200
        url:
          type: string
          format: uri
          description: Resource URL. In the case of ontologies, this should be an
            OBO or OWL file. Other resources should link to the official or top-level
            url.
          maxLength: 200
        version:
          type: string
          description: The version of the resource or ontology used to make the annotation.
          maxLength: 200
        iri_prefix:
          type: string
          format: uri
          description: The IRI prefix, when used with the namespace prefix and an
            object ID, should resolve the term or object from the resource in question.
          maxLength: 200
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - id
      - iri_prefix
      - name
      - namespace_prefix
      - url
      - version
    ResourceRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: string
          minLength: 1
          description: For OBO ontologies, the value of this string MUST always be
            the official OBO ID, which is always equivalent to the ID prefix in lower
            case. For other resources use the prefix in identifiers.org.
          maxLength: 200
        name:
          type: string
          minLength: 1
          description: The full name of the resource or ontology referred to by the
            id element.
          maxLength: 200
        namespace_prefix:
          type: string
          minLength: 1
          description: Prefix for objects from this resource. In the case of ontology
            resources, this should be the CURIE prefix.
          maxLength: 200
        url:
          type: string
          format: uri
          minLength: 1
          description: Resource URL. In the case of ontologies, this should be an
            OBO or OWL file. Other resources should link to the official or top-level
            url.
          maxLength: 200
        version:
          type: string
          minLength: 1
          description: The version of the resource or ontology used to make the annotation.
          maxLength: 200
        iri_prefix:
          type: string
          format: uri
          minLength: 1
          description: The IRI prefix, when used with the namespace prefix and an
            object ID, should resolve the term or object from the resource in question.
          maxLength: 200
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
      required:
      - id
      - iri_prefix
      - name
      - namespace_prefix
      - url
      - version
    ResponseToTreatmentCriteriaMethodEnum:
      enum:
      - RECIST 1.1
      - iRECIST
      - Cheson CLL 2012 Oncology Response Criteria
      - Response Assessment in Neuro-Oncology (RANO)
      - AML Response Criteria
      - Physician Assessed Response Criteria
      type: string
    ResponseToTreatmentEnum:
      enum:
      - Complete response
      - Partial response
      - Progressive disease
      - Stable disease
      - Immune complete response (iCR)
      - Immune partial response (iPR)
      - Immune uncomfirmed progressive disease (iUPD)
      - Immune confirmed progressive disease (iCPD)
      - Immune stable disease (iSD)
      - Complete remission
      - Partial remission
      - Minor response
      - Complete remission without measurable residual disease (CR MRD-)
      - Complete remission with incomplete hematologic recovery (CRi)
      - Morphologic leukemia-free state
      - Primary refractory disease
      - Hematologic relapse (after CR MRD-, CR, CRi)
      - Molecular relapse (after CR MRD-)
      - Physician assessed complete response
      - Physician assessed partial response
      - Physician assessed stable disease
      - No evidence of disease (NED)
      type: string
    SampleRegistration:
      type: object
      properties:
        submitter_sample_id:
          type: string
          maxLength: 64
          pattern: ^[A-Za-z0-9\-\._]{1,64}
        gender:
          $ref: '#/components/schemas/GenderEnum'
        sex_at_birth:
          $ref: '#/components/schemas/SexAtBirthEnum'
        specimen_tissue_source:
          $ref: '#/components/schemas/SpecimenTissueSourceEnum'
        tumour_normal_designation:
          $ref: '#/components/schemas/TumourNormalDesignationEnum'
        specimen_type:
          $ref: '#/components/schemas/SpecimenTypeEnum'
        sample_type:
          $ref: '#/components/schemas/SampleTypeEnum'
        program_id:
          type: string
        submitter_donor_id:
          type: string
        submitter_specimen_id:
          type: string
      required:
      - gender
      - program_id
      - sample_type
      - sex_at_birth
      - specimen_tissue_source
      - specimen_type
      - submitter_donor_id
      - submitter_sample_id
      - submitter_specimen_id
      - tumour_normal_designation
    SampleRegistrationRequest:
      type: object
      properties:
        submitter_sample_id:
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[A-Za-z0-9\-\._]{1,64}
        gender:
          $ref: '#/components/schemas/GenderEnum'
        sex_at_birth:
          $ref: '#/components/schemas/SexAtBirthEnum'
        specimen_tissue_source:
          $ref: '#/components/schemas/SpecimenTissueSourceEnum'
        tumour_normal_designation:
          $ref: '#/components/schemas/TumourNormalDesignationEnum'
        specimen_type:
          $ref: '#/components/schemas/SpecimenTypeEnum'
        sample_type:
          $ref: '#/components/schemas/SampleTypeEnum'
        program_id:
          type: string
          minLength: 1
        submitter_donor_id:
          type: string
          minLength: 1
        submitter_specimen_id:
          type: string
          minLength: 1
      required:
      - gender
      - program_id
      - sample_type
      - sex_at_birth
      - specimen_tissue_source
      - specimen_type
      - submitter_donor_id
      - submitter_sample_id
      - submitter_specimen_id
      - tumour_normal_designation
    SampleTypeEnum:
      enum:
      - Amplified DNA
      - ctDNA
      - Other DNA enrichments
      - Other RNA fractions
      - polyA+ RNA
      - Protein
      - rRNA-depleted RNA
      - Total DNA
      - Total RNA
      type: string
    SexAtBirthEnum:
      enum:
      - Male
      - Female
      - Other
      - Unknown
      type: string
    SexEnum:
      enum:
      - UNKNOWN_SEX
      - FEMALE
      - MALE
      - OTHER_SEX
      type: string
    SimplePhenopacket:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: string
          description: Unique, arbitrary, researcher-specified identifier for the
            phenopacket.
          maxLength: 200
        phenotypic_features:
          type: array
          items:
            $ref: '#/components/schemas/PhenotypicFeature'
          readOnly: true
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        meta_data:
          type: integer
          description: A structured definition of the resources and ontologies used
            within a phenopacket.
        table:
          type: string
          nullable: true
        biosamples:
          type: array
          items:
            type: string
          description: Samples (e.g. biopsies) taken from the individual, if any.
        genes:
          type: array
          items:
            type: string
          description: Genes deemed to be relevant to the case; application-specific.
        variants:
          type: array
          items:
            type: integer
          description: A list of variants identified in the proband.
        diseases:
          type: array
          items:
            type: integer
          description: A list of diseases diagnosed in the proband.
        hts_files:
          type: array
          items:
            type: string
            format: uri
          description: A list of HTS files derived from the individual.
      required:
      - id
      - meta_data
    SimplePhenopacketRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: string
          minLength: 1
          description: Unique, arbitrary, researcher-specified identifier for the
            phenopacket.
          maxLength: 200
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
        meta_data:
          type: integer
          description: A structured definition of the resources and ontologies used
            within a phenopacket.
        table:
          type: string
          minLength: 1
          nullable: true
        biosamples:
          type: array
          items:
            type: string
            minLength: 1
          description: Samples (e.g. biopsies) taken from the individual, if any.
        genes:
          type: array
          items:
            type: string
            minLength: 1
          description: Genes deemed to be relevant to the case; application-specific.
        variants:
          type: array
          items:
            type: integer
          description: A list of variants identified in the proband.
        diseases:
          type: array
          items:
            type: integer
          description: A list of diseases diagnosed in the proband.
        hts_files:
          type: array
          items:
            type: string
            format: uri
            minLength: 1
          description: A list of HTS files derived from the individual.
      required:
      - id
      - meta_data
    Specimen:
      type: object
      properties:
        submitter_specimen_id:
          type: string
          maxLength: 64
          pattern: ^[A-Za-z0-9\-\._]{1,64}
        pathological_tumour_staging_system:
          oneOf:
          - $ref: '#/components/schemas/StagingSystemEnum'
          - $ref: '#/components/schemas/BlankEnum'
        pathological_t_category:
          oneOf:
          - $ref: '#/components/schemas/TCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        pathological_n_category:
          oneOf:
          - $ref: '#/components/schemas/NCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        pathological_m_category:
          oneOf:
          - $ref: '#/components/schemas/MCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        pathological_stage_group:
          oneOf:
          - $ref: '#/components/schemas/StageGroupEnum'
          - $ref: '#/components/schemas/BlankEnum'
        specimen_collection_date:
          type: string
          maxLength: 32
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
        specimen_storage:
          $ref: '#/components/schemas/SpecimenStorageEnum'
        tumour_histological_type:
          type: string
          maxLength: 128
          pattern: ^[8,9]{1}[0-9]{3}/[0,1,2,3,6,9]{1}[1-9]{0,1}$
        specimen_anatomic_location:
          type: string
          maxLength: 32
          pattern: ^[C][0-9]{2}(.[0-9]{1})?$
        reference_pathology_confirmed_diagnosis:
          oneOf:
          - $ref: '#/components/schemas/ReferencePathologyEnum'
          - $ref: '#/components/schemas/BlankEnum'
        reference_pathology_confirmed_tumour_presence:
          oneOf:
          - $ref: '#/components/schemas/ReferencePathologyEnum'
          - $ref: '#/components/schemas/BlankEnum'
        tumour_grading_system:
          oneOf:
          - $ref: '#/components/schemas/TumourGradingSystemEnum'
          - $ref: '#/components/schemas/BlankEnum'
        tumour_grade:
          oneOf:
          - $ref: '#/components/schemas/TumourGradeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        percent_tumour_cells_range:
          oneOf:
          - $ref: '#/components/schemas/PercentTumourCellsRangeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        percent_tumour_cells_measurement_method:
          oneOf:
          - $ref: '#/components/schemas/PercentTumourCellsMeasurementMethodEnum'
          - $ref: '#/components/schemas/BlankEnum'
        program_id:
          type: string
        submitter_donor_id:
          type: string
        submitter_primary_diagnosis_id:
          type: string
      required:
      - pathological_m_category
      - pathological_n_category
      - pathological_stage_group
      - pathological_t_category
      - pathological_tumour_staging_system
      - percent_tumour_cells_measurement_method
      - percent_tumour_cells_range
      - program_id
      - reference_pathology_confirmed_diagnosis
      - reference_pathology_confirmed_tumour_presence
      - specimen_anatomic_location
      - specimen_collection_date
      - specimen_storage
      - submitter_donor_id
      - submitter_primary_diagnosis_id
      - submitter_specimen_id
      - tumour_grade
      - tumour_grading_system
      - tumour_histological_type
    SpecimenRequest:
      type: object
      properties:
        submitter_specimen_id:
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[A-Za-z0-9\-\._]{1,64}
        pathological_tumour_staging_system:
          oneOf:
          - $ref: '#/components/schemas/StagingSystemEnum'
          - $ref: '#/components/schemas/BlankEnum'
        pathological_t_category:
          oneOf:
          - $ref: '#/components/schemas/TCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        pathological_n_category:
          oneOf:
          - $ref: '#/components/schemas/NCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        pathological_m_category:
          oneOf:
          - $ref: '#/components/schemas/MCategoryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        pathological_stage_group:
          oneOf:
          - $ref: '#/components/schemas/StageGroupEnum'
          - $ref: '#/components/schemas/BlankEnum'
        specimen_collection_date:
          type: string
          minLength: 1
          maxLength: 32
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
        specimen_storage:
          $ref: '#/components/schemas/SpecimenStorageEnum'
        tumour_histological_type:
          type: string
          maxLength: 128
          pattern: ^[8,9]{1}[0-9]{3}/[0,1,2,3,6,9]{1}[1-9]{0,1}$
        specimen_anatomic_location:
          type: string
          maxLength: 32
          pattern: ^[C][0-9]{2}(.[0-9]{1})?$
        reference_pathology_confirmed_diagnosis:
          oneOf:
          - $ref: '#/components/schemas/ReferencePathologyEnum'
          - $ref: '#/components/schemas/BlankEnum'
        reference_pathology_confirmed_tumour_presence:
          oneOf:
          - $ref: '#/components/schemas/ReferencePathologyEnum'
          - $ref: '#/components/schemas/BlankEnum'
        tumour_grading_system:
          oneOf:
          - $ref: '#/components/schemas/TumourGradingSystemEnum'
          - $ref: '#/components/schemas/BlankEnum'
        tumour_grade:
          oneOf:
          - $ref: '#/components/schemas/TumourGradeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        percent_tumour_cells_range:
          oneOf:
          - $ref: '#/components/schemas/PercentTumourCellsRangeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        percent_tumour_cells_measurement_method:
          oneOf:
          - $ref: '#/components/schemas/PercentTumourCellsMeasurementMethodEnum'
          - $ref: '#/components/schemas/BlankEnum'
        program_id:
          type: string
          minLength: 1
        submitter_donor_id:
          type: string
          minLength: 1
        submitter_primary_diagnosis_id:
          type: string
          minLength: 1
      required:
      - pathological_m_category
      - pathological_n_category
      - pathological_stage_group
      - pathological_t_category
      - pathological_tumour_staging_system
      - percent_tumour_cells_measurement_method
      - percent_tumour_cells_range
      - program_id
      - reference_pathology_confirmed_diagnosis
      - reference_pathology_confirmed_tumour_presence
      - specimen_anatomic_location
      - specimen_collection_date
      - specimen_storage
      - submitter_donor_id
      - submitter_primary_diagnosis_id
      - submitter_specimen_id
      - tumour_grade
      - tumour_grading_system
      - tumour_histological_type
    SpecimenStorageEnum:
      enum:
      - Cut slide
      - Frozen in -70 freezer
      - Frozen in liquid nitrogen
      - Frozen in vapour phase
      - Not Applicable
      - Other
      - Paraffin block
      - RNA later frozen
      - Unknown
      type: string
    SpecimenTissueSourceEnum:
      enum:
      - Amniotic fluid
      - Bile Fluid
      - Whole blood
      - Blood arterial
      - Cord blood
      - Blood venous
      - Bone
      - Serum, Convalescent
      - Cerebral spinal fluid
      - Cervical Mucus
      - Duodenal fluid
      - Blood, Fetal
      - Fluid, Abdomen
      - Genital vaginal
      - Fluid, Hydrocele
      - Fluid, Joint
      - Fluid, Kidney
      - Fluid, Lumbar Sac
      - Marrow
      - Pancreatic fluid
      - Fluid, Pericardial
      - Placenta
      - Pleural fluid (thoracentesis fluid)
      - Saliva
      - Skin
      - Seminal fluid
      - Fluid, synovial (Joint fluid)
      - Sputum
      - Tissue
      - Vitreous Fluid
      - Wound
      type: string
    SpecimenTypeEnum:
      enum:
      - Cell line - derived from normal
      - Cell line - derived from metastatic tumour
      - Cell line - derived from primary tumour
      - Cell line - derived from xenograft tumour
      - Metastatic tumour - additional metastatic
      - Metastatic tumour - metastasis local to lymph node
      - Metastatic tumour - metastasis to distant location
      - Metastatic tumour
      - Normal - tissue adjacent to primary tumour
      - Normal
      - Primary tumour - additional new primary
      - Primary tumour - adjacent to normal
      - Primary tumour
      - Recurrent tumour
      - Xenograft - derived from primary tumour
      - Xenograft - derived from metastatic tumour
      - Xenograft - derived from tumour cell line
      type: string
    StageGroupEnum:
      enum:
      - Occult Carcinoma
      - Stage 0
      - Stage 0a
      - Stage 0is
      - Stage 1
      - Stage 1A
      - Stage 1B
      - Stage A
      - Stage B
      - Stage C
      - Stage I
      - Stage IA
      - Stage IA1
      - Stage IA2
      - Stage IA3
      - Stage IAB
      - Stage IAE
      - Stage IAES
      - Stage IAS
      - Stage IB
      - Stage IB1
      - Stage IB2
      - Stage IBE
      - Stage IBES
      - Stage IBS
      - Stage IC
      - Stage IE
      - Stage IEA
      - Stage IEB
      - Stage IES
      - Stage II
      - Stage II bulky
      - Stage IIA
      - Stage IIA1
      - Stage IIA2
      - Stage IIAE
      - Stage IIAES
      - Stage IIAS
      - Stage IIB
      - Stage IIBE
      - Stage IIBES
      - Stage IIBS
      - Stage IIC
      - Stage IIE
      - Stage IIEA
      - Stage IIEB
      - Stage IIES
      - Stage III
      - Stage IIIA
      - Stage IIIA1
      - Stage IIIA2
      - Stage IIIAE
      - Stage IIIAES
      - Stage IIIAS
      - Stage IIIB
      - Stage IIIBE
      - Stage IIIBES
      - Stage IIIBS
      - Stage IIIC
      - Stage IIIC1
      - Stage IIIC2
      - Stage IIID
      - Stage IIIE
      - Stage IIIES
      - Stage IIIS
      - Stage IIS
      - Stage IS
      - Stage IV
      - Stage IVA
      - Stage IVA1
      - Stage IVA2
      - Stage IVAE
      - Stage IVAES
      - Stage IVAS
      - Stage IVB
      - Stage IVBE
      - Stage IVBES
      - Stage IVBS
      - Stage IVC
      - Stage IVE
      - Stage IVES
      - Stage IVS
      - In situ
      - Localized
      - Regionalized
      - Distant
      type: string
    StagingSystemEnum:
      enum:
      - AJCC 8th edition
      - AJCC 7th edition
      - AJCC 6th edition
      - Ann Arbor staging system
      - Binet staging system
      - Durie-Salmon staging system
      - FIGO staging system
      - Lugano staging system
      - Rai staging system
      - Revised International staging system (RISS)
      - SEER staging system
      - St Jude staging system
      type: string
    StatusEnum:
      enum:
      - UNKNOWN
      - REJECTED
      - CANDIDATE
      - CAUSATIVE
      type: string
    Surgery:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        surgery_type:
          $ref: '#/components/schemas/SurgeryTypeEnum'
        surgery_site:
          type: string
          maxLength: 255
          pattern: ^[C][0-9]{2}(.[0-9]{1})?$
        surgery_location:
          oneOf:
          - $ref: '#/components/schemas/SurgeryLocationEnum'
          - $ref: '#/components/schemas/BlankEnum'
        tumour_focality:
          oneOf:
          - $ref: '#/components/schemas/TumourFocalityEnum'
          - $ref: '#/components/schemas/BlankEnum'
        residual_tumour_classification:
          oneOf:
          - $ref: '#/components/schemas/ResidualTumourClassificationEnum'
          - $ref: '#/components/schemas/BlankEnum'
        margin_types_involved:
          oneOf:
          - $ref: '#/components/schemas/MarginTypesEnum'
          - $ref: '#/components/schemas/BlankEnum'
        margin_types_not_involved:
          oneOf:
          - $ref: '#/components/schemas/MarginTypesEnum'
          - $ref: '#/components/schemas/BlankEnum'
        margin_types_not_assessed:
          oneOf:
          - $ref: '#/components/schemas/MarginTypesEnum'
          - $ref: '#/components/schemas/BlankEnum'
        lymphovascular_invasion:
          oneOf:
          - $ref: '#/components/schemas/LymphovascularInvasionEnum'
          - $ref: '#/components/schemas/BlankEnum'
        perineural_invasion:
          oneOf:
          - $ref: '#/components/schemas/PerineuralInvasionEnum'
          - $ref: '#/components/schemas/BlankEnum'
        tumour_length:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        tumour_width:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        greatest_dimension_tumour:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        program_id:
          type: string
        submitter_donor_id:
          type: string
        submitter_specimen_id:
          type: string
        submitter_treatment_id:
          type: string
      required:
      - lymphovascular_invasion
      - margin_types_involved
      - margin_types_not_assessed
      - margin_types_not_involved
      - perineural_invasion
      - program_id
      - residual_tumour_classification
      - submitter_donor_id
      - submitter_specimen_id
      - submitter_treatment_id
      - surgery_location
      - surgery_site
      - surgery_type
      - tumour_focality
    SurgeryLocationEnum:
      enum:
      - Local recurrence
      - Metastatic
      - Primary
      type: string
    SurgeryRequest:
      type: object
      properties:
        surgery_type:
          $ref: '#/components/schemas/SurgeryTypeEnum'
        surgery_site:
          type: string
          maxLength: 255
          pattern: ^[C][0-9]{2}(.[0-9]{1})?$
        surgery_location:
          oneOf:
          - $ref: '#/components/schemas/SurgeryLocationEnum'
          - $ref: '#/components/schemas/BlankEnum'
        tumour_focality:
          oneOf:
          - $ref: '#/components/schemas/TumourFocalityEnum'
          - $ref: '#/components/schemas/BlankEnum'
        residual_tumour_classification:
          oneOf:
          - $ref: '#/components/schemas/ResidualTumourClassificationEnum'
          - $ref: '#/components/schemas/BlankEnum'
        margin_types_involved:
          oneOf:
          - $ref: '#/components/schemas/MarginTypesEnum'
          - $ref: '#/components/schemas/BlankEnum'
        margin_types_not_involved:
          oneOf:
          - $ref: '#/components/schemas/MarginTypesEnum'
          - $ref: '#/components/schemas/BlankEnum'
        margin_types_not_assessed:
          oneOf:
          - $ref: '#/components/schemas/MarginTypesEnum'
          - $ref: '#/components/schemas/BlankEnum'
        lymphovascular_invasion:
          oneOf:
          - $ref: '#/components/schemas/LymphovascularInvasionEnum'
          - $ref: '#/components/schemas/BlankEnum'
        perineural_invasion:
          oneOf:
          - $ref: '#/components/schemas/PerineuralInvasionEnum'
          - $ref: '#/components/schemas/BlankEnum'
        tumour_length:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        tumour_width:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        greatest_dimension_tumour:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        program_id:
          type: string
          minLength: 1
        submitter_donor_id:
          type: string
          minLength: 1
        submitter_specimen_id:
          type: string
          minLength: 1
        submitter_treatment_id:
          type: string
          minLength: 1
      required:
      - lymphovascular_invasion
      - margin_types_involved
      - margin_types_not_assessed
      - margin_types_not_involved
      - perineural_invasion
      - program_id
      - residual_tumour_classification
      - submitter_donor_id
      - submitter_specimen_id
      - submitter_treatment_id
      - surgery_location
      - surgery_site
      - surgery_type
      - tumour_focality
    SurgeryTypeEnum:
      enum:
      - Axillary Clearance
      - Axillary lymph nodes sampling
      - Biopsy
      - Bypass Gastrojejunostomy
      - Cholecystectomy
      - Cholecystojejunostomy
      - Completion gastrectomy
      - Debridement of pancreatic and peripancreatic necrosis
      - Debulking
      - Distal subtotal pancreatectomy
      - Drainage of abscess
      - Duodenal preserving pancreatic head resection
      - Endoscopic biopsy
      - Endoscopic brushings of GIT
      - Enucleation
      - Esophageal bypass surgery/jejunostomy only
      - Exploratory laparotomy
      - Fine needle aspiration biopsy
      - Gastric Antrectomy
      - Hepaticojejunostomy
      - Ivor Lewis subtotal esophagectomy
      - Laparotomy (Open and Shut)
      - Left thoracoabdominal incision
      - Lobectomy
      - Mammoplasty
      - Mastectomy
      - McKeown esophagectomy
      - Merendino procedure
      - Minimally invasive esophagectomy
      - Pancreaticoduodenectomy
      - Pancreaticojejunostomy, side-to-side anastomosis
      - Pneumonectomy
      - Proximal subtotal gastrectomy
      - Pylorus-sparing Whipple operation
      - Radical pancreaticoduodenectomy
      - Reexcision
      - Segmentectomy
      - Sentinal Lymph Node Biopsy
      - Spleen preserving distal pancreatectomy
      - Splenectomy
      - Subtotal pancreatectomy
      - Thoracotomy (Open & Shut)
      - Total gastrectomy
      - Total gastrectomy with extended lymphadenectomy
      - Total pancreatectomy
      - Transhiatal esophagectomy
      - Triple bypass of pancreas
      - Wedge/localised gastric resection
      - Wide Local Excision
      type: string
    TCategoryEnum:
      enum:
      - T0
      - T1
      - T1a
      - T1a1
      - T1a2
      - T1a(s)
      - T1a(m)
      - T1b
      - T1b1
      - T1b2
      - T1b(s)
      - T1b(m)
      - T1c
      - T1d
      - T1mi
      - T2
      - T2(s)
      - T2(m)
      - T2a
      - T2a1
      - T2a2
      - T2b
      - T2c
      - T2d
      - T3
      - T3(s)
      - T3(m)
      - T3a
      - T3b
      - T3c
      - T3d
      - T3e
      - T4
      - T4a
      - T4a(s)
      - T4a(m)
      - T4b
      - T4b(s)
      - T4b(m)
      - T4c
      - T4d
      - T4e
      - Ta
      - Tis
      - Tis(DCIS)
      - Tis(LAMN)
      - Tis(LCIS)
      - Tis(Paget)
      - Tis(Paget’s)
      - Tis pu
      - Tis pd
      - TX
      type: string
    Table:
      type: object
      description: Subclass of ModelSerializer
      properties:
        ownership_record:
          type: string
        identifier:
          type: string
          readOnly: true
        dataset:
          allOf:
          - $ref: '#/components/schemas/Dataset'
          readOnly: true
        name:
          type: string
          maxLength: 200
        data_type:
          $ref: '#/components/schemas/DataTypeEnum'
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - data_type
      - name
      - ownership_record
    TableOwnership:
      type: object
      description: Subclass of ModelSerializer
      properties:
        table_id:
          type: string
          maxLength: 200
        service_id:
          type: string
          maxLength: 200
        service_artifact:
          type: string
          maxLength: 200
      required:
      - service_id
      - table_id
    TableOwnershipRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        table_id:
          type: string
          minLength: 1
          maxLength: 200
        service_id:
          type: string
          minLength: 1
          maxLength: 200
        service_artifact:
          type: string
          minLength: 1
          maxLength: 200
      required:
      - service_id
      - table_id
    TableRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        ownership_record:
          type: string
          minLength: 1
        name:
          type: string
          minLength: 1
          maxLength: 200
        data_type:
          $ref: '#/components/schemas/DataTypeEnum'
      required:
      - data_type
      - name
      - ownership_record
    Treatment:
      type: object
      properties:
        submitter_treatment_id:
          type: string
          maxLength: 64
          pattern: ^[A-Za-z0-9\-\._]{1,64}
        treatment_type:
          $ref: '#/components/schemas/TreatmentTypeEnum'
        is_primary_treatment:
          $ref: '#/components/schemas/BooleanEnum'
        treatment_start_date:
          type: string
          maxLength: 32
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
        treatment_end_date:
          type: string
          maxLength: 32
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
        treatment_setting:
          $ref: '#/components/schemas/TreatmentSettingEnum'
        treatment_intent:
          $ref: '#/components/schemas/TreatmentIntentEnum'
        response_to_treatment_criteria_method:
          $ref: '#/components/schemas/ResponseToTreatmentCriteriaMethodEnum'
        response_to_treatment:
          $ref: '#/components/schemas/ResponseToTreatmentEnum'
        days_per_cycle:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        number_of_cycles:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        program_id:
          type: string
        submitter_donor_id:
          type: string
        submitter_primary_diagnosis_id:
          type: string
      required:
      - is_primary_treatment
      - program_id
      - response_to_treatment
      - response_to_treatment_criteria_method
      - submitter_donor_id
      - submitter_primary_diagnosis_id
      - submitter_treatment_id
      - treatment_end_date
      - treatment_intent
      - treatment_setting
      - treatment_start_date
      - treatment_type
    TreatmentIntentEnum:
      enum:
      - Curative
      - Palliative
      type: string
    TreatmentRequest:
      type: object
      properties:
        submitter_treatment_id:
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[A-Za-z0-9\-\._]{1,64}
        treatment_type:
          $ref: '#/components/schemas/TreatmentTypeEnum'
        is_primary_treatment:
          $ref: '#/components/schemas/BooleanEnum'
        treatment_start_date:
          type: string
          minLength: 1
          maxLength: 32
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
        treatment_end_date:
          type: string
          minLength: 1
          maxLength: 32
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
        treatment_setting:
          $ref: '#/components/schemas/TreatmentSettingEnum'
        treatment_intent:
          $ref: '#/components/schemas/TreatmentIntentEnum'
        response_to_treatment_criteria_method:
          $ref: '#/components/schemas/ResponseToTreatmentCriteriaMethodEnum'
        response_to_treatment:
          $ref: '#/components/schemas/ResponseToTreatmentEnum'
        days_per_cycle:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        number_of_cycles:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        program_id:
          type: string
          minLength: 1
        submitter_donor_id:
          type: string
          minLength: 1
        submitter_primary_diagnosis_id:
          type: string
          minLength: 1
      required:
      - is_primary_treatment
      - program_id
      - response_to_treatment
      - response_to_treatment_criteria_method
      - submitter_donor_id
      - submitter_primary_diagnosis_id
      - submitter_treatment_id
      - treatment_end_date
      - treatment_intent
      - treatment_setting
      - treatment_start_date
      - treatment_type
    TreatmentSettingEnum:
      enum:
      - Adjuvant
      - Advanced/Metastatic
      - Neoadjuvant
      - Not applicable
      type: string
    TreatmentTypeEnum:
      enum:
      - Ablation
      - Bone marrow transplant
      - Chemotherapy
      - Endoscopic therapy
      - Hormonal therapy
      - Immunotherapy
      - No treatment
      - Other targeting molecular therapy
      - Photodynamic therapy
      - Radiation therapy
      - Stem cell transplant
      - Surgery
      type: string
    TumourFocalityEnum:
      enum:
      - Cannot be assessed
      - Multifocal
      - Not applicable
      - Unifocal
      - Unknown
      type: string
    TumourGradeEnum:
      enum:
      - Low grade
      - High grade
      - GX
      - G1
      - G2
      - G3
      - G4
      - Low
      - High
      - Grade I
      - Grade II
      - Grade III
      - Grade IV
      - Grade Group 1
      - Grade Group 2
      - Grade Group 3
      - Grade Group 4
      - Grade Group 5
      type: string
    TumourGradingSystemEnum:
      enum:
      - FNCLCC grading system
      - Four-tier grading system
      - Gleason grade group system
      - Grading system for GISTs
      - Grading system for GNETs
      - ISUP grading system
      - Nuclear grading system for DCIS
      - Scarff-Bloom-Richardson grading system
      - Three-tier grading system
      - Two-tier grading system
      - WHO grading system for CNS tumours
      type: string
    TumourNormalDesignationEnum:
      enum:
      - Normal
      - Tumour
      type: string
    Variant:
      type: object
      description: Subclass of ModelSerializer
      properties:
        id:
          type: integer
          readOnly: true
        allele_type:
          allOf:
          - $ref: '#/components/schemas/AlleleTypeEnum'
          description: One of four allele types.
        allele:
          type: object
          additionalProperties: {}
          description: The variant's corresponding allele
        zygosity:
          type: object
          additionalProperties: {}
          nullable: true
          description: An ontology term taken from the Genotype Ontology (GENO) representing
            the zygosity of the variant.
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - allele
      - allele_type
    VariantRequest:
      type: object
      description: Subclass of ModelSerializer
      properties:
        allele_type:
          allOf:
          - $ref: '#/components/schemas/AlleleTypeEnum'
          description: One of four allele types.
        allele:
          type: object
          additionalProperties: {}
          description: The variant's corresponding allele
        zygosity:
          type: object
          additionalProperties: {}
          nullable: true
          description: An ontology term taken from the Genotype Ontology (GENO) representing
            the zygosity of the variant.
        extra_properties:
          type: object
          additionalProperties: {}
          nullable: true
          description: Extra properties that are not supported by current schema.
      required:
      - allele
      - allele_type
    chord_phenopacket_schema_response:
      type: object
      properties:
        PHENOPACKET_SCHEMA:
          type: object
          additionalProperties: {}
      required:
      - PHENOPACKET_SCHEMA
    get_experiment_schema_response:
      type: object
      properties:
        EXPERIMENT_SCHEMA:
          type: object
          additionalProperties: {}
      required:
      - EXPERIMENT_SCHEMA
    moh_overview_schema_response:
      type: object
      properties:
        cohort_count:
          type: integer
        individual_count:
          type: integer
      required:
      - cohort_count
      - individual_count
    overview_response:
      type: object
      properties:
        phenopackets:
          type: integer
        data_type_specific:
          type: object
          additionalProperties: {}
      required:
      - data_type_specific
      - phenopackets
    public_overview_response:
      type: object
      properties:
        datasets:
          type: string
      required:
      - datasets
    public_search_fields_response:
      type: object
      properties:
        sections:
          type: object
          additionalProperties: {}
      required:
      - sections
  securitySchemes:
    BentoRemoteUserAuthentication:
      type: apiKey
      in: header
      name: api_key
