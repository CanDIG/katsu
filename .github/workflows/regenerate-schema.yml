name: Docs

on:
  pull_request:
    types: [review_requested, ready_for_review]

    
jobs:
  update_schema:
    name: Regenerate schema
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: python -m pip install -r requirements/base.txt

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Create package.json file
        run: |
          echo '{"name": "my-project", "version": "1.0.0"}' > package.json

      - name: Install npm
        run: npm install

      - name: Install widdershins
        run: npm install -g widdershins

      - name: Install PyYAML
        run: pip install PyYAML

      - name: Generate new schema.json
        run: |
          export DJANGO_SETTINGS_MODULE=config.settings.base
          python manage.py export_openapi_schema --api chord_metadata_service.mohpackets.apis.core.api | python -m json.tool > chord_metadata_service/mohpackets/docs/schema.json

      # - name: Convert schema to OpenAPI documentation
      #   run: |
      #     npx widdershins ./chord_metadata_service/mohpackets/docs/schema.json -o ./chord_metadata_service/mohpackets/docs/schema.md -u ./chord_metadata_service/mohpackets/docs/widdershins/templates/openapi3 -c true --omitHeader true  

      # - name: Convert schema.json to schema.yml
      #   run: python -c 'import json, yaml; json.load(open("chord_metadata_service/mohpackets/docs/schema.json")); print(yaml.dump(json.load(open("chord_metadata_service/mohpackets/docs/schema.json"))))' > chord_metadata_service/mohpackets/docs/schema.yml

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          file_pattern: 'chord_metadata_service/mohpackets/docs/schema.*'
          commit_message: Regenerate schema
          push_options: '--force'