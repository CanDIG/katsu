name: Docs

on:
  push:
    branches-ignore:
      - develop
      - master

jobs:
  generate-moh-schema:
    name: Update MoH schema
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: python -m pip install -r requirements-candig-dev.txt

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Create package.json file
        run: |
          echo '{"name": "my-project", "version": "1.0.0"}' > package.json
          
      - name: Install npm
        run: npm install
      
      - name: Install widdershins
        run: npm install -g widdershins

      - name: Generate new schema.yml
        run: python manage.py spectacular --file ./chord_metadata_service/mohpackets/docs/schema.yml --validate --fail-on-warn

      - name: Convert schema to OpenAPI documentation
        run: |
          npx widdershins ./chord_metadata_service/mohpackets/docs/schema.yml -o ./chord_metadata_service/mohpackets/docs/openapi.md -u ./chord_metadata_service/mohpackets/docs/widdershins/templates/openapi3 -c true --omitHeader true
      
      - name: Install octokit/rest
        run: npm install @octokit/rest

      - name: Update schema.yml and openapi.md in repo
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const { Octokit } = require('@octokit/rest');
            const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });

            // Read the updated files
            const schemaYml = fs.readFileSync('./chord_metadata_service/mohpackets/docs/schema.yml', 'utf8');
            const openApiMd = fs.readFileSync('./chord_metadata_service/mohpackets/docs/openapi.md', 'utf8');

            // Commit and push changes
            await octokit.repos.createOrUpdateFileContents({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: encodeURIComponent('chord_metadata_service/mohpackets/docs/schema.yml'),
              message: 'Update schema.yml',
              content: Buffer.from(schemaYml).toString('base64'),
              sha: context.payload.after
            });


